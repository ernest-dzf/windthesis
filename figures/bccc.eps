%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: bccc.pdf
%%Creator: Adobe Acrobat 11.0.19
%%For: victor
%%CreationDate: 2017/4/27, 12:20:06
%%BoundingBox: -1 0 664 367
%%HiResBoundingBox: 0 0 663.6600 366.6300
%%CropBox: 0 0 663.6600 366.6300
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1030 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c006 80.159825, 2016/09/16-03:31:08        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2017-04-27T12:19:35+08:00"
   xmp:ModifyDate="2017-04-27T12:19:58+08:00"
   xmp:MetadataDate="2017-04-27T12:19:58+08:00"
   pdf:Producer="Microsoft: Print To PDF"
   xmpMM:DocumentID="uuid:2118dc51-eb3c-4e30-abdf-bd21e3fac660"
   xmpMM:InstanceID="uuid:102b1af8-0faa-44a9-b30b-d7b3019588ff">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>victor</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-ç»Ÿåł¾32.vsdx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -366.63 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 366.63 li
663.66 366.63 li
663.66 0 li
cp
clp
40.83 32.52 mo
40.83 42.48 li
50.79 52.56 li
60.75 42.48 li
60.75 32.52 li
40.83 32.52 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.750179 .679652 .670191 .901488 cmyk
ef
.24 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
40.83 32.52 mo
40.83 42.48 li
50.79 52.56 li
60.75 42.48 li
60.75 32.52 li
40.83 32.52 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YZDDLT+CIDFont+F1-GBK-EUC-H)
%%Title: (YZDDLT+CIDFont+F1-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YZDDLT+CIDFont+F1-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
81 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7ECCD10D84715DED131012A8B85BC71DE184A412A8CD7387157A3BD821CF
216B6F38127FBEE1EC9BD373B8D55F9BA6C4D9B25B5D83E7051052FD5834DE62
64855AD7B856C0588CD8AAD6807600877EC81A4A840D80A8C503E2914E6D14B4
031AC23525AD7F93F7FF3E95FADE0D273A4369ED1B421A1A11CCC3C142CC5573
FD51D096FE468891B54B510E9053DB6AED41C3A27C9DD1429558EC8F6D3FACD0
3EB4FF5C6777> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H /Identity-H 0 [/YZDDLT+CIDFont+F1-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.04001 0 0 -8.03982 0 0 ]msf
46.8231 42.4894 mo
(\000,\000Q)
[3.93965 0 ]xsh
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
16021 <001C60D8A8C9B5EE3103C37D4CFF8B1C32F95590077AC20350698CA8C
68B7610700E33B2E0E8DECAECEFFC8ECC3026157937F71226BF120AE1AA559EA
0FE3A6F6004F4CAA8FEAF502EDED9D0FDA8C9626E4FB006DAA2C2C894965FB6A
3CE8464C6CC9AE2980786A8213E9ACEEA6CAD04A213E1C87629A93B291F232D5
C72F76CBA8E65CC54641E0082B55F1C60495CF406B362E53CE3ECE25A93032B8
576DDC0ACC139A37D0A2C683AC77ECA72E52D605E936E3DBBC5496DA7152E8F1
BA1E6CADFD17553DB61F41AF1E2A115F66FC141961BAA219E130DC3903AAFE86
AE9A423E054A8F35434059575776984BCC83AC5E8ABDF9EED88C0B571B68EBCF
57329D211A301DDA80822DA8C8D9C4082CB2EFA61BCF34CF734F5A81183862C2
1BE41FC2EA7D4> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
6.76083 24.361 mo
(>\225)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
6.76083 24.361 mo
(>\225) false chp
.41 lw
0 lc
0 lj
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
1711 <001C60D8A8C9B5EE310264F818A6E5FDDB2E395DC06DDE7A628FB019B7
B44B4772FCD673604502A2BB8BCC6BF27BF1274DADBF81D23773DF9130927828
3772C223E9E3E67673C4AAE079743002FBDB33F51E4CE81D126C68C76E98350C
83D748668EC909BBC52B38A094470EE5C93DA626D0F343574F8F8ADF2A62B445
88F7640508EE1299A076002E8BB310D8AC97ACC6FD4F56E6810589ED1E981D11
3B6E5276DDCF27F27F1B96B9A7F139AE3CBC6D7B6AA4B0E76D934F1D84308006
DD41BEB9CA583E66FE100C8E6B9BA1E9E7198557DC42BA2D7936F948C2080699
1A67E671B593C8C68BAD419FEF996E69A1C291E2840715ACC5EEB93B55697A00
9D064F118751A5693CDD8EFB6E1F71A1F7FC799BCE6AF2CE10E10F0F99EAB93C
61C23D87CE713308EF0FF5C391DA30A5D2945EAC010C0817AAC5F94422C155A2
B3FC12703BC55AC435D8B45BB010AFB77F9639923863A3541B6C91F12AF272B3
1A87A935E7E362E91D6C4CB57075D8D977A06CC8D5F93AAC2CBC7F28627F3D1B
6E84507E63DEECDA799B12DE3DC6D92DC3B89083F436C6CB675725A565CC134C
DF12ADAFBD9A7C526C8026FA6A5E97321DE0> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
16.8204 24.361 mo
(\006\257)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
16.8204 24.361 mo
(\006\257) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
18429 <001C60D8A8C9B5EE3103A00BA9709C24739630D70DCB9ED5B1C939DBD
B8753108C6B6AEB21B840A8AB05D9D88231EEEC773ED8DCAB9F114E6D3CF2238
245137E5CA60C4FA04C5232FD6BE880114634F77C3E07799397C5EB06AAAA0F0
EE78FB0B8638EB6D6514EB00BA27CAFC4B2EC42C18E750ADEECA23EC0D4B5F03
D1D3AC48BBFECBD34692578145A32B6CDCA8BF61577B597C9FF78C7439FF83BB
11B84D36F2C75A2CBC00940EE31AF07140C6C8699E362591BBD0D609C7CE018B
C2F8F8C55686919A01102B0C0380342A5F89DFBF3BDEC97376B335D5239131B3
9D0692785AEDBB3F28934189005A1E6577D0654B419C04E0FBDDED12484D6639
AF3E10F5ABD145D3C9D23> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
26.7804 24.361 mo
(G\375)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
26.7804 24.361 mo
(G\375) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
1360 <001C60D8A8C9B5EE3100DDA4DE71FF133B587A7820849B44EC06315597
25376E5C7E4E716AE7F0EE127F868B2474A72A4B051A1BF402C2A8986C5A4536
D3C9627562AB2D32B4686C13E66F59EC1ECBEB841C0D6B813D95DD45F300F427
EBA2A8B7CA2EA9E8F772E265DF31B525DCDE7515233F0CFC8A677C7C86261627
3DBE6C6A128A6E2D97420B711A783ACB60C4A33374F6202E5A6CA892CCE56D3A
C2214824017DE6752F9E5E9FB2071369D53830FCB23D5C4CFB9CE0E22C9D8F6B
0C0A01320E767981211ED95AD48862CD946C318DEB88437AC49C329412E68EF5
879B36C9258EE0A2527979787D941C0AE08CF664C82FD90863A5B78EFF4FC400
EE05B4BD91E1EBB8DF784998C95D1E9280269F8F466E2ECC91D8BC4BC842473A
E45B1C> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
36.8399 24.361 mo
(\005P)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
36.8399 24.361 mo
(\005P) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
3892 <001C60D8A8C9B5EE3102603E2E58CA84251A9593169BED5D4BF3DB54BE
3D43A6D54FB6157073936252CFEE5F4CE0D197F8CF3A97640DCAF8D0FBBF352C
F82AD85E2BEDD2D4EC766110D8E7A27879788020BF1B3905A7CEAD3BB0254A35
B5960AFD808144FEEC6740FBD6D639B2928767DF9CB7580A0AB2A3C3CA45B697
66C4E19DD65A7C505A75CFF7B20D928380644870ED2DDDE3130EAC04E4F966EC
28A360D68AEFA8D31341B0431DD5589858D4B4FFFD84D8E0995A67C3905884A0
7CD9BDA3502C9EA6457A0560E9BB2161D6D196A223A95CEB0F6CCE13C38036A8
B88229E0FEBEFCF4F4EC6A6F957224ED2B925F5D012C461A1F2E4B3ABC20D2C1
9AE3DA1B33A3C2E10CFE9810AA4DEC18E4> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
46.9992 24.361 mo
(\0174)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
46.9992 24.361 mo
(\0174) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
10806 <001C60D8A8C9B5EE3117BF1EBEBB6E3E48EB585396D2980FF6078D3F7
088F84A35F07FAC0D26753DB2A217E0DCFE8AD1BD4F76EC054213942CC60C5FE
9F02076D7D19FD45F76F1312867612935353A164EB2AF84A59C9E21F3010ED26
F3E48EE20AD7948BB2262A1DBAFBA05D3E411441F76E92BD34ED394812D5D4F4
04823B3E0B6E973D9B9B4D8D3109AD12AD8BF1DEF7AD716969A30D1B47D2F529
B53DDEAEB28DDD5C8566FAD3E6B9558775034F113216C28B1AEEFDC0A207BEB8
72BBE17FEBEA9A30B3828D8C60ADA4E4B33CF614F47BC0BCE3839DF1AFBA2871
D95B893CE36E00BDA79345AB5F7699F369623BA2EA74526907C83C6456A97A7B
21E826C944E212FFCB87D8453A0472B226CF5B0FDF12238E9> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
56.9592 24.361 mo
(*6)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
56.9592 24.361 mo
(*6) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
17911 <001C60D8A8C9B5EE3102400F957EEEEACED4757D60DAC74E3BE1CC772
3BBB39FC418D6221DB733687BC2B0B96EE63B400DB57C7A042E9B31BBC2E06C9
D90E8862C2669C55E7A97238B06502EF6FA31E01D48C0BB573F49B2956425C66
28F3823EE4CF06445576DEFB797439720A5FE7DF48D2EC2A80272FABBA696FB2
D3C89598C0B7D9F815F814CF1753B8E0087B0D91CF3AC3B3ADE478DA788F8E57
C218694DB8412975988104FA9771325B060263496569634A8891C5F33C4767B3
929189741423856A3CC3DEE77E226B0274EF4504EAEEAC6054BDB67328A6115E
A47A52E3DE86F2A6E89203B09F48761C7F011604DD69515BBEDD133EC6229BE5
F76EC772B65600EA9733938FE7DD052C709110AD49E340FB2C48B4C8F6B3F7F3
064C9C502D83E8B2C504945F37EE2001DBCFC095E84BB871BF0609494ECFE93B
306C59B65C6B2CCCFE573D1> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
67.0188 24.361 mo
(E\367)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
67.0188 24.361 mo
(E\367) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
12347 <001C60D8A8C9B5EE310296A92A79A8656DFE29C763CF4E0039F6E2E64
BA358B6A368976A1ADA939015C652F48A51F24A87EEA92F46BA8FAB8E1617252
2D525DD8CC8892A53C8CBE743F92512B16BF8DFBC9D23067D742CD5A01C6E105
35BD88DA16E69C104BF70AD4A6E3DBF9920CC5320C35354079525B9CBFFF9B3D
CEB607C8C4275268378371ECFFE161A398FFD452EBADE275EA88429423171605
0F90DD51CFA05D53CDAC634E00FCCC0461F59C6CFCB6176CCE41657B21ABDD48
E74D47DCDCF2A8A87FE49B020C81B40849F313219257AF427A322184402B077F
893BEFDCE246C032C0DC13DBB45FDDFE792BC7ABECB8C04530E4F2AC17B868A1
2FCE5D2EBD7CF07175891E998F2EEE2F2F63E71B0E78F689B4DC2DBA989BE908
C3AB5A819EBB8C8EBF5C5891BC2A43F685BC17DF7353EFACDB6E9A3C44F30CA2
40D656CA6F9B8D63542> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
77.0783 24.361 mo
(0;)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
77.0783 24.361 mo
(0;) false chp
gsave
[.243164 0 0 .243159 -79.65 -85.08 ]ct
@
grestore newpath
.869987 79.44 mo
100.71 79.44 li
100.71 107.76 li
.869987 107.76 li
cp
.145266 .11136 .11136 0 cmyk
f
.24 lw
1 lc
1 lj
.869987 107.76 mo
100.71 107.76 li
100.71 79.44 li
.869987 79.44 li
.869987 107.76 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 11 GetGlyphDirectory
6656 <001C60D8A8C9B5EE310371EEE73C4E74D1B9A5612D27357FDC0DC38568
74597C77D69A700D983AFA179E764E6CE4F81A7190F65FCD2F3A640646FA8B1A
00C2234F4DDC06DD5A4E2765E7968C52F8610F9E07A884C665A17D8ECEC44361
D369AA9E48082618CC731BA58A1FD4B50D9FD9503BF33FA5296FDFC229883138
3E3E48CE399055A889DED0D3BD80D433902B913D8114AA6A1E1A54D4E502B9B9
0E5FF41194E2B0465A6007D8EE51AB6499E2EF7F778111DDA324BCB4D8520EFD
926920CFB14196F5BCB770AAEFFF5BE348DDBD8E0E30A85B78F3BAEB104BCE63
464DF327FA112B2714BB3B0770DA3B9FFCA3F5196B09390C0F0F416E5BB8329E
1F56CAB980882012BDD9F942A2CF1F6EE2FFD31BB379D7F083CDEF774DEE327E
42F529C1ECC6F118D186EAC16C7E279D03A036AD3CF651C6F988D3CB33114EFB
6CD7968C370C019E1C197BCA1CCCA0F4990D> |
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AD
7B34929E58612742842FA694BB60002C2DD05220F1C4C3C6C4B098B9DCF18D23
6EB21FAC48FE7B65AF85A82D5859D948BF87B3E84834743CF0B31B0B526DE1A8
54D7CE974B5D343C7EF81141AF0C9DB52CFCBA7F0E45CD8D35C03B9BBC4B8AD9
E6CB76943CC95846E39129FA13DC83D2D5280CB7EA00B23613467DDA55E7673E
187A3C49AA319A0A45EB02CA9C217F41B2AF19411D81437B2114AECE3E6C7BD5
F7BB97523DA795637E7D078F65721F2379EC3BF8A9534E1A3ECA6E987616098A
8CCFADC0D2F44D88BE07FD92E288> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01AE29E2F8D6006DEBE28C3E3167B8B0B15C9979E8BC6F967EAE4108
594879B55E7B2B0C1613F0727FC5D41CF3A18A5C9AF47127977CC09BADEA25A0
5207E3A29DB2A627E71F0DE62BA33B64393D52499CD3D050DB6353DA7F8BAAC4
50A2F546392BEFE2730B572B57EA1E5C6F260C4358B586673BB20F89AC3C5FB2
7145> |
76 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132
542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A2721EA3B3B3123F10D
465E3C0C3940519B1D53E494B241521837AD95C41A6B68EB1AF34EFC4D487D67
B41222FB69500F24E6D00BCB0B69D0B47A3176CA18FD9AB9DA036DC8EAC4C434
6F5DE38515260123D047837FF21F02E18B6D3BF3F907A7216BF10CEEB35C> |
71 <001C60D8A8C9B7A73DB9DE1BCCE4263A247071021EB8AE55CA7C7147A349
4A310B64B722AB056CB9BBB166EFF066FBB141267107281DE984C46207287B9B
984D1F52F00EFAEF2A971FA17771F23DC325917D7D8CB59EE828C1AE773CAADB
5BEE091E054049C0F036C5324F8F36FECC3FF555793B4344D5424CB79700B522
0289C7D63ADF70AEB53ABE8EBE30E4F1516453884F4EECD4FC5F98C2ACF1FA14
05184D5C83260E3E2C48C1DB1C98EDBD37151F5DA05C585525B0938E9B006FA3
A852C35224FFD25EF91C6DB6E8E5AF87F0637AD4B6> |
16 <001C60D8A8C9B7A73DB6DF1C647A79F74FB5FAC3D2DC46> |
85 <001C60D8A8C9B7A73DB97983BF28BFD90FC72EE9EF2B660140486BB7EDF6
EBD6F8BCB899A4EB501C6C3D3F4A057E2E2BC5082A8DA39FC13765D4D26515C0
B70E71DEF52C1559A08E5B2C61E8774E9AF7C85DF1980C54722E49BBB603BB12
FA72DE5BF0E6C1C9478648B4F622D4B31ADA9DF0C5F58A8D0286323BEAE89B93
6BFA9EDA0297E6CFA9321054E0C6F4929FA575EBD73F7B3CEE4FD4EFDAEE4950
DC13EF769EC02165EDD67FC807A3EF00568FB141086344> |
72 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD3594B4AAC949BC12DB93EB
145354BBB8C08C11925AC0F46D8DED6ED48766AD9F227F80E78F994FA53412AF
E33248FD828F9162118D6670CC6A028F6D1DD6E1E39F82490DBCEFB527759926
A45C28D02E5E3C215B6E23DB6B07742833D39B4C404EB9F2FBEFF8CC0B79F18F
65B9FD4B7E27C7AFDC> |
83 <001C60D8A8C9B7A73DB908748451047989C3955B36167B6F04DC439C2D1A
58585D74F55FBE1ED7F72D1AA43672D0216A369D1DCFE9501DC1E2CED4C34EB9
92D67CF2ABCD0C595F44A2E61CF1A37A2F1A0567B9C6EFB0F1D07547BB0AF728
72C917CA11202E46D3FA2E27C4D24AAD0C90466C23C1FA2AA462659CB3141A85
4F64508D76A5E463655EDDA2A0813C5D65931632CC67FB8FD375210049F14E1B
5AF3388C7358CD94481A9CF5F4EB2A555DBF01EAD6CEEF98D639C1511FAD0BF3
876252B00AE4DC1FB2CF8C575377AEDAEEE59501FA353D361D> |
79 <001C60D8A8C9B7A73DBF05D04BEA90E6564DA8DAECFE6E6E0E58E41A32B6
C7EEAA6121366B103E1CB23C7A344868031CA8713CA1443E0D5B4E7E33421084
23E0105BBA7ED0A16547FEEBADC74FEB0AFFB91669C3DF6FECBF5695650337EA> |
92 <001C60D8A8C9B7A73DB91DB4CC639640F3187F1BAC869224AAA6098E94DD
53C7C06585470C721CB1CCF6BEEAEBE2430BA7D73234646C6A28F05F88096E81
CC235A42C16AA4942D5EF46AA4A6C0E33E7090F47F6E80025C7B376960015D4E
10BE15453C7BA2400F422E72A6790E0DE827A762693BE253ECEF5F7A459A61F4
54662BEB8A18B76F7B7A7DE88C18E852F7F9002E7F358B4091DBEF912D5A7D7C
827F26BF35CA87BD480F5CE383EA8AE4B7134F62147A01741F92684572797B81
E92B5B25> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
18.3938 96.7251 mo
(\032\000\012\006\0003\000L\000G\000\020)sh
58.3334 96.7251 mo
(\000U\000H\000S\000O\000\\)
[5.07954 4.88046 5.07956 4.98 0 ]xsh
.72 lw
50.79 52.56 mo
50.79 70.44 li
@
54.03 69.6 mo
50.79 79.44 li
47.55 69.6 li
54.03 69.6 li
cp
ef
50.79 107.76 mo
50.79 125.76 li
@
54.03 124.92 mo
50.79 134.76 li
47.55 124.92 li
54.03 124.92 li
cp
ef
121.95 0 mo
291.99 0 li
291.99 28.32 li
121.95 28.32 li
cp
.145266 .11136 .11136 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 10 GetGlyphDirectory
3 <001C60D8A8C9B7A73D40> |
29 <001C60D8A8C9B7A73DB9886BE1A989933897A9B23DB10D0C2924ED0D8C8C
D07FE6AE239EEF77BE0C00C089BBE2ACE53696D63106A1281D76C8C89B0202F2
DA231D779A2DEDE39605269144D581865A3621FC11B5AB2DC0DCFD879299D920
942E0AEC9D4CD66BE99B945ECD5E8FA4794ACF81308F49DDDAD01755F0EE782B
BDF4AFFDCE9A> |
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B68B446FD4EE9ED1
4721CF2A9A21B88FDA7D8E37AAC73F35FE4084653B0B95E319EB8703812C2A0C
108D9092AFC18B1940DD2ED6AF36C6F1B98EEE247BC4A963065CFE72FB103B46
B523DBD7E07735C163D7413F2644CC28C6F92F85D0B39EA0D65AF3B4E4B78F55
D6FC49CE4D92F27CEEAC3024668CF3462A4AA4E8573702C758E552BCBE8F0414
EB253C2B7733024541CAE5388922865026D9C7E8A9ACD0C992348DD3F8D4CBC6
0622E7F2161951BFF34079ED8A8E67A25A5F1E11988BE535306FD2CA77DD87D4
D01BE4CA3ECDB0FCD161FE2ECFD9293096DBD24EE4C0F004279A015A08EF5EA4
45F0121066CDD05C304BDE9236870555C977C75D4739DBB42868E680B64AA37B
AE2401958310E87EA4454855BF081799704840DF55FF247D5DC9A48274AB8C60
835B6E7E86EDB425F69F049E974A425D9839A7D556A7244FCF74B36520B3DEC0
C69225DD2EDA65064DE6D781BE0E52E6019E6CD07C93F97A3C40589A375F23EF
61599F097FDD1C00369B8831B391879B210A664175977AE6DF10243B958940CA
DC480B0DCF74760E5300BFB15AA118D97F29E6AFBA54EF39A4F382CE16DE5FC0
7DBA65943CF9E0383993316CFAEC6C9728F1341EE3C4CA8305EF8D7085C3EF7B
9983E5692DB195A932D80484D2890D19> |
6558 <001C60D8A8C9B5EE3102820CDF2059AE7E38A7DD18C49A35420DB1B091
122739BEE0A32333A53DA02BFB714548CF1E0E1DF60B241A30D0E145F324C703
AE6BA40AE7367E8F21EA0F895A1A694E0B1E2B95885487CB92CFDEC1E2ED11BD
F2A7DBB72F5444265C5E8CDEA08DFED3052C81B6BBB72AF4591784C70BE7200D
1AB7ED97BE9C64CF192F912D7354C4FC588801B4F164B79208B016F221435034
0368B5CEF714699166C38AC42E0CCA0FA1C090F3438CA38CFF62B62408B0FC66
1CED7047AA4C28E7CE51EF328B4A242D039B9E86CFF81B0EDB18BD659F822BAB
9AB06551093EE0FE1EFA44BE7E8A9488CA8FC87D41DC769F16898A16C300C034
E8999E3F32045143E4882EF8548B1BC02A3DF2D6FD591734B19E9905316166B0
88D1AE54C0DEDAFC3AE73A2E8B291D796FF1536C4768D97BC0D916F0190CF71C
0C> |
2357 <001C60D8A8C9B5EE310D7591D869FF9527001B0E3CCDFA3905199639DF
6509838F3D6043C938AA9DCAF89B0143E2E223849819648211460C6E08D1EE23
F145488FF37D4388B06472505F9F31FDC58FC483826D8F792F87FD1C08BF639A
9C0865217025D259DAD70B16562302DD378618AFA8BD04213B33A7611C2096EE
12421B96B7F4D117A95303E7C79A6F8549178EAB9AA35A29769A6E91CB557679
BFB20C3EA572CBC19AA7269E33DEBD8193154610DE3BDD16809605CB82F687AD
6C7C3D0306B545B56F77C56CF74CD8D2F06C1B68EA7686B232CEC0240EBBF033
18A4DACD22276C35D82F1E0437E70A7608C0189499228780102173A100691EB0
236DA8D17A75C7028E5B035F28A1999EF278> |
11444 <001C60D8A8C9B5EE31023EA36A9FB9EE2C219ABE16AF6E98A7F367D70
9BAB068D02B24D63340F410693C034CF5BBBECA200710170958DB600C4C999E1
05001B2BFA4B7A0F55B3CFDCB20B02C5CDEDD0BD3D4822ACB3C3A6B0A316685D
8CF51742A5A3B0B5BB01743954FFEA07DB62AA948E8DCB0F399F3F0050E67826
2C930A2EEFFA173A3D4063CF42CBD1C9336168A104098AE2979E5954AA83057D
8E7C62401CC0D869A5A63418A5F009EF25398270F31F2C3873A5BC2C86AE252C
75C00D85F58E879895BE629E8544187805AE2CA1D3CD18A971146FBE5CDB0E2B
501F80384737F37603FAC267E78D12AD3DC7638CE9AFD4B6136A9E3C02C60362
BCBDA6F8CAD317A3180BDE6BEB563209B4F7E6CBFB4F8> |
17319 <001C60D8A8C9B5EE3103DB6EAED5A1899DE430DBABCA2B64C09FFCD4D
7DF0D372A06C691FAB354EFFB349FDC54701B9486013ACA54D4EFAF03BE551DF
04965863CE4217F0B0EE72E68D8EFEB129BD739B842801B66D8977F38FC5E9F2
F3DA156E53BF51F8A9268A74B71D637B6037CA972553FA610B922553862CAB18
807EB590CB66E38D20DACF87F95768E997902BE974E4BBCD50B59E5719658C5F
EA50DB8FEF439DE74C169039F53322FAF166C0F235B1FB38ADA45F5473FC22AC
1AEE9AD058938AC5414C51AFDBF130A15FE7CC4BD0995E20BBDACC1C87FA81EE
F697A04D3C27A85ACED6A5648AD36FFB5469B86A2FF9E830CE55F63952A9DEB8
CD48BAC062269E61F610B0ED64C267AF2A3C4786B3846C6C8FE105192298D87A
645E21BE22324DBDF0C515B48E4E6D8584AC2ED4616891489FEE99DCBDF89DA2
6AD472879B2496EF84C21CF> |
4091 <001C60D8A8C9B5EE310337A65A5C610450C7A7B9E7423A4A6766841406
7CD2833C419647E421CDC34BEFA9A1C2F875A5110B2364A1B1ED344D700F54B3
29A3B0E5422D8013C73BC1B587D695C79774475D62D4B1377897ABA576AC218E
30B1C689B7878CC566489484C88502CDF894C48AFDA243A8040F4969C938E75D
CEC1CE1D3CA8818C88725638BC1969354669E384402CCCD6244BB8CEF0218068
571119F5B2B708EB37390E6FB303C3D73091B97E95F23F67C200FC3AD25952EF
858E6485A7CC2996925701E74234D3DCE03948807FDCA22504951EE5157A58A2
13176B166ACBDB1EBF08B0CA105A3FADFFF196D54689F4A378E9F6FCA0B10F8C
53C16ACE5EFE744F5CBB7BCE4CA5B86E641B21A8657F9CEFE2C757532BA2A33B
F4DD6FA29FCCF8ECF5D881D46804B4CE3AED489EE51F51CEE7746009267C8499
4D90DADC89973E699172664DB8478CF9D4566B59DE7C3E6B7835D5AC118A316A
6472519977> |
5311 <001C60D8A8C9B5EE310D3DC867BC3DB932E0CBF1C13246742967E14A6D
A4F9220818ADC9C456A06FC7060CF78655B509CFE8C533DFF18211491DC469E9
AA26D3EEA2F96A0EE4EE57803CD30D637B99B1B1A771D278E7714234D1F950A4
FE72D3778396050BB99ACF0223BA5238298A67496C18A0560AD775F25A91D020
9F7CDA3C5211ED20A768E43B7C480B3407B68AFC21F2BF4292312DEE83777BD5
B461D4FAC2AC1AA862142A0413BEB136039149565FC08C4AAEF037FEBB0967D1
8F5DDF00A15EF448CF15AEF37A258E797B254276EE8E7EAFB6816D1E652DC758
1676DDF6D6BDA9D35F3F725E9ADE9A1CB733BBAB9E7BDAF8A38EE2C40717C154
65EFDDA0AF1D0C9C9A8D098C17B1232BBBE4B0C8B6B57D> |
2599 <001C60D8A8C9B5EE31035E3D5970C0D9EFC0B84F4F0F9A41398B8D096E
A328293B8B495778C43A32BA4ED4FBF6A18D34A003E2D1B1957158869D329180
BE8C604F8E0DE5CB3BA2C10D200962D7402988FF8DB39214DD274D9A5C255576
9F6EA26706EDB77D41E5976795AEC621A6EEE3431808ACC4F976E9BF316F918C
A761BAFE0420C7AFF9C137756728DA855CE602DC9ED0125FE6E099777CF2376F
5FABF224BB17E1DDC79ED0F4D20D5A77FFCC7BF789885DB19791022E101673D7
19B283B1> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
126.037 17.9022 mo
(\000\003\000\003\000\003\000\003\000\035\033\240\031\236\0115\000\003\000\003,\264C\247\017\373\024\277\012')sh
gsave
143.07 12.3607 mo
147.391 12.3607 li
147.391 20.8804 li
143.07 20.8804 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+CIDFont+F2
Type42DictBegin
[<00010000000c000c000c000c4f532f32f729ba5d000000cc000000606376
742008fab09e0000012c0000079c6670676d4d5f5868000008c800000634
676c79667e342d3e000092b4000045fc68656164e46e38a400000efc0000
0036686865610e310e7c00000f3400000024686d7478c494038c00000f58
000030826c6f6361690f789100003fdc00001a586d61787012850bfb0000
5a34000000206e616d65032d074200005a5400002d4370726570ab1cb91f
0000879800000b1b67646972000000000000000000000000000303370190
00050008059a0533002c0125059a0533004c03a000660212010502020503
050405090304e0000eff4000785b0000000100000000544d432000010022
02d9058efe460133072101bb400001bfdff700000371054c000000200008
058e0000054c001f054c001c037100180000ffe10000ffe80000ffe8fe4a
fffc056b0023fe68ffe2033e000000950000009500000000000000000025
00a8008e010b007d00820045003200a400ca006b0070005100af003c00f0
01d700470004002500770029004000fd00160161004601370029008e0017
ffca0025005bffe902e600020099008100f2007500d6006300c60006009a
01330024003800cc003dff67001305d8003600860095ffdb0007043400a5
00d8ffdcfffe004800a200d8013c01530380053e0057007a007c008c0117
012a0138017c0026003c007800bd00c0021009b5000c004d004e00540058
006700b4040100020005005000af01d5034300240058008b013501c0ffac
002000250026002d00410136022bffba001e002a0034003b003f00850094
009800d7012e013d033104b900170040006100b9010e0116012201bfff9c
001f001f004d005c0086008c009600aa00cb00cb011f0154022f036005a9
fee8000e006f007c007d008b00d500f1010a0157017802b803adfe3fff6a
ffb3ffc4001f0037003f0044004a0078007d009700a200a700b600c000c1
00c600d8011d0150019701ee04740532fd81fed1fee0ff16fff1000f002d
00550068006e007f00890095009e00c200da00e400f801040108011101c2
023002da030e049e0517ff00ff8700000020002f00410057007800870088
008800b900c200c5012001280133017401d6020e020f026c027e02ab02ec
038903b103e304e7ff43ffa8ffc3ffdcffe9000700230023002600520077
007d0081008f009900ac00ae00b500b800c800ea00f000f40135016a018b
01b101b501f7021402ad02d504fc05d805f0ff9dfffc000b00240025002c
0030003000330040004700490057006e009a00bd00c900cd00dc00fa00fa
011b0139017e0187018a018e0195019601df01f6028602cf02de039603a9
03b003c804010432046a058b05e006510761fe96fe9aff4bff8700130025
00340038003e004a0065006b0073007a009c00a200b200b700bf00f000f7
00fb0104011301200124013b01520178017c0181018f01a001d90248026a
026f02700301031d032303270388041f04ab04d104da057a058bfe26fe59
ff2e00010002000a003b003b004700580058005f0066006b007a007a008b
009900af00bc00c000c700cc00e900f200f500fb00fb0102010a010b0115
0121012701450145015501570158015e01610168017d01a301ab01da01ee
021002180222028f029402a302d202e703710393039b03b303d303fe04ff
050b05320532054b0559058b05ab05f2065506890742076207a708ccfd2a
fdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffaf
ffc00000000000030094001d001f002000200027002e0048004b004c005e
005f006b0071007c008a00900091009100a700af00b300b400c400c600d1
00d200de00df00df00e600e800ea00eb00f200f500f500fc010201180123
013101330137015c016201660170017a017a017a018201980199019b01b0
01bf01c001ca01d301d701d801e001e001f601f701f802120213022f0237
02440247024f0252026302650270027f0298029b02a602b702ba02c502cf
02d602d702e502fe031c031d03450348035d035e03710379038103a103b7
03d403d503d803e103f803fe0404041f042104230425043a0467048304e0
0528054b0564056a059f059f05c2060b066a06af06b306cb06e807060728
0748075007a607b207ff009500af00920096000000000000000000000000
017e01a80129025b0212020301c302b4019301cd02b204ed020e0159017a
0300022d042c00c8004d00e602890325013e0378011b00f1018d00490203
007c000e029d02470024000000000052004400330038005405d3041501a7
000002860168005000cf0002004b0024008800ba0025ffd800110091ff6b
00b5011700260065ff9900490080014b01c000f40167027102ea04fc0310
017c01e103d9015501e601ee0434019606cb005c022b0099003d009f0016
0039002700de00790120022e005a00990388009400210019002a046c05e8
000001f203b200aa0296028902b4ffc9020000ec0005005a0447010004e0
0000052a001f01eb00ae016800ca02d3028901b5040601a1014f014b011c
0308005e00c70024029d006503750104028002f304d800d90239025a032c
01f204310303005002e50283005901eb010800ac019602f8012100950180
004400e501eb02e5007400f301ff02fd038f026801c801c70116022b0142
033000fe02e101620200002400ee05170108023700660006010201e602aa
0366019b00d305c203dc044d03b6000401be013702fc03200244014d0338
ffed002506f8030dfed5ff43004402ffff92040bfdef0155017100d9ffc4
032d0461044afbb5fbcf02170192036d0558fff2fe7d0583023e006605e9
073d00790243002500cf00fd00af002a01ef021a0026001f0025003a0000
01170490fbfb0251001d02f001f50078018f005f00240044005400bf00af
006701a8002600050006003f009800fa02ab00c2004d0375004a00b600c4
01bf017c006f00130263000c006801520002012e0104001f001f009a0000
00f1046900790080005000bd056b00ab0080001e05a5fe4000ce006e0056
004800db018b00b3004802390458005300820082002203d703f104704042
5554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b017
7ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01
182f2d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b802ee23701020b802ee4520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab903b003b08a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b12601885158b94000020063b80400885458b20240
0243604259b94000040063b80800885458b202800243604259b128018851
58b94000080063b81000885458ba00020100000243604259595959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00010000
0006f5c31046a3845f0f3cf50819080000000000a31fb8bd00000000d36b
3f6afc05fd8c0aaa0830000200090001000000000000000100000721fe45
00570ab9fc05fa500aaa001800070000000000000000000000000b160639
011c00000000020000000000000000000000035c01260000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000006aaffbd0000000005c7007a0000000000000000
04e3ffd1000000000473008f000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0400003000000000038d003804000027038d004000000000000000000000
0000023900580239fea0038d00140239004f00000000040000270400003c
0400ff1e0400002d031d002a031dffed0239005400000000000000000556
002300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000239005800000000000000000000000000000000
02aa01c10000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000239fea0000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000023900580000000000000000
00000000000000000000000003c9ff88000000000434004e04a8ffbc03a9
ffbc0000000000000000000000000257ffbc0298ffc30462ffbc038affbc
0533ffbe049affc70476004903b3ffbc04760048040affbc0334fffe03a8
006f000000000000000005dc008b00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000257ffbc0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000009d7
ffc4000000000000000005a7007900000000000000000000000000000000
000000000000000000000000000000000000000006e6003c000000000000
000005a2003c000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0034003400340034003400a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a80209020902990299029903ae03ae047a047a047a047a047a
047a047a047a047a047a047a047a047a05b805b8067a07b6087008700870
0870094209ff0b2c0bf10bf10d0b0d8e0e850f75103410dc119211921192
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292129212921292129212921292129212921292129212921292
129212921292130c130c130c130c130c1332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
133213321332133213321332133213321332133213321332133213321332
1332138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c138c138c138c138c138c138c138c138c138c138c
138c138c138c138c138c139413941394139413941394142a142a14d21571
1619161916191619167d16ee17d8184d193819f01a7b1b0d1bf21cb01d8f
1df71df71df71ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec0
1ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec0
1ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec0
1ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec01ec0
1ec01ec01ec01ec01ec01ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
1ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed71ed7
20202020202020f720f720f720f720f720f720f720f720f720f722472247
224722fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe
22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe22fe000100000d2b0084
0002002a000200020010002f0056000004ed0b1b0002000100>
<0000005303ea0000000300000000006c00000000000300000001001e006c
0000000300000002000c01140000000300000003005600e2000000030000
0004002c00f4000000030000000500180138000000030000000600300150
00000003000000070076006c0000000300000008003000b0000000030000
000900860180000000030000000d0e04020600010000000000000036100a
0001000000000001000f1040000100000000000200061094000100000000
0003002b107b0001000000000004001610840001000000000005000c10a6
0001000000000006001810b20001000000000007003b1040000100000000
0008001810620001000000000009004310ca000100000000000d0702110d
0003000104030002000e182f0003000104030004002e180f000300010405
0002000e185d0003000104050004002e183d0003000104060002000c188b
0003000104060004002c186b0003000104070002000c18b7000300010407
0004002c18970003000104080002000c18eb0003000104080004002c18cb
0003000104090000006c00000003000104090001001e006c000300010409
0002000c01140003000104090003005600e20003000104090004002c00f4
000300010409000500180138000300010409000600300150000300010409
00070076006c0003000104090008003000b0000300010409000900860180
000300010409000d0e1618f700030001040a0002000e272d00030001040a
0004002e270d00030001040b0002001418b700030001040b000400341897
00030001040c00020010275b00030001040c00040030273b00030001040e
00020008278b00030001040e00040028276b0003000104100002000e27b3
0003000104100004002e27930003000104130002000e27e1000300010413
0004002e27c10003000104140002000c18b70003000104140004002c1897
0003000104150002000e280f0003000104150004002e27ef000300010416
0002000e283d0003000104160004002e281d0003000104190002000c286b
0003000104190004002c284b00030001041b0002000e289700030001041b
0004002e287700030001041d0002000c18b700030001041d0004002c1897
00030001041f0002000c28c500030001041f0004002c28a5000300010424
0002000e28f10003000104240004002e28d100030001042a0002000e291f
00030001042a0004002e28ff00030001042d0002000c294d00030001042d
0004002c292d00030001080a0002000e272d00030001080a0004002e270d
0003000108160002000e283d0003000108160004002e281d000300010c0a
0002000e272d000300010c0a0004002e270d000300010c0c00020010275b
000300010c0c00040030273b00a900200032003000310036002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
00540069006d006500730020004e0065007700200052006f006d0061006e
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002e004d
006f006e006f0074007900700065003a00540069006d006500730020004e
0065007700200052006f006d0061006e0020004900740061006c00690063
00200028004d006900630072006f0073006f006600740029005600650072
00730069006f006e00200036002e0039003600540069006d00650073004e
006500770052006f006d0061006e00500053002d004900740061006c0069
0063004d0054004d006f006e006f00740079007000650020005400790070
0065002000440072006100770069006e00670020004f0066006600690063
00650020002d0020005300740061006e006c006500790020004d006f0072
00690073006f006e002c00200056006900630074006f00720020004c0061
007200640065006e007400200031003900330032004d006900630072006f
0073006f0066007400200073007500700070006c00690065006400200066
006f006e0074002e00200059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e007400200074006f0020
006300720065006100740065002c00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
006400200062007900200074006800650020006c006900630065006e0073
00650020007400650072006d0073002c0020006f00720020007400650072
006d00730020006f00660020007500730065002c0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000700072
006f0064007500630074002c002000730065007200760069006300650020
006f007200200063006f006e00740065006e007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
00770061007300200069006e0063006c0075006400650064002e00200059
006f00750020006d006100790020006f006e006c00790020002800690029
00200065006d0062006500640020007400680069007300200066006f006e
007400200069006e00200063006f006e00740065006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
0068006500200065006d00620065006400640069006e0067002000720065
0073007400720069006300740069006f006e007300200069006e0063006c
007500640065006400200069006e0020007400680069007300200066006f
006e0074003b00200061006e006400200028006900690029002000740065
006d0070006f0072006100720069006c007900200064006f0077006e006c
006f006100640020007400680069007300200066006f006e007400200074
006f002000610020007000720069006e0074006500720020006f00720020
006f00740068006500720020006f00750074007000750074002000640065
007600690063006500200074006f002000680065006c0070002000700072
0069006e007400200063006f006e00740065006e0074002e00200041006e
00790020006f007400680065007200200075007300650020006900730020
00700072006f0068006900620069007400650064002e000d000d00540068
006500200066006f006c006c006f00770069006e00670020006c00690063
0065006e00730065002c0020006200610073006500640020006f006e0020
0074006800650020004d004900540020006c006900630065006e00730065
002000280068007400740070003a002f002f0065006e002e00770069006b
006900700065006400690061002e006f00720067002f00770069006b0069
002f004d00490054005f004c006900630065006e007300650029002c0020
006100700070006c00690065007300200074006f00200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020201c004c0061
0079006f007500740020004c006f006700690063201d0020006100730020
006a006f0069006e0074006c007900200064006500760065006c006f0070
00650064002000620079002000520061006c00700068002000480061006e
0063006f0063006b00200061006e00640020004a006f0068006e00200048
007500640073006f006e002e0020000d000d005000650072006d00690073
00730069006f006e00200069007300200068006500720065006200790020
006700720061006e007400650064002c002000660072006500650020006f
00660020006300680061007200670065002c00200074006f00200061006e
007900200070006500720073006f006e0020006f0062007400610069006e
0069006e00670020006100200063006f007000790020006f006600200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
0061006e00640020006100730073006f0063006900610074006500640020
0064006f00630075006d0065006e0074006100740069006f006e00200066
0069006c00650073002000280074006800650020201c004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065201d0029002c00200074006f0020006400650061006c00200069
006e00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000770069
00740068006f007500740020007200650073007400720069006300740069
006f006e002c00200069006e0063006c007500640069006e006700200077
006900740068006f007500740020006c0069006d00690074006100740069
006f006e0020007400680065002000720069006700680074007300200074
006f0020007500730065002c00200063006f00700079002c0020006d006f
0064006900660079002c0020006d0065007200670065002c002000700075
0062006c006900730068002c002000640069007300740072006900620075
00740065002c0020007300750062006c006900630065006e00730065002c
00200061006e0064002f006f0072002000730065006c006c00200063006f
00700069006500730020006f006600200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
006100720065002c00200061006e006400200074006f0020007000650072
006d0069007400200070006500720073006f006e007300200074006f0020
00770068006f006d00200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
0020006900730020006600750072006e0069007300680065006400200074
006f00200064006f00200073006f002c0020007300750062006a00650063
007400200074006f002000740068006500200066006f006c006c006f0077
0069006e006700200063006f006e0064006900740069006f006e0073003a
000d000d005400680065002000610062006f0076006500200063006f0070
0079007200690067006800740020006e006f007400690063006500200061
006e0064002000740068006900730020007000650072006d006900730073
0069006f006e0020006e006f00740069006300650020007300680061006c
006c00200062006500200069006e0063006c007500640065006400200069
006e00200061006c006c00200063006f00700069006500730020006f0072
0020007300750062007300740061006e007400690061006c00200070006f
007200740069006f006e00730020006f006600200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
00740077006100720065002e000d000d00540048004500200053004f0046
00540057004100520045002000490053002000500052004f005600490044
0045004400200027004100530020004900530027002c0020005700490054
0048004f00550054002000570041005200520041004e005400590020004f
004600200041004e00590020004b0049004e0044002c0020004500580050
00520045005300530020004f005200200049004d0050004c004900450044
002c00200049004e0043004c005500440049004e00470020004200550054
0020004e004f00540020004c0049004d004900540045004400200054004f
0020005400480045002000570041005200520041004e0054004900450053
0020004f00460020004d00450052004300480041004e0054004100420049
004c004900540059002c0020004600490054004e00450053005300200046
004f00520020004100200050004100520054004900430055004c00410052
00200050005500520050004f0053004500200041004e00440020004e004f
004e0049004e004600520049004e00470045004d0045004e0054002e0020
0049004e0020004e004f0020004500560045004e00540020005300480041
004c004c002000540048004500200041005500540048004f005200530020
004f005200200043004f005000590052004900470048005400200048004f
004c00440045005200530020004200450020004c004900410042004c0045
00200046004f005200200041004e005900200043004c00410049004d002c
002000440041004d00410047004500530020004f00520020004f00540048
004500520020004c0049004100420049004c004900540059002c00200057
00480045005400480045005200200049004e00200041004e002000410043
00540049004f004e0020004f004600200043004f004e0054005200410043
0054002c00200054004f005200540020004f00520020004f005400480045
00520057004900530045002c002000410052004900530049004e00470020
00460052004f004d002c0020004f005500540020004f00460020004f0052
00200049004e00200043004f004e004e0045004300540049004f004e0020
0057004900540048002000540048004500200053004f0046005400570041
005200450020004f0052002000540048004500200055005300450020004f
00520020004f00540048004500520020004400450041004c0049004e0047
005300200049004e002000540048004500200053004f0046005400570041
00520045002e000da9203230313620546865204d6f6e6f7479706520436f
72706f726174696f6e2e20416c6c20526967687473205265736572766564
2e2054696d6573204e657720526f6d616e20697320612074726164656d61
726b206f6620546865204d6f6e6f7479706520436f72706f726174696f6e
2e4d6f6e6f747970653a54696d6573204e657720526f6d616e204974616c
696320284d6963726f736f66742956657273696f6e20362e393654696d65
734e6577526f6d616e50532d4974616c69634d544d6f6e6f747970652054
7970652044726177696e67204f6666696365202d205374616e6c6579204d
6f7269736f6e2c20566963746f72204c617264656e7420313933324d6963
726f736f667420737570706c69656420666f6e742e20596f75206d617920
757365207468697320666f6e7420746f206372656174652c20646973706c
617920616e64207072696e7420636f6e74656e74206173207065726d6974
74656420627920746865206c6963656e7365207465726d732c206f722074
65726d73206f66207573652c206f6620746865204d6963726f736f667420
70726f647563742c2073657276696365206f7220636f6e74656e7420696e
207768696368207468697320666f6e742077617320696e636c756465642e
20596f75206d6179206f6e6c792028692920656d62656420746869732066
6f6e7420696e20636f6e74656e74206173207065726d6974746564206279
2074686520656d62656464696e67207265737472696374696f6e7320696e
636c7564656420696e207468697320666f6e743b20616e64202869692920
74656d706f726172696c7920646f776e6c6f6164207468697320666f6e74
20746f2061207072696e746572206f72206f74686572206f757470757420
64657669636520746f2068656c70207072696e7420636f6e74656e742e20
416e79206f74686572207573652069732070726f686962697465642e0d0d
54686520666f6c6c6f77696e67206c6963656e73652c206261736564206f
6e20746865204d4954206c6963656e73652028687474703a2f2f656e2e77
696b6970656469612e6f72672f77696b692f4d49545f4c6963656e736529
2c206170706c69657320746f20746865204f70656e54797065204c61796f
7574206c6f67696320666f72204269626c6963616c2048656272657720d2
4c61796f7574204c6f676963d3206173206a6f696e746c7920646576656c
6f7065642062792052616c70682048616e636f636b20616e64204a6f686e
20487564736f6e2e200d0d5065726d697373696f6e206973206865726562
79206772616e7465642c2066726565206f66206368617267652c20746f20
616e7920706572736f6e206f627461696e696e67206120636f7079206f66
20746865204f70656e54797065204c61796f7574206c6f67696320666f72
204269626c6963616c2048656272657720616e64206173736f6369617465
6420646f63756d656e746174696f6e2066696c6573202874686520d24c61
796f7574204c6f67696320536f667477617265d3292c20746f206465616c
20696e20746865204c61796f7574204c6f67696320536f66747761726520
776974686f7574207265737472696374696f6e2c20696e636c7564696e67
20776974686f7574206c696d69746174696f6e2074686520726967687473
20746f207573652c20636f70792c206d6f646966792c206d657267652c20
7075626c6973682c20646973747269627574652c207375626c6963656e73
652c20616e642f6f722073656c6c20636f70696573206f6620746865204c
61796f7574204c6f67696320536f6674776172652c20616e6420746f2070
65726d697420706572736f6e7320746f2077686f6d20746865204c61796f
7574204c6f67696320536f667477617265206973206675726e6973686564
20746f20646f20736f2c207375626a65637420746f2074686520666f6c6c
6f77696e6720636f6e646974696f6e733a0d0d5468652061626f76652063
6f70797269676874206e6f7469636520616e642074686973207065726d69
7373696f6e206e6f74696365207368616c6c20626520696e636c75646564
20696e20616c6c20636f70696573206f72207375627374616e7469616c20
706f7274696f6e73206f6620746865204c61796f7574204c6f6769632053
6f6674776172652e0d0d54484520534f4654574152452049532050524f56
4944454420274153204953272c20574954484f55542057415252414e5459
204f4620414e59204b494e442c2045585052455353204f5220494d504c49
45442c20494e434c5544494e4720425554204e4f54204c494d4954454420
544f205448452057415252414e54494553204f46204d45524348414e5441
42494c4954592c204649544e45535320464f52204120504152544943554c
415220505552504f534520414e44204e4f4e494e4652494e47454d454e54
2e20494e204e4f204556454e54205348414c4c2054484520415554484f52
53204f5220434f5059524947485420484f4c44455253204245204c494142
4c4520464f5220414e5920434c41494d2c2044414d41474553204f52204f
54484552204c494142494c4954592c205748455448455220494e20414e20
414354494f4e204f4620434f4e54524143542c20544f5254204f52204f54
484552574953452c2041524953494e472046524f4d2c204f5554204f4620
4f5220494e20434f4e4e454354494f4e20574954482054484520534f4654
57415245204f522054484520555345204f52204f54484552204445414c49
4e475320494e2054484520534f4654574152452e0d00540069006d006500
730020004e0065007700200052006f006d0061006e002000630075007200
7300690076006100540069006d006500730020004e006500770020005200
6f006d0061006e0020006b00750072007a00ed0076006100540069006d00
6500730020004e0065007700200052006f006d0061006e0020006b007500
7200730069007600540069006d006500730020004e006500770020005200
6f006d0061006e0020004b00750072007300690076006f00690074007500
540069006d006500730020004e0065007700200052006f006d0061006e00
2003a003bb03ac03b303b903b1004d006900630072006f0073006f006600
7400200073007500700070006c00690065006400200066006f006e007400
2e00200059006f00750020006d0061007900200075007300650020007400
680069007300200066006f006e007400200074006f002000630072006500
6100740065002c00200064006900730070006c0061007900200061006e00
640020007000720069006e007400200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
7900200074006800650020006c006900630065006e007300650020007400
650072006d0073002c0020006f00720020007400650072006d0073002000
6f00660020007500730065002c0020006f00660020007400680065002000
4d006900630072006f0073006f00660074002000700072006f0064007500
630074002c002000730065007200760069006300650020006f0072002000
63006f006e00740065006e007400200069006e0020007700680069006300
680020007400680069007300200066006f006e0074002000770061007300
200069006e0063006c0075006400650064002e00200059006f0075002000
6d006100790020006f006e006c0079002000280069002900200065006d00
62006500640020007400680069007300200066006f006e00740020006900
6e00200063006f006e00740065006e007400200061007300200070006500
72006d006900740074006500640020006200790020007400680065002000
65006d00620065006400640069006e006700200072006500730074007200
69006300740069006f006e007300200069006e0063006c00750064006500
6400200069006e0020007400680069007300200066006f006e0074003b00
200061006e006400200028006900690029002000740065006d0070006f00
72006100720069006c007900200064006f0077006e006c006f0061006400
20007400680069007300200066006f006e007400200074006f0020006100
20007000720069006e0074006500720020006f00720020006f0074006800
6500720020006f0075007400700075007400200064006500760069006300
6500200074006f002000680065006c00700020007000720069006e007400
200063006f006e00740065006e0074002e00200041006e00790020006f00
740068006500720020007500730065002000690073002000700072006f00
68006900620069007400650064002e000d000a000d000a00540068006500
200066006f006c006c006f00770069006e00670020006c00690063006500
6e00730065002c0020006200610073006500640020006f006e0020007400
6800650020004d004900540020006c006900630065006e00730065002000
280068007400740070003a002f002f0065006e002e00770069006b006900
700065006400690061002e006f00720067002f00770069006b0069002f00
4d00490054005f004c006900630065006e007300650029002c0020006100
700070006c00690065007300200074006f00200074006800650020004f00
700065006e00540079007000650020004c00610079006f00750074002000
6c006f00670069006300200066006f00720020004200690062006c006900
630061006c00200048006500620072006500770020201c004c0061007900
6f007500740020004c006f006700690063201d0020006100730020006a00
6f0069006e0074006c007900200064006500760065006c006f0070006500
64002000620079002000520061006c00700068002000480061006e006300
6f0063006b00200061006e00640020004a006f0068006e00200048007500
640073006f006e002e0020000d000a000d000a005000650072006d006900
7300730069006f006e002000690073002000680065007200650062007900
20006700720061006e007400650064002c00200066007200650065002000
6f00660020006300680061007200670065002c00200074006f0020006100
6e007900200070006500720073006f006e0020006f006200740061006900
6e0069006e00670020006100200063006f007000790020006f0066002000
74006800650020004f00700065006e00540079007000650020004c006100
79006f007500740020006c006f00670069006300200066006f0072002000
4200690062006c006900630061006c002000480065006200720065007700
200061006e00640020006100730073006f00630069006100740065006400
200064006f00630075006d0065006e0074006100740069006f006e002000
660069006c00650073002000280074006800650020201c004c0061007900
6f007500740020004c006f00670069006300200053006f00660074007700
6100720065201d0029002c00200074006f0020006400650061006c002000
69006e00200074006800650020004c00610079006f007500740020004c00
6f00670069006300200053006f0066007400770061007200650020007700
6900740068006f0075007400200072006500730074007200690063007400
69006f006e002c00200069006e0063006c007500640069006e0067002000
77006900740068006f007500740020006c0069006d006900740061007400
69006f006e00200074006800650020007200690067006800740073002000
74006f0020007500730065002c00200063006f00700079002c0020006d00
6f0064006900660079002c0020006d0065007200670065002c0020007000
750062006c006900730068002c0020006400690073007400720069006200
7500740065002c0020007300750062006c006900630065006e0073006500
2c00200061006e0064002f006f0072002000730065006c006c0020006300
6f00700069006500730020006f006600200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
77006100720065002c00200061006e006400200074006f00200070006500
72006d0069007400200070006500720073006f006e007300200074006f00
2000770068006f006d00200074006800650020004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
650020006900730020006600750072006e00690073006800650064002000
74006f00200064006f00200073006f002c0020007300750062006a006500
63007400200074006f002000740068006500200066006f006c006c006f00
770069006e006700200063006f006e0064006900740069006f006e007300
3a000d000a000d000a005400680065002000610062006f00760065002000
63006f00700079007200690067006800740020006e006f00740069006300
6500200061006e0064002000740068006900730020007000650072006d00
69007300730069006f006e0020006e006f00740069006300650020007300
680061006c006c00200062006500200069006e0063006c00750064006500
6400200069006e00200061006c006c00200063006f007000690065007300
20006f00720020007300750062007300740061006e007400690061006c00
200070006f007200740069006f006e00730020006f006600200074006800
650020004c00610079006f007500740020004c006f006700690063002000
53006f006600740077006100720065002e000d000a000d000a0054004800
4500200053004f0046005400570041005200450020004900530020005000
52004f005600490044004500440020002700410053002000490053002700
2c00200057004900540048004f0055005400200057004100520052004100
4e005400590020004f004600200041004e00590020004b0049004e004400
2c002000450058005000520045005300530020004f005200200049004d00
50004c004900450044002c00200049004e0043004c005500440049004e00
4700200042005500540020004e004f00540020004c0049004d0049005400
45004400200054004f002000540048004500200057004100520052004100
4e00540049004500530020004f00460020004d0045005200430048004100
4e0054004100420049004c004900540059002c0020004600490054004e00
450053005300200046004f00520020004100200050004100520054004900
430055004c0041005200200050005500520050004f005300450020004100
4e00440020004e004f004e0049004e004600520049004e00470045004d00
45004e0054002e00200049004e0020004e004f0020004500560045004e00
540020005300480041004c004c0020005400480045002000410055005400
48004f005200530020004f005200200043004f0050005900520049004700
48005400200048004f004c00440045005200530020004200450020004c00
4900410042004c004500200046004f005200200041004e00590020004300
4c00410049004d002c002000440041004d00410047004500530020004f00
520020004f00540048004500520020004c0049004100420049004c004900
540059002c0020005700480045005400480045005200200049004e002000
41004e00200041004300540049004f004e0020004f004600200043004f00
4e00540052004100430054002c00200054004f005200540020004f005200
20004f00540048004500520057004900530045002c002000410052004900
530049004e0047002000460052004f004d002c0020004f00550054002000
4f00460020004f005200200049004e00200043004f004e004e0045004300
540049004f004e0020005700490054004800200054004800450020005300
4f0046005400570041005200450020004f00520020005400480045002000
55005300450020004f00520020004f005400480045005200200044004500
41004c0049004e0047005300200049004e00200054004800450020005300
4f004600540057004100520045002e000d000a00540069006d0065007300
20004e0065007700200052006f006d0061006e0020004300750072007300
690076006100540069006d006500730020004e0065007700200052006f00
6d0061006e0020004900740061006c006900710075006500540069006d00
6500730020004e0065007700200052006f006d0061006e00200044015100
6c007400540069006d006500730020004e0065007700200052006f006d00
61006e00200043006f0072007300690076006f00540069006d0065007300
20004e0065007700200052006f006d0061006e0020004300750072007300
690065006600540069006d006500730020004e0065007700200052006f00
6d0061006e0020006b00750072007300790077006100540069006d006500
730020004e0065007700200052006f006d0061006e00200049007400e100
6c00690063006f00540069006d006500730020004e006500770020005200
6f006d0061006e0020041a0443044004410438043200540069006d006500
730020004e0065007700200052006f006d0061006e0020004b0075007200
7a00ed0076006100540069006d006500730020004e006500770020005200
6f006d0061006e0020013000740061006c0069006b00540069006d006500
730020004e0065007700200052006f006d0061006e00200050006f016100
650076006e006f00540069006d006500730020004e006500770020005200
6f006d0061006e0020006e00670068006900ea006e006700540069006d00
6500730020004e0065007700200052006f006d0061006e00200045007400
7a0061006e006100410c005403cd02b0001d001f03cd03cd03cc03cb003c
001f03cbb3061d1f00410c03bc003003bc004003bc00a003bc00b003bc00
05ffc003bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc003bb
b31a263280411303bb009f03bb00af03bb00cf03bb0004000003bb001f03
bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ff
c003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803
b90028001fffc003b9b3282e32f0410f03b90001000003b7000103b70003
0800001f03be03bf002b001fffc003bfb2242a32b903b60381b23a1f0f41
1703b3001003b2002003b2005003b2007003b200e003b2000600cf03b300
df03b300ef03b300ff03b30004001203a8b2e2891fbe039f016b019a001f
039800930801400c1f7f047f05027f027f03025fbb02b00001ffc00117b2
196632b8ffc0b3651a6632b9ff800173b2196632bd038401170800001fff
c002afb2313340b802afb22e3340b802afb328293240b802afb326273240
b802afb321253240b802afb31c203240b802afb2233340b802afb21933a0
bc02af00b002af00e002afb5034003212932b8fff2b33a263d32bc038203
820382003a0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b8
0381b32b2e3269be03810001008a03810001000e0381b32b2f3210b80381
b3515b320cb80381b34e513222b80381b3474d320eb80381b246330ab803
81400926473212254358320cb80381b2323310b80381b22a3312b80381b3
373d3212bb0381003d0033fff44015253d331825355b3210252634320625
2a330c252e33b8fffe4024252d330c3a2f33329925aa25ba25c925040525
36330c25323832193a293a383a03182517b80381b42825382504bc038103
8103810025080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f
263d32bc038003800380001f080040151f375f07af07025f06af060222ac
2b2e3209ac2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb8
037fb2223314b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037f
b64c4f3232262c33410affee037f00390033fff8037f002b0033ffea037f
b23a3320b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037f
b32a2d320eb8037fb2263304b8037fb3494a3404b8037fb2463304b8037f
b2213318b8037f400c1d3322263032322226333832b8fff8400a262b2f32
09261b21328abe037f0001037f037f037f00260800402e1f371f062f063f
06039f02af02bf02cf02049f03af03bf03cf03046f037f038f03031f032f
033f034f035f03050f413a02ed0001005f02ed009f02ed00df02ed000300
2f02ed003f02ed006f02ed000300af02af0001004f02af009f02af000200
2f02af003f02af0002003f02b00001000f02b0001f02b00002004f02af00
5f02af0002002f02af003f02af0002007003b2000103b203b202ed02ed02
b002b002af02af401a370100300140010201010009010200080017170000
0012110840410b027b02230034000d013d0034000d01370034000d011b40
1a340d8f340d84340d68340d59340d54340d48340d2c340d28340d411002
350020000d021b0020000d01fc0020000d01c30020000d01500020000d01
2c401a200df0200dbe200d94200d79200d6a200d61200d5f200d44200d41
0d013e0138000d003d0138000d00300138000d001d0138000d01fdb40f4d
0f0009bf01fd004d000d03b1037f0015001f0215b226341fb80214b2263f
1fb80208b21ebb1f41190206001e0801001f0205001f02ab001f0204001f
02ab001f0203001f0401001f02010031019a001f01fb00230156001f01ae
b2262a1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5
001e0125001f01a400ab02ab001f01a2003102ab001f01a1003102ab001f
019db2236c1fb8019cb2236c1f4109019b00230401001f019a0033019a00
1f0176b2262e1fb8016cb231721f4111016b0023019a001f016800240401
001f014500260801001f013f00230401001f0123b21e9e1fbc0121001e02
01001f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21f
e826b80101b21fe51fb8019ab21fe431b80101400b1fe331e41fe231891f
d226b80201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801
b21fac1eb80401400b1f9e315e1f97269e1f9333b80801b21f8a24b8019a
b21f831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b804
01b21f5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb2
1f4e26b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401
b61f3924e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923
ab1f2731ab1f5537bc01c60007018a0007012b402e077f07710769076607
4b074007380736072d07220721071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b5342b0372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063
004b6220b0f65323b8010a515ab005234201b0124b004b544218b0382bb0
0288b801005458b801ffb101018e851bb0124358b900010140858d1bb900
010159858d59590016763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0
ff1d594bb04753205c58b9027d027b4544b9027c027b45445958b9014602
7d455258b9027d01464459594bb04753205c58b9001e027c4544b9002602
7c45445958b9017f001e455258b9001e017f4459594bb05e53205c58b900
1f027d4544b90025027d45445958b901a8001f455258b9001f01a8445959
4bb8010153205c58b1ab1f4544b11f1f45445958b9047000ab455258b900
ab04704459594bb8012553205c58b1e61f4544b11f1f45445958b9051000
e6455258b900e605104459594bb01753205c58b124244544b13124454459
58b12224455258b124224459594bb05153205c58b124244544b123244544
5958b17d24455258b1247d4459594bb06e53205c58b124244544b1332445
445958b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b45695342014b5058b108004259435c58b1080042591610703eb0124358
b911b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b103c
012f5d060cb0062342b0072342b0124358b93b21187e1bba040001a8000b
2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b0
0e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342
b0112342002b4bb02e5358b8016b45b02a60b8016b234459001845694445
694418456944456944737373737375757573737475757575752b4bb02653
4bb03d515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1
070745b04060445973732b2b451869442b2b752b2b4518694475752b2b75
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b
002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffde
b31e1c3318b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173
742b2b2b002b73752b2b732b2b2b2b2b73752b2b2b2b73002b2b4569442b
2b0000>
[15745 2173 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 4320 76 <00020058ffe8022e0516000b002901244027176e3a3516763a35122b4012
352b40191b34590c0119230116172945215a282830294d0c007006b8039c
401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b801
43b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b3
3a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc040
13131634301e8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b
2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b3160d3f1eb8
ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e
2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b
2b2b2b2b59012b2b01321615140623222635343613030615141633323736
371706070623222635343713363534262322073501ca2a3a3b29293b3a37
c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b29
2a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b2700
>HIBBAA+CIDFont+F2 AddT42Char 
2 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>HIBBAA+CIDFont+F2 AddT42Char 
HIBBAA+CIDFont+F2 /CharStrings get begin
/i 76 def
end
HIBBAA+CIDFont+F2 /Encoding get
dup 105 /i put
pop
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2 /HIBBAA+CIDFont+F2 findfont ct_VMDictPut
/YZDDLU+CIDFont+F2*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [8.67484 0 0 -7.5436 0 0 ]msf
143.07 19.0792 mo
(i)sh
grestore
gsave
123.512 4.08102 mo
147.391 4.08102 li
147.391 18.8416 li
123.512 18.8416 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 3948 72 <00020040ffe803710389001a002500fe40360f100b251810182504000810
080212530851090228092a2538093b1e480749084909480a5b0857105525
9304a204a513b204b6251027b8ffc0403d263509221c113f0822120b3f08
090809051b0008091520008a1b40080a3e0d1b1d1b2f1b031b1b0b232412
0705270b0b203a0f151f1502151a27004902b8038140170e8053350e8028
503f0e401c113f9f0e010e19262bc3182b4e10f45d2b2b2b4df9e44e10f6
5d4ded003fed3fed12392f5d2bed011112393912390011393910c9313001
2b2b2b5d005d435c58b90009ffdeb3120b3f09b8ffdeb3110a3f08b8ffde
b3110a3f07b8ffdeb3090c3e08b8ffdeb2090c3e2b2b2b2b2b59005d015d
130615141633323637170623222635341224333216151407060706273637
3636353426232206f4077e5a48858315edd79294b80116936a664257a970
c4945d7b7b353166e501793221597d3b651debb86f950138ad563b534c63
3d291a11293799452a34d900>YZDDLU+CIDFont+F2 AddT42Char 
2 7434 84 <0002002dfe4a03cb03890021002f0146400a061b061c3d2d4a2d0427b8ff
c0405d101b3f081b34027601aa11a912ad22a626a427aa2dab2eb5270b95
269c2eab1b03660181268c2e0348194a1b560103392d3b2f4601032d0a2d
2f3627039700012f2021100a100b300a09010830091120252b2011102221
182e2d102821b8039540130025241d1d0007280001011f1021141010212b
b8032e400c150b0a090e10302821101000bc020300210188002803814013
bf10ef1002108053351040263510401f223410b8ffc0b21c3510b8ffc040
201a3510401a1d34ef180118401e123f18401a3518401b35186c30101710
300a32b901e600182b2b103c2b10f62b2b2b5d2b2b2b2b2b2b5de9f4ed2b
103c2b10c0003f3c3fed870e2e2b0e7d10c42b183f003c10ed10e4011112
3939111239113939001112393910ed0110c00010ed0110c0870e3c7dc431
3001715d5d5d5d5d5d2b005d010106151416171633072137363736363713
060706232226353412373633321617370734262322001514163332373612
03cbfeb91617141f320afe210a621826311e8a847251466466ba98766047
5c171f474e397afef243303d4d759d0389fb964e161721080c252508090f
446d01edc14e37a35f97014c6a53454c70a24052fe5cba4b4e4467014300
>YZDDLU+CIDFont+F2 AddT42Char 
2 8296 86 <0001ffedffe802e70389003000c2401b32010117221b103f080b040f180b
150f3a2705280b230f99030301b8ffc0400e0d0d42552f013f014f015f01
0401b80104400a2ec60030070524290719b801b5403415c618170b1d2411
0b028a00c60140120b3f50010101c90e3ad020e020f020037f208f209f20
c0200420a0083a26951a8a19c618b8ffc040133435184030351840212234
a018c01802187c31ba0144016400182b10f55d2b2b2bf4edf4edf45d5dfd
f45d2be4ed003fed3f3ce4ed3fed3f3ce4ed5d2b3130015d5d2b005d0103
232626232206151416171616151406232227262322072313331616333236
3534272e02353436333217161633323702e73d2505684d3e491d31824cad
84485e21122d17253d250672634c59101cb3338d6f201a0e67112b1d0389
fecd867a4430213c368e904068a1220c2e0144987e553e28223cd46a3561
860503272f00>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/e 72 def
/q 84 def
/s 86 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 101 /e put
dup 113 /q put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i 7{/.notdef}rp /q /.notdef /s 
140{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [14.9646 0 0 -13.0132 0 0 ]msf
123.512 15.7217 mo
(seq)
[5.68661 6.73401 0 ]xsh
grestore
gsave
201.268 12.3601 mo
205.23 12.3601 li
205.23 20.8804 li
201.268 20.8804 li
cp
eclp
YZDDLU+CIDFont+F2*1 [8.71317 0 0 -7.59669 0 0 ]msf
201.268 19.0777 mo
(i)sh
grestore
gsave
192.392 3.96042 mo
205.228 3.96042 li
205.228 18.7226 li
192.392 18.7226 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 6940 83 <0002ff1efe4a03c80389002300320153404b55018d0c9d0cad0cbc0d0539
154b00460e4615482a5506650e750e791aac28b908bc29b92ac91a0e4322
5000560e0330003422400003010d2431320e0e00161a173016150e143015
23451bb801a7400e282230234d0024012f2601001b2fb8038d4022040400
0728000e00230e1f1a1b141a1a1b26240a0b16150e0f1a011a33281b1a10
2cba03810007ffc0b22e3507b8ffc0b2293507b8ffc0b2273507b8ffc040
15203507401f354f0701400750077007a007c0070507ba033b0000032bb4
1b2323b81ab8ffc0b732351a401e123f1ab8ffc040121c351a401b1d34ef
1a011b19331a171a330ab8033ab156182b2b103c2b10f45d2b2b2b2b7ae8
182f10edfd5d712b2b2b2b2be92b103c2b10c071003f3c3fed870e2e2b08
7d10c42b183f003c10ed01111239001112393910f5ed2bfc01f50010ed01
10c00010ed0110c0870e103c3c3c3c7dc43130015d5d5d005d0107363633
321615140023222627030615141616330721373636371336353426232207
35131633323e033534262322060701c5456dab59597efe9aee324d304916
17344d09fe290a5d4124fd171f201d346e3e69346c67524149316cd33103
89e680668d71dcfe39161cfefe4c17161f11252504387f036c53141b1e07
27fd134a3a7295ca635055f8a600>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/p 83 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i 6{/.notdef}rp /p /q /.notdef 
/s 140{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [15.0307 0 0 -13.1049 0 0 ]msf
194.065 15.6 mo
(p)sh
grestore
121.95 35.4 mo
291.99 35.4 li
291.99 63.72 li
121.95 63.72 li
cp
.145266 .11136 .11136 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
126.037 53.2922 mo
(\000\003\000\003\000\003\000\003\000\035\033\240\031\236\0115\000\003\000\003,\264C\247\017\373\024\277\012')sh
gsave
141.752 47.3987 mo
148.951 47.3987 li
148.951 56.5163 li
141.752 56.5163 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 4740 77 <0002fea4fe46023e0515000b003000e7b61232400f103432b8ffc0b31b27
3432b8ffc0401d0d355f0d5f255b265b279330051a29013045265a282f30
304d0c007006b8039c40210c070c0d0c300d1f25261425252616b8222410
0f25400f39253128262510097003b8ffc0400e2a35900301400350030203
57320cb8032bb34f260126b8019fb5261ee4133a1ab80335400b26eb3125
1725310a3286182b2b103c2b10f6f6fded10e45ded10f45d712bed2b103c
2b10c02b003ffde4870e2e2b087d10c400183ff6ed10f5ed2bfc01f53130
01715d2b2b2b435c5840140d400f390e400f3925400f390c400f3926400f
392b2b2b2b2b590132161514062322263534361301060623222635343633
321716151407061517161633323637133635342623220706073501d92a3b
3b2a2a3b3b3afefd45f18c3f4131201d1612190e02030c0c51732de0212b
210d110d1905153b2a2a3b3b2a2a3bfe74fc81f0d43a281f2f130f131a13
0b07050404679a0300710c18260302042300>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/j 77 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 106 /j put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i /j 5{/.notdef}rp /p /q 
/.notdef /s 140{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [8.09656 0 0 -8.0452 0 0 ]msf
143.191 54.5993 mo
(j)sh
grestore
gsave
123.51 38.6366 mo
148.955 38.6366 li
148.955 54.3602 li
123.51 54.3602 li
cp
eclp
YZDDLU+CIDFont+F2*1 [14.0049 0 0 -13.9162 0 0 ]msf
123.51 50.9966 mo
(seq)
[5.4621 5.88202 0 ]xsh
grestore
gsave
199.946 47.0414 mo
206.785 47.0414 li
206.785 56.1597 li
199.946 56.1597 li
cp
eclp
YZDDLU+CIDFont+F2*1 [8.05036 0 0 -8.00096 0 0 ]msf
201.385 54.2414 mo
(j)sh
grestore
gsave
191.67 38.2793 mo
206.785 38.2793 li
206.785 54.0041 li
191.67 54.0041 li
cp
eclp
YZDDLU+CIDFont+F2*1 [13.925 0 0 -13.8395 0 0 ]msf
193.227 50.6388 mo
(p)sh
grestore
121.83 71.4 mo
291.99 71.4 li
291.99 99.72 li
121.83 99.72 li
cp
.145266 .11136 .11136 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 9 GetGlyphDirectory
7516 <001C60D8A8C9B5EE31036D2B4299B7E58E497105A7F7F1006C109BCEEC
E48FAAA91046FB810CC9D8370A2CDF6783BC0A10D77175F597A1D93D57DC3AB6
54166CB515496D25519A638E8797671DC12DF735209720E4B7C355AC68CA6C64
F5D91C37469C659B663C4E1F5593257847D704192DF75C109423EF0CA35FFEEB
DB8FD028D6DEC1E2A6CD7109DC4B275A406DABEA134141FD5429EA71E5FEDE64
153121ADE467> |
8529 <001C60D8A8C9B5EE310366CF5534DA3201A7EAC334683B301499ED3533
02F3833A7FF686999F1B89CCC6749CA9510BB994DECC147BA2CCD55839D21342
3B294A93FB79225DC5CA1DF6B53A54875F434A6D6D24DF328D74588F805BBEE7
2F947A1691644C6AF642228EBC89BAFD623FB78416CFB1B475F872F83D4AE1A2
C76A69621DFAEA83E2D5A1F791B11B9B14485B69AC69BE7E19792B20655585CF
A2B0F2C6B99C15F4E2FAC561585128C13BD32A21E6E8C885F4FE416115C5E396
A621EDA85795CFF4AF12B670D9FCD3221E9DC2BEE75101DD9B0909ED6F074A1A
6182313A240BE96E1B23ED29314E17880485152E26CD7C3B3365C54E4076A8D7
2EAA1973D1B114E4F883574FD871DC5F3CF799EB414C237E78915F523B8CBE36
031AEF0A1A2AAEEB2A220B3754539CB75F40615EFCD5E5EBC54F2D724D11044C
10EAD410854834F3B4E3B3> |
36 <001C60D8A8C9B7A73DB9D2D67B1D3A224FA5A13E5765A8D80B57077B7C0D
5EE80C38C0844F83D9CA4CA31034FE59C812CD484095B8A40CCCF60348FE6542
AEECC5DF128F41BF95D8C6533892661C89C22DE13F3D89E1913522615585C3AB
6D875343A34A7AB5ED5C2D9FD86132CBE3128CF0C0176E3F3851618B1DF70F4C
0BB9F3BEFB258F9A88910575AC54> |
38 <001C60D8A8C9B7A73DB6A70B0D1171EB2B05716A57A36051BCA4F091B1BF
0612F84D61B7DDA7F028930F1B6F2F65D4AF025FB356DB3FD0FC479702D6A6CF
2BC6311F323FDF5960098F810067E24461B5E628FAC38FC6B3F649788906E6CF
CA2B4C8EFA16DAEBEEF141C78F612FBA19BF360D1C1F97D12E3FA36ABF6ED73D
718360F1D64BA33C9F6A6A1DD16EF3EF2010718698CC942A333C> |
46 <001C60D8A8C9B7A73DB6CE843A337D350A64774AB3E00B5041C43D36A9D1
3AC00B44CAF1B65F7539F78F593096497670C3B040BE57E10D870A713D45EADA
3980548903C72D6CF4B54A0481E5FC748C1EB371806E80D021A1131A5080CC58
6764A058C27F69362BAE2B176CC4479CB7281A463EFD154DBDDC68687A0F7FC8
3B4FF4A6E76E04E42B3FBE5FDD60C283FD47A3BC7122055DA52192D98BFC68D4
973CD440500E85EA51BDFDD2190B699680B68C8813F50B02FBD2DD7867CD1409
5D034AE36D2D0307392442> |
6357 <001C60D8A8C9B5EE3102F64252452FC55563FFA4F4DA6725452670D236
4C2B01D86341E5EE3F719B80B5D726EE21049D145EA5FDBC825B0F0002E12958
8C1A225E764F5BE940FDF885F634FBC64DB16738EB74E1E82F1DF00B007EF28A
F67FCCF1AFF58378B9E789B985F260C671D4CAB48ACB6AD80DFA41D3A17EA284
07C675BF3A1E93E546721A956A77CCC0849B3844A9EDC4E1F52082F5DE7D54FE
121DC389FDD09F5ECD75B471C5E9F9E0DB0F35C83E84569D8BE1D308B9287349
1F8A7101B068DE46862EE7F2F708F7785F2E15FC8DDBE1D0ABCD802DD17630FD
D1BBC1844D5E83B5B56530BACBCDE58FF6E7D43102FFD2399881353E8AB84847
1A4EC3F0161808A404641034D34447250F4E6F70EDD690708F69C521BA5148CD
60F82EE11F4800353DF09538315E56D486A07F946E8F6CD5C0C05DCA5CBCAB8C
D4> |
7095 <001C60D8A8C9B5EE310273E1CE3144FE5C73A2D8FC17E6C9B75782A1BD
4CEB9E92958A41B8DCF1715D833C9A6D1AFE5AAD478F2412F08C30DE5A3D7D62
BFAC23E476D4AC9F53912EED6C659B409FDF75E22D818A4EEED29B6DBDBEC947
88889DD0693A60A5A54E8521E42AE88CF06AED582E68A3346AC1D31F96A0DD43
80CD7B90A4EEA31A7AC30E2F5897D0F23338674417525B863ED129D68BA139B8
F8A8F07136A9E3B767C074253492A772B81B44BCD24530> |
11934 <001C60D8A8C9B5EE310385CF2776034278FB18D8E70DBEC0B1E63E677
68B1BBD98E8AB84F5B29DCD603F68C65D4954408E4E3B902C39EB1669E3D46B8
A5A9DDDEBD3B806562E55757DADA463EEEA120655885B813CE2EAE83430EDE12
9E8C3339F6DA15320CF27C6FEA22B564583493F7064F339BAB5F3EA7469A6AE6
1144E3D3A2F401743484456A29C5DC007E888E3FE6451F468186FDB5ACB9653F
7F43AB00EEF4F5EB8B8ED60A73037C7C2295548FE2ECF07B7106E84A760EF562
8B4C353F883E83D438D77CC186E21C46A8AEA9D8B10231520622AA22E9F16EDF
C580F9D3DC2BB5BD08E3D36B160E1BECE245D49EDF3813E72F5CB0F0B08DD230
BDC72B3CCDAC2B5EAEFDB2C8DBDC6E73175CA8B54DF69DFA28D630FB69BDB3D0
233CDFEDE757BA09CF02C984FB7BBD6D4E3293C2FA2BE051B9ED0D5D560E76B5
46358E65590584DCB87549CFA8EA0611397090E4CAC924E0FF0B79829FCFB872
CE5CC53D92C1BEC0DFE865820F1FB> |
16852 <001C60D8A8C9B5EE3102F4E5A1CE2E3697513A17A72E24FA4842A5A8A
DB37DCD4549416D9E6B6120DA94E689C4655AE166DB8A185E0D52724A574ABF3
B3D960A5275C3A90C20DED293BB7670956B15022CEE531E880078E57CAA9B588
572AA5D6FC1A505D0FD04BCC5E11F7BBE77EB22EDC4B9A2AF8B4B439D5FBCA15
5CE9463A028C20E7031111F93D6EF7483667ECD9AA3A1B7CBDB89640483D461D
E12F33B4266663DAB8F3EC26A76077C62C78E3CDDCE63B1448EFD981D56A5EB2
738BD554520314541D552D6014BD710BD7DC00CDD24FA6AAA445CCEE8450A372
0E5CD> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
125.897 89.1508 mo
(\000\003\000\003\000\003\000\003\000\003\000\003\000\035\035\\!Q\000$\000&\000.\030\325\033\267.\236A\324\024\277\012'\000\003\000\003)sh
gsave
143.911 83.0376 mo
158.071 83.0376 li
158.071 93.1177 li
143.911 93.1177 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 2292 68 <00020030ffe803c103890026003501d940180920082135018401842a9501
981b932a982eac33b62b0b30b8ffde40170c143fa416a43102362a4a2002
0c2219350c0e2228340eb8ffde40392228343f174f175f17033d30010c40
2228340c401935b916d926e826030102040400161617252626150c0d1627
2f322625160431152c331d26b80395401300272422220007280004041f15
26141515262fb8ffdcb31e123f2fb8032e400d1a1a100b1536282615100d
8a0cbd014300040203001500000203b726ad15401e123f15b8ffc0400e23
25340015101530150390150115b8ff80b2533515bd0295002c0381001200
1dffc0b32e34341db8ffc040172627341d8053359f1def1d021d32361517
15360a32c3182b2b103c2b4e10f45d2b2b2b435c58b9001dffc0b350283f
1db8ffc0b332193f1db8ffc0b318283f1db8ffc0b315233f1db8ffc0b30f
193f1db8ffc0b31e123f1db8ffc0b313193f1db8ffc0b117392b2b2b2b2b
2b2b2b594de9f42b5d712b2bf4ed10fdf6ed2b103c2b10c0003f3c10ed2b
870e2e2b0e7d10c42b183f003c10ed10e401113911123911393911390011
12390110c9870e7d10c4083c870e10c4c43130015d002b2b5d72012b2b2b
5d004bb02a534bb03a515a58bf0035ffd40034ffd40028ffe80027ffe838
38383859005d2b015d010307061514171633323736371706062322263534
373706070623222635341237363332161737072207060215141633323736
35342603c1c316030a080c0d1527412245923e2b2b1615836e4f4c496abf
9373663d511524c54048669f442c6d80ab420389fd5a5b0d09100c09101d
5b18686d2b2931504bab4431796a9f01616a54404a721c3c55feb287444f
a1d6e1554c00>YZDDLU+CIDFont+F2 AddT42Char 
2 2928 70 <0001003cffe8036c03890028010d40460040170e3f2840170e3f2e002c01
2b272e283e003e013a053e273e288c028b218927ab02a424b51fb324101f
001a021a0419051a271f28068526017a278a27a621031605012ab8ffc0b2
11352ab8ffc0b216352ab8ffc0400e23359f28af2802280000280d1911b8
0104b41d240a0725b8ffdeb31b103f25b8ffdc40221e392527030b00c914
7019270d8053352f0d3f0d4f0d5f0d040f0d1f0d020d1a2a22b80381401e
068053353f064f065f066f06048006a006b006c006d006050619292b5618
2b4e10f45d712b4de94e10fe5d712b4dedede4003fed2b2b3feded011112
393910c95d3130012b2b2b715d004bb021534bb02e515a58bb001fffe800
1effe8383859007101715d2b2b2506062322263534122433321615140706
23222635343e0235342726232206070615141633323637031b68d4768e9f
ab01218b6d6c261c291f290f2f0a131d3562c0445274644d975eda7d75a0
87990128b95b423e2c22281e13202d140b150e148a7f9a9a66774d65>YZDDLU+CIDFont+F2 AddT42Char 
2 5118 78 <00010014ffe803e7058e003301b540300c22143935400d0f343540153535
4010350a0b0a0c180b190c52008511a5100737173f3546175617041b2519
261a2d03b10602435458401f0127002800281f291f293534270126140428
0c3230334d00000c06280a220b003f3f3f3ff5ed1112173901111239392f
ec33111239391b4027030204040113141418262726242711010104272827
1128001e1f0d110e300d0c040b300c33fe2bb8011c4015283230334d0014
18181f2426142424260104010004b8016b40321127141111270127261404
0c270128000000280033281f292b1429292b0d0c0629280a1e951a27220b
2b29100d1a351e8a1fb801b9b618e424b814e426be032f0000028d002802
03002b01bbb232d329b8ffc0b3191b3429b8ffc0b21c3529b8ffc0b32829
3429b8ffc0b32a343429b8ffc0400a3a35291934291732a7182b2b4e10f4
2b2b2b2b2b4de4e4fde6f6edf4edfded4e10e62b103c003f4dfde43f3c3f
3c87052e2b087d10c400183f0112393900111739870e2e2b087d10c4870e
2e182b0e7d10c4180010f5ed2bfc01f50010ed0110c00010ed0110c010c9
0708103c083c8708103c087dc40ec4870e10c4c459313001715d5d2b2b2b
2b0101373637363534262623233721070606070607071617161716333237
3637170606232227260307032301373635342623220735024afee472bb38
120c232c230b01b50a4b6d336520561620361313141117343b236d74302a
17285d89679c014c1c0525231732058efc29619e4c190d09100a26260427
264b1d4c4881d62828112653198957213b019677fe9d047561191318200a
2300>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/a 68 def
/c 70 def
/k 78 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 97 /a put
dup 99 /c put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
/j /k 4{/.notdef}rp /p /q /.notdef /s 140{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [8.90905 0 0 -8.88299 0 0 ]msf
143.911 90.9577 mo
(ack)
[4.45453 3.83083 0 ]xsh
grestore
gsave
123.511 73.3216 mo
158.068 73.3216 li
158.068 90.718 li
123.511 90.718 li
cp
eclp
YZDDLU+CIDFont+F2*1 [15.3686 0 0 -15.3239 0 0 ]msf
123.511 86.9993 mo
(seq)
[5.99397 6.76201 0 ]xsh
grestore
.869987 233.88 mo
50.79 212.64 li
100.71 233.88 li
50.79 255.12 li
.869987 233.88 li
cp
.145266 .11136 .11136 0 cmyk
ef
.24 lw
.869987 233.88 mo
50.79 212.64 li
100.71 233.88 li
50.79 255.12 li
.869987 233.88 li
cp
.750179 .679652 .670191 .901488 cmyk
@
gsave
40.1106 233.037 mo
80.9119 233.037 li
80.9119 242.036 li
40.1106 242.036 li
cp
eclp
YZDDLU+CIDFont+F2*1 [7.94911 0 0 -7.90168 0 0 ]msf
40.1106 240.119 mo
(ackj)
[3.97455 3.49751 29.2527 0 ]xsh
grestore
gsave
21.8675 224.282 mo
80.9086 224.282 li
80.9086 239.883 li
21.8675 239.883 li
cp
eclp
YZDDLU+CIDFont+F2*1 [13.7124 0 0 -13.6311 0 0 ]msf
21.8675 236.522 mo
(seqp)
[5.34805 6.03329 35.241 0 ]xsh
grestore
gsave
56.0682 224.282 mo
80.9086 224.282 li
80.9086 239.523 li
56.0682 239.523 li
cp
eclp
%ADOBeginSubsetFont: QJJAAA+CIDFont+F3 Initial
ct_T42Dict begin
0 -0.219 1.109 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+CIDFont+F3
Type42DictBegin
[<00010000000c000c000c000c4f532f3259acef04000000cc000000566376
74202ac4fb8500000124000005046670676d5d3ae803000006280000059f
676c79667824dc0c000022e4000002f268656164d4aa408900000bc80000
0036686865610fa0033900000c0000000024686d74781757014000000c24
0000026c6c6f63615994594100000e90000001826d617870021605db0000
1014000000206e616d65e110506b0000103400000f3c7072657056a9a53f
00001f700000037367646972000000000000000000000000000104cd0190
00050008059a053300000125059a0533000003a0006602120c0305050102
01070602050700000000000000000000000000000000544d43200040f020
f0b3058cfe460133080b01c280000000000000000000055d0031054c001f
054c001c0394001b0000ffe10000ffe10000ffe4fe59ffed056b0023fe6a
ffdc270f000000b4000000b4000000000000000000610025005e0029004a
00c200f000be012a005000c0ffd0006300580277002d004a008f00b700c0
00de004400640002001a017c0020ff9c008c0026008300a00039041affb5
004c00e8080f00160024003a016f000600150067009e01dc0049004b002d
003b00470089007200470051006700f7013801dc0001000a005d00610094
009b00be00ce00df00190026002e00d6010701f7ffbb004300530063007b
00b900de0542058b0013009100a700a900c100e5012e01a401ea03eeffb5
ffccffeb0026002900310036005b00620062009200a100a700a700cb0223
03a3ff1aff7bffa8ffc8001c004400ab00b400c100c500ce00f601200156
016302a60379fefaff6effab0000000c00150024003a003a0041004c004e
007400a500ce00d600fb0109010901820220023f0263fe11ff170007001f
0020002b00530055006d007e0088008d0094009a009f00af00e8013f0168
01cd01ee020d028002bf0550074e074e09bffdd5ff47fff6000c000c0021
00290057006b0078007e009200930096009a00a100a500c400c400f000fd
0136013b013e01490152018f018601a501f8022b02db02fb030e030f032c
03590360037c03e203f90805fd4ffe97fed0ff50ff78000100010006000a
0025004300440054005c007000730077007c00800088008e008e00900091
00ab00ab00b000b900bf00bf00c300dd00e300e300e600e800ec01020105
0109010a012a012a01300130013b0140014a0155015f01670173019701b6
01b801be01c501ea01f4023402360239024f0252026702700274029002b0
02b102bf02e402f302fb033a03450373037f03ab03c203c803d203da0400
044a046104690475049404b004d504f004f404fe050005230523052e0561
05a0fda2fe4bfe5bff26ff3bff62ff8dff90ff90ffe80007001e00250026
002700440050006200630066006700700070007100710079007e00850091
0096009e00a100a100a500b600b800bc00c000c200c500c600d000da00dd
00dd00e200f700f901000102010501150121012d01310136013d01470147
015a01680176017c0180018e019a01a501b101b501b501c001dc01ea01fe
023902560259025e0276027c028d0297029b02b902c002d602db02ff0306
030f03180347034b0357035b035e0374039603980399039e039f03b803c0
03c60402043a045004720483049004a204af04c704d304dc0530053b058a
058a05b005b505bd05e60612061b0634065306b80706087908e708fe00b3
00c700b100b5000000000000000000000000000000000188011001b100ad
01e70304038002cc0258020b02d6018204cf01270274023c0100058e006e
00f202c0021d01d2023701570363015a002500820166015b009d031c03a2
034a00cc056e0153035001640053049700fc05c30061058a02b20302058a
03fd01f902ab0068008e026bfda9ff59010e005301a402a600ab007d003c
0029041a00d6023904b90125022902bf07ae01b8003e07060339033a080f
07ae01a403e300000053080f01ea006103e2004c00e102a6035202a6080f
00e601dc074f006e00fd03af0000007d003e01a4fe1100a905590260011c
02a4014cfd83fdd8039bff9f011902e20000fd11fd41024301b60155ffaa
02be00ef0097fef904e000be02db005501dc0063006b007800f200530077
003a015600fc020d00290053006100704040543f3e3d3c3b3a3938373534
333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a
234445b01923442d2c2045b00325456164b050515845441b2121592d2cb0
0143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0172344
2d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0172344
8a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c
2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0018559
2d2c20b0032545b019234445b01a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a5458
2321b03f1b235961441cb114008a5279b31940201945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802
4123701020b802414520b0005058b00161593a2f182d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2cb4000100000015b00826b00826b00826b008
260f10161345683ab001162d2cb4000100000015b00826b00826b00826b0
08260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d0000010000000500007dc37d835f0f
3cf5081d080000000000a348bc3b00000000c1473905fffffe3e08e7080b
0000000b000100000000000000010000080bfe3e00000856feabfc2e08e7
00010000000000000000000000000000007604cd00670000000000fa0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000464002500000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0464003c0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000464
003c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000464003c000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000032003200320032003200320032003200320032
003200320032003200320032004c004c004c004c004c004c004c004c004c
004c004c004c004c004c004c004c004c009f009f009f009f009f009f009f
009f009f009f009f009f009f009f009f009f009f009f009f009f009f009f
009f009f009f009f009f009f009f009f009f009f009f009f009f009f009f
009f009f009f009f009f009f009f009f009f009f009f009f009f009f009f
009f009f009f009f009f009f009f009f009f009f009f009f009f009f009f
011201120112011201120112011201120112011201120112011201120112
011201790179017901790179017901790179017901790179017901790179
017901790179017901790179017901790179017901790179017901790179
017901790179017901790179017901790179017901790179017901790179
017901790179017901790179017901790179017901790179017901790179
017901790179017901790179017901790179017901790179017901790179
0179017900000001000000c0000b00020000000000020010002f00550000
00ee059f000000000000003402760001000000000000005c000000010000
000000010006006500010000000000020007008500010000000000030029
005c0001000000000004000600650001000000000005000c008c00010000
00000006000800980001000000000008001300a000010000000000090021
00b3000100000000000a012000d4000100000000000b003201f400010000
0000000c00330226000100000000000d01970259000100000000000e002e
03f00003000004030002000c041e00030000040500020010042e00030000
04060002000c043e00030000040700020010044a00030000040800020010
045a000300000409000000b8046a0003000004090001000c053400030000
04090002000e05740003000004090003005205220003000004090004000c
053400030000040900050018058200030000040900060010059a00030000
04090008002605aa0003000004090009004205d0000300000409000a0240
0612000300000409000b00640852000300000409000c006608b600030000
0409000d02e4091c000300000409000e005c0c0000030000040a0002000c
041e00030000040b000200100c5c00030000040c0002000c041e00030000
040e0002000c0c6c0003000004100002000e0c7c00030000041300020012
0c8a0003000004140002000c041e00030000041500020010041e00030000
04160002000c041e0003000004190002000e0c9c00030000041b00020010
0c6c00030000041d0002000c041e00030000041f0002000c041e00030000
04240002000e0caa00030000042d0002000e0cb800030000080a0002000c
041e0003000008160002000c041e000300000c0a0002000c041e00030000
0c0c0002000c041e547970656661636520a920546865204d6f6e6f747970
6520436f72706f726174696f6e20706c632e204461746120a92054686520
4d6f6e6f7479706520436f72706f726174696f6e20416c6c205269676874
732052657365727665644d6f6e6f747970653a53796d626f6c203a766572
73696f6e20312e373020284d6963726f736f667429526567756c61725665
7273696f6e20352e303053796d626f6c4d544d6f6e6f7479706520547970
6f6772617068794d6f6e6f7479706520547970652044726177696e67204f
666669636520313938395468697320666f6e7420636f6e7461696e732054
696d6573204e657720526f6d616e20477265656b206361706974616c7320
616e64206c6f776572636173652c206669677572657320616e6420626173
69632070756e6374756174696f6e20746f67657468657220776974682061
20636f6c6c656374696f6e206f66206d617468656d61746963616c207369
676e7320616e642067656e6572616c20707572706f736520506920636861
726163746572732e202055736520666f722073657474696e67206d617468
656d61746963616c20616e6420736369656e746966696320776f726b2061
6e64206173206120636f6d706c696d656e7420746f207468652073796d62
6f6c7320666f756e6420696e207374616e6461726420666f6e74732e6874
74703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f6d746e
616d652f6d735f73796d626f6c2e68746d6c687474703a2f2f7777772e6d
6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f77656c
636f6d652e68746d6c4e4f54494649434154494f4e204f46204c4943454e
53452041475245454d454e540d0a0d0a4e4f54494649434154494f4e204f
46204c4943454e53452041475245454d454e540d0a0d0a596f75206d6179
20757365207468697320666f6e74206173207065726d6974746564206279
207468652045554c4120666f72207468652070726f6475637420696e2077
68696368207468697320666f6e7420697320696e636c7564656420746f20
646973706c617920616e64207072696e7420636f6e74656e742e2020596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e68747470
3a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f747970652f
6c6963656e73652e68746d6c004e006f0072006d0061006c006e0079006f
00620079010d0065006a006e00e9006e006f0072006d0061006c00530074
0061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac0054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064004d006f006e006f0074007900700065003a00530079006d0062006f
006c0020003a00760065007200730069006f006e00200031002e00370030
00200028004d006900630072006f0073006f006600740029005200650067
0075006c0061007200560065007200730069006f006e00200035002e0030
003000530079006d0062006f006c004d0054004d006f006e006f00740079
007000650020005400790070006f006700720061007000680079004d006f
006e006f0074007900700065002000540079007000650020004400720061
00770069006e00670020004f006600660069006300650020003100390038
0039005400680069007300200066006f006e007400200063006f006e0074
00610069006e0073002000540069006d006500730020004e006500770020
0052006f006d0061006e00200047007200650065006b0020006300610070
006900740061006c007300200061006e00640020006c006f007700650072
0063006100730065002c0020006600690067007500720065007300200061
006e0064002000620061007300690063002000700075006e006300740075
006100740069006f006e00200074006f0067006500740068006500720020
00770069007400680020006100200063006f006c006c0065006300740069
006f006e0020006f00660020006d0061007400680065006d006100740069
00630061006c0020007300690067006e007300200061006e006400200067
0065006e006500720061006c00200070007500720070006f007300650020
0050006900200063006800610072006100630074006500720073002e0020
002000550073006500200066006f0072002000730065007400740069006e
00670020006d0061007400680065006d00610074006900630061006c0020
0061006e006400200073006300690065006e007400690066006900630020
0077006f0072006b00200061006e00640020006100730020006100200063
006f006d0070006c0069006d0065006e007400200074006f002000740068
0065002000730079006d0062006f006c007300200066006f0075006e0064
00200069006e0020007300740061006e006400610072006400200066006f
006e00740073002e0068007400740070003a002f002f007700770077002e
006d006f006e006f0074007900700065002e0063006f006d002f00680074
006d006c002f006d0074006e0061006d0065002f006d0073005f00730079
006d0062006f006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
004e004f00540049004600490043004100540049004f004e0020004f0046
0020004c004900430045004e00530045002000410047005200450045004d
0045004e0054000d000a000d000a0059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200061
00730020007000650072006d006900740074006500640020006200790020
007400680065002000450055004c004100200066006f0072002000740068
0065002000700072006f006400750063007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200069
007300200069006e0063006c007500640065006400200074006f00200064
006900730070006c0061007900200061006e00640020007000720069006e
007400200063006f006e00740065006e0074002e002000200059006f0075
0020006d006100790020006f006e006c0079002000280069002900200065
006d0062006500640020007400680069007300200066006f006e00740020
0069006e00200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
00200065006d00620065006400640069006e006700200072006500730074
00720069006300740069006f006e007300200069006e0063006c00750064
0065006400200069006e0020007400680069007300200066006f006e0074
003b00200061006e006400200028006900690029002000740065006d0070
006f0072006100720069006c007900200064006f0077006e006c006f0061
00640020007400680069007300200066006f006e007400200074006f0020
00610020007000720069006e0074006500720020006f00720020006f0074
0068006500720020006f0075007400700075007400200064006500760069
0063006500200074006f002000680065006c00700020007000720069006e
007400200063006f006e00740065006e0074002e0068007400740070003a
002f002f007700770077002e006d006f006e006f0074007900700065002e
0063006f006d002f00680074006d006c002f0074007900700065002f006c
006900630065006e00730065002e00680074006d006c004e006f0072006d
00610061006c0069004e006f0072006d00e1006c006e0065004e006f0072
006d0061006c0065005300740061006e00640061006100720064041e0431
044b0447043d044b0439004e0061007600610064006e006f004100720072
0075006e00740061b1541241140227022702260226006f01160001005f01
160001004f01160001003f01160001002f01160001022fb22f1f1fb8022e
b2a01f1fb8022cb21d291fb80224400be11a1f3127121f3c27291fb80217
403b6c291fe0aa191fe1aa191fab27321f883c321f833c321f2f3c321f76
27321f3c27291f27aa291f6f276f6d6f866f870437001616000000121108
40b801e3b655140914093790b801bf40390790bd0790b307906707906407
905707904607903607902e07902b079025079024071408120810080e080c
080a080808060804080208000814b8ffe0402b0000010014061000000100
060400000100041000000100100200000100020000000100000201080200
4a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515ab005
234201b0124b004b544218b0382b4bb807ff52b0372b4bb007505b58b101
018e59b0382bb00288b801005458b801ffb101018e851bb0124358b90001
01ff858d1bb9000101ff858d59590016763f183f123e113946443e113946
443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b4b5079bc001f01750007001f
0174b3071f93072b2b2b4b5379bc00900175000700900174b3079093072b
2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d5901b341b5407b4565
23456023456560234560b08b766818b080622020b140b54565234520b003
266062636820b003266165b0b5236544b040234420b1417b4565234520b0
03266062636820b003266165b07b236544b0412344b1007b455458b17b40
6544b24140414523614459b9004e0162b12a8e4565234560234565602345
60b089766818b080622020b9002a01624565234520b003266062636820b0
03266165b80162236544b02a234420b14e8e4565234520b0032660626368
20b003266165b08e236544b04e2344b1008e455458b18e406544b24e404e
452361445945695342014b5058b108004259435c58b108004259b3020b0a
124358601b2159421610703eb0124358b93b21187e1bba040001a8000b2b
59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e
2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0
112342002b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7373737373001845
694418456944435c58b9ffc00280b2121f322b592b0000>
[755 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 548 116 <0002003c0000042a04f70006000a00994014280527063806035706010203
0106050004030202b80280400b0504140502010504010202b80280400b06
00140602030600041d03b8023bb2011d00b80276400f08071d090a0a0403
0103000007070ab80239400a0b080606051a0c2128182b4e10f63c103c4d
10f63c103c103c3c103c003f3cfd3cf6fdf6ed0187082e2b047d10c48708
2e182b87047dc400113939111239313000715d3735010135011501211521
3c034afcb603eefc1203eefc12de6e019f01a26afe0e33fd8e60>QJJAAA+CIDFont+F3 AddT42Char 
1 0 0 <0002006700000467050000030007003b401e06076302010005046303000a
0605630303021a09070463010019082938182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c31303311211125211121670400fc2003c0
fc400500fb002004c000>QJJAAA+CIDFont+F3 AddT42Char 
QJJAAA+CIDFont+F3 /CharStrings get begin
/g116 116 def
end
QJJAAA+CIDFont+F3 /Encoding get
dup 179 /g116 put
pop
end
%ADOEndSubsetFont
/YZDDLV+CIDFont+F3 /QJJAAA+CIDFont+F3 findfont ct_VMDictPut
/YZDDLV+CIDFont+F3*1 
[179{/.notdef}rp /g116 76{/.notdef}rp]
YZDDLV+CIDFont+F3 nf
YZDDLV+CIDFont+F3*1 [13.7124 0 0 -13.6311 0 0 ]msf
56.0682 236.522 mo
(\263)sh
grestore
.72 lw
50.79 255.12 mo
50.79 280.2 li
@
54.03 279.36 mo
50.79 289.2 li
47.55 279.36 li
54.03 279.36 li
cp
ef
50.79 185.76 mo
50.79 203.64 li
@
54.03 202.8 mo
50.79 212.64 li
47.55 202.8 li
54.03 202.8 li
cp
ef
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 2 GetGlyphDirectory
7263 <001C60D8A8C9B5EE3103CB5016B82D1F60F99CDBF97F22B053F818C27A
585CBC7A257809D704250A39BDFD15D43F9C2B66A146151CA820A53B626AD5EC
F5CE2EBAAD1EE26CA1CD92E525DBAA7E84A012FA2A273C4CA59086D51D1818C0
B36EB7A9F9F84EF82180CC1886F91714DBD0A447A1C866B4D7F8461A6DA8E1CA
86F234D99053810572D24A7B3F489FFB72787C35FBD0A4CA78556F95967A45CC
B50DCCE20F938BD4A47A8D397BAAC2327536E939E65EB76BC363F2A761EF1E1C
371F2AA45410B796FB2A217F23D7F0D923F2E00D14A324F3B4E9F0ADF63FEB62
F1819649E819B794C3FA7C05A2> |
2646 <001C60D8A8C9B5EE3102F2793977850BF340D4432B7B08E7E51BF94C77
6EAFC195064369B734FB96DD8BE7968E5A0F8D3FB78E2C93E5D8481CE9B1E45A
0AB573743F0A83AD3B5E8C0639E281BDD298E017FD67078F806A7C0D220631FA
F9F0367B0E0A9929E9F472B334DCE8A810635C13730BD27011BA55100C896824
9003B3EFEDA533196B5C477EB208585954104F9A67AFF598A509943599660777
FE11BECC20515FBBCC7DAE599A2F940C221BEA8E0FAA36C6395816DBA07D7191
CE8EF8692320EB6C49DE4810C1638329AB25D8501DA91199F7E2CB72F5663A94
35> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
34.9594 275.897 mo
(\034_)sh
105.741 229.21 mo
(\012V)sh
121.83 111.84 mo
291.99 111.84 li
291.99 147.6 li
121.83 147.6 li
cp
.145266 .11136 .11136 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 20 GetGlyphDirectory
82 <001C60D8A8C9B7A73DB6985301E401DC725907D0844BFF394464D322EA46
F6487079DA667C31FA03ACB3FA808E04EE37A03FF7FDFB3A3F48EE1DF47F3714
75D3DBBAB82B4F8E851C89E16F753C27E4EEFD147D2668C06A6CC28CAD86EEDC
CBFD6A07DE9C91FB3E2BE5E3BECEC67E3BC11C338B68C7E5A41BDB217995BE6C
85F06980A83CC2> |
86 <001C60D8A8C9B7A73DB923D5A7E1A048C12FD6EAA91CC25839041CFEAE1A
A7C202C7ED1530CE3FECBA6BDF8AAF3E91890E75110F8E216E2B37AA16BB08AE
E6700BEB5033B16635721DE92C05AF681BA202B72B2068DEAC474A1E638C3DAC
266B862E03C96D35D72068696D7D6C6381DC037E8BBAE247FF9F47D2E4538226
51D894E0874681F71FDA6448AB38D148952B5A81C467D015EC59AE9EE1530FE5
813CA13FD4B0E2772EDD241FE4D317D8CFB23840EA92D4E1CAE9D1D6E6E2E010
B23187FD71E43A9D5BD10376E8BCCDC46ED2D8C8FC7FB046A417116698C16A78
8D2397C5B42D1EE2ED8834D09DD9ED9942AB42DD8CA2D1C8F65F822421FB4EB6> |
6613 <001C60D8A8C9B5EE31020F8CAF3CE6B16995FF84ED8E53CF9EF4BFA580
AF9E2759501B9984095640B9C8217DD6995E66ED5D62891FBFE30D086DFF0E9D
1834D16C070817EAC4624156578458F6C1AD21C7DA8F21C7BF7143D37FE48837
92E352C2596EF2367FFB049B9ACA329899DA34EBF06C400D2FE9A592E413962B
ECEEE8E793C3FB45340835AC8BE77D08B2B92DB9FDA6BAE507712273FB8ED491
BEF8944704C4EB45F4D46C854A689D90AD1ADA2DE279F1083A00BD9688E5445E
925AE5A6B74FF8E4151653AE6B04977AD8D732BCED601480D125ABA04009F78D
C2831EFBF5041392D2E67A142E6EDAD20819DDC2000D22BA42A7945BCDC81FB7
9AAACE4CE4D82FDB73047C2188629C3668684361CB56D77D03A1E2E2D02D7CED
2F269F3D39654F7B925DDBB7D37ABD52BE5FECD5A680C8223E54A37D0368471D
DD6A6BFBA370FD76695D9CB2B89E62095A7239A18B9FBF643F6DAD20FD63EC11
0022895C6C11A57B19B5354E5267FF7FC36D117037E882884517E40E85004287
6456F826159047805D7FF202CC626CE9AA8ABEEF74CED354B73B7AE997BC4BA4
737FA77B3439554BFC80C5E0A2BF9FE4C403D6D72CF2CEBBF679C65BE9EA042A
F783455FC6A9062ED6A6731C25D9568947105B17DD233B91> |
7014 <001C60D8A8C9B5EE310375B7D48B954D9F6913968EC92E907F9FD63406
72E096514EA225D74692C078290E31E7C4D1C975363D8C053ED5166034C4FF7A
F0771F99FBBEBA965DEA987D1B0D8D064069B54FD8924E8F8E3CBE7D6A0B520D
2A7D5B06CE5A6B2ECD4194975AE84686077403DF96CB046972BD032FDAB48D8A
2E26BE2557CC181C69203725F689B7E56E42D3AE54AB491E8517E9DFDEAD3C51
28122A8D8CC8AA9F4C7797D7E68712B09FBB876C06737BDED9B59DEA18E0D35C
6284953161E62BED9AC28CDEC22DF153A8F9D43E42408785FD1D765A70BA4F7D
49> |
12575 <001C60D8A8C9B5EE310217118280789CCBEB2C1EC91E7030B682F2640
6ACFC2B7531E1902F94F049F41B6FE17F2CF769A53A54DDA08837D8651FB8220
C11327B01545EC8D8FCFB25F5D4F628B79BD3941DF311F470D86CF7169ADD302
8E4A033D39C0F3D5CD1F8FB6A76A131188B3F7CB9C17F6F76B8E9EAAE8BDAE6C
6F65282C1E4DD23F0D357E1E02F1C70D905720CA6564835BA624F40DF5C2BA35
72D313408459A79B4AD0121690830C28E015B94A1BA0E0C3F8B0FDA6FFF77B27
E3137891E2607CBA697E21E84F70F8590050D465A7D5AA5FD2EC44592E953AB0
77C64960DD515F868FEF3C830CC15ECF289DB69024CCB4F9356E0FD5581125BD
3D05A80F4188E29970848F247591AD9F93855265CD2A1F9A19E2A7B1D57E874C
6A6AACC20AFF47B8A815C2B1E858E9E1AB42207411C76A8D46030BD60282B702
187E3614061EDB1DA1684297987DC51C7200AE4FCF925C962D2A4E68C7CC42E3
F91C2E39E72DF5B0DD3FD6002789EE4CFF75B21EC4C2CCC1553A5F1EA5E06C62
48BA62808ECF961DE991B35> |
16403 <001C60D8A8C9B5EE3100BADA4056436DC84FE8CAC490986198BDDA550
80E9D930D20775478BADC3CB8F090C0D5DE66A3E929CF18C6630A9F40D183BA3
45AB8979857AEA00550A297EAE4B027F983DB276C322D651E9598A2D770AC031
28A80AB673D25A8982F1AE23287B10DAC305CEE58E966EE83EC2ABF189945A78
5852A6B8F743A92700F124427007ADB770AF2B08DE99482DC129E2123A748112
3CB4C70A02BB16C61D8D52206F85872816DD8047A94D01DEFCC3215C4E96EC85
73647DDAFAEB21EA6A6B857DE7CFD957EB2EAB62576ADC4BBF7EDD2C6497FB0F
56B77A045647773585813A6FA7B27EF6D9BF092E6A2C8AC583FD78F9BEC709F1
04BEC83D0C15AF6F4FB82E7B85832EC301612064FD6B849DBEC0A30795F42B2D
C9F4CAFD31BD6CA98EE95EEDD10C79670EAB2EC5EEE5D73C4F5D00FD6561C10B
8741ADCF8380218563E949BFFA76A2A31AC0496AFD8726554564F037736A1427
ED89CA3C04A12A70118D2D7862C25C706C2A14FD57508C41836F7E837CE2985F
F9C147D8A77644E961CD4D9D74A26612A9C84AFA24A524C88EAF280C1BCC0A21
C02146CC36839422756F1B3868C4E9CF89EF75F86025558BE0D4ABDEC7C8F01F
10CF443E23B52388E4DECB4DFAA8C2DD406CD374FB690068B418E5CF91A2B7D4
27FF175CF> |
11825 <001C60D8A8C9B5EE310DC6506A25B46D1148BEBE70EC36ABC4F7E1009
E4E2A4CAE554EB92203D6CE835C37904F4E0B1C7CFCE83A41AD0491C18379B9C
9BE64194743D51A1C41F710F8F302063EE0E937614C75365FB514C8470E3A1C2
17BF2657335459BA20B0F5B6EA1A68D9693B9F08EA67BEF6FD0A08D365D8FF8E
540ADDB4E0D3B7873393BD2CE57236D9D2A186D08BA44E5EC65F6465E39C05A7
8536C34C4EBD0FAC7B4CBCC2C5F2CEB52E71CA7D127F91E1C78A9B9DAC84BF46
CD9226A67C0AE9B6A3FFDCF0F86FE78A3EE0C64CF86A1E45479603BE677BDF01
944C02CA5A4BB5DC5DE79C2A0EF1BC5611F47B95B5D637295655CCD4AD4671D6
F1269C108EB93866B45E91BF105CD4A75A175D6CA9619925B67B6E2A2D3EFAC> |
11801 <001C60D8A8C9B5EE310250B791ECD09A6B529074A0456B818CCB1FDBB
0F71873041F7507E9ED74F886CB7C50FFCC899278DF08F68CCBB3998C12293C1
4A588D5034F9B7B21EF21E9E1DEC7F852B7407A8BCD7CCE1437D950FCCBFA2AD
EB1852F61BEBE22EAA56E4F8DD9F152C3B8C9D845A20AFF38B1C950F03420978
BF0874AD0B949A43EB8BAB7DE4782DBD10BD8CEEE993AD2B59C89F0AE2CC6B23
C210114E546FE6BBE0C7476D810DE2C02D6E01E58369A28AB06AEC6F141DCEC2
C00C35B37A2261E1644299ACD254360E3C7CE7B1710A9928F3EA56CACCDF79AD
82668086E196F67BF75F6DB5895AF4E3AD12BBDC26B23189FBEE810909418064
32D9AF1F20D885E7AEAE5DEC302AC9B8101EB12A5FB03218383> |
19557 <001C60D8A8C9B5EE31024D8C068264044B63E433DC83131B70D5E7694
80687DCD06B035E5DCB33F9043A2DE0B50722BD69DD12355B73EB53A5DB1C471
5196ABE85D58F7527E3B40DDAE152FF8AE41645F6B1193C947E3115FF54BEC84
57C39EC1E851F0CFC3671E876EFD214729664B3D96A02ACB8571DDB33BF74D3A
68748A5DA6A7AEEDE6BEDCDC42E392558EB58DD42626820C3ACA95CDBA0E7417
4997C57699E4C96F97AD8F6DD09962BD150D3F65B3CD40F10E1D393E7B553D7F
C1FE78966B7590ABC64F11650E1A1F49C7D56A631AD9B6CEAB70E034E0499680
1FBD816A363CE2F24B45ED8A6CF7A7437ED5BACC362CAF58AF5FE4606971848F
B46D9286D66168E5DFEFC7FA49D9C9F48780B48D0A985109E4532066D7D8ECF0
F8E3B483C> |
2568 <001C60D8A8C9B5EE3102FF05A23F0FFBE57BE38089CD6E879DF4F2F912
F3C8FB34D61BECC2E5B8991CBBCB7087415103F6EEF43D3AC5F7AAA60CC2C470
00194577345B3235059A91209841D26C14B3A8E230AD4C81EDCA7C9884AD37F2
465192987EC960DB8A2E75A897F866979059EB6417995CE0902161B3064F4281
970591906B8BADE92A86834B111A7FF41C27977436218AD4C7691BF7F0768D0F
FA252FE6DE335DD1537ADB800247A429B22892A28566C0BDCFAADC4C211B2B4E
65D0A57BBFFEFFBC24BDF2A8C563640741CD3EF63E879D443273AFE5F73E845B
429D9DC1FCB02C73B5BC732CD60BA7133DD29D85C10790EAB14D47EA7CA354F0
650B57CAED501432D4291636E3EF3F067CFACF1001847E0D4DAD8D55> |
1130 <001C60D8A8C9B5EE310D43FFD5E0A1A71A417126F312CACD7ADC42CABA
A482E99397170BC00D21124C112E2512941C43945EC6E13C387CF4C12E23626C
35910CAAD9FF26B3C8A9332DE76C24A99BD75ABE93EACE5B0A048F517E91EC50
E5A9E6351359B4824881433A8024D3D5A8E9B53152C29EFE299D168FD64439AE
91596A83C692E52F15AE0A31EE6CD19DF28E8A02B03780A2709324089AA32E1D
40554B567681D913D34A1CBC77FBB5228543C636679548425B2AB3EAF9736799
5E0BB1107EDB45A1588497D83B706A4B933C2B499760B116700F272BD6581ED5
43D99BE30FEE36A58945906990A62F3CA48BA8B1B855D795AF7B> |
2591 <001C60D8A8C9B5EE3127FF767AC7A8446C8CF7F14221E81A8554D9BD82
80A0C86365BE4CEFC1AD965DA82B9E0857F443563A0ADCBC5F1396FA8DDF2BB8
4B5EF91A445A7828F4841D4F7226FDC462F00A1CDD509D200C77D24A05133175
FF248BD64002BA131F187261C43EEB5D93397824E1CDEF8C8EA89E491C94DA88
D1EF57D184978B397EDD6F808F6795D74F8B> |
10470 <001C60D8A8C9B5EE3102FB3B150205D7B07BAC7465AA8CC9D8F612734
6F99268989C36293E2A158914BA2085944CED83EA673C8DA787469A913183E85
DAAD720ADC00C569EBBBBED086DE5F5308007242A2CF87C2747F55C27F643BC2
B0DAE4C1D5E0B46D17DC1265B8A617B4C6197F8094B423DD86DD7DCFC24E4695
6E8A04332B0B0C03817AD6A6F88F756F3E0A65ADCEA32646169AB8CF931AD4FC
4A1D91CDBA65E64C6F63979D7F08878FBE825C9B83A1D6B8264849D2C8CF713F
3F66BA70745DA2F914A69B771023E05444E24C0757AB1E789E0B03611315D2F6
71284EDBEDFEA9649BECA74483D7B137779F42406DA3C88D9A61065EB68C5C65
37CE316CF90D620E600E3816581A677> |
5681 <001C60D8A8C9B5EE310273E177E80597ED18B98C1A2546D2320D18DB50
53EFC27D64667CD82C0E8664625D0450FE93E88C662454548B54C465BDD31B5C
D5CA488EE12CC9A42A00FBEA24562B5F2B4A8520BBF3A58200C0054612E5434C
7BA5888D8916F56B06B5398A5AA18BB87A3821A82EF12A19DF44CC1F7EE44740
2F9AFA8D6A65852AFCC9ED4C3C9C89B911F0DF4F343835791967DAC4B7E3C70A
F3ABB806ED1AF5874653BC75132DF2FDAEC8F13BC61B26DB66979C5392DC01E9
ABA34F57E046758BB779A30BD2DAC4FDD1A6FF793EEB7A9999F7BE3651F4CE61
F36B5D4B7BE15F0A570CC30DFC527A3F5C484FBDD69DA1FE008D214388756AA3
2AB7B92BC01BEBB691FA8D9EDD5ADE37CEE88C5B187EADD424C770FDCA7CCCC0
043ED18099238A66B8D86167730AF3D0C351F671DA684115904918B54895B19E
BC82B76F49E97A9239B7A0D21072EE07FBD8A74C52BFF827922B1FF81598B1CB
8590CD0EF078CB2E3D7ED55198F7DD9753F1AD9E6FE1BCD0DA5AF390148DAF16
AE42615CD9F7BABA830B0BEEBC17452B141D57D88F2510F434CC32A354DA97> |
6256 <001C60D8A8C9B5EE3103469148BC681D4E5138B04AA48188D5BCF39A30
DC36F191041A6C6C768EE32777AA64B9E251C793E994DE5DA469B44FE1984B53
3F41C1227F59251FA95A1793AE14F4CAD998FBE3BE6E4C2D4CA91B1FCBD7D5AC
86415EAD6E80F50F92376D16AEBEFCE8844B17B8F4F487AD076F5AABF123BC8E
2AA95CF78348D4A3B3127DA51EDB3CAB582931DB9997F8C9F3137582B2647774
E3D06DDECAC20D3F2C357B7C431A64B0A415BF1607A82CF1613909DC84992616
50E1C9EAE39F513920A8F414EC20B22BE3D2351ED31A563EEC71ECD5770279C8
D9F6EBF372519B80EEC637DF7E2BCB> |
13674 <001C60D8A8C9B5EE310DCA1A0BE392D3DB8026003EFAA8AD8E01FA336
B72745F99333F1050C38356F4F6449BE4B67496D858E4F114C96E4AE65A7FE2E
063245D1DFEBBBA8951CECC34C04BF3C487AC39BC5B7B42478C889936446A4FB
F5CB9C34E9FF38B0946ABD260692B7F55ACE872D82A3D47AA624555983E84C1F
DD5305EB744A7C0F9AECCA3E98AE1C3214855CCD82685F00780CFFBF7CE7BD71
6FC5F38CDC35A20AD92F4E91764F3AB09F273C3E7C71C155EF68E2DF5857276C
82013FAC14316F6BD06AA01AD0A070C383C3C7E18DAFB727FDF9ACB0E072CD79
ADAE5A8543CDCE4B6633C1B1E432E417991257B8D1B58C7FA2F838A12E5D937C
CBB1D4DDA12486864497FD3A5571DE627B9092355AE0D4824C174138C047C674
48C2489A8ED3006B5BF241627C19D1A669B8A0DBA60193F921466BDA33DDDDAC
0A54A371069E443EF5D416684C3AD42B5CE983328DFA990A57F90> |
3937 <001C60D8A8C9B5EE310D99A787756CA0BA53AFEC27BA629F5BAE03A6EA
977FE9567B41FE2E45D08B2B9BE75899F5B906C4743FCD1EAE4B5F868DA2C9D0
86812F8B9B3E4E7CAB8C239BAFB5A9C723373F9BD6099D1CF81964435BD67EB1
544DFD962AE3A4B444FFF362DE4C0907E7B1FC5F31D89937044E4E225DE73031
3450DF27C4685D1DA4E4918BD118B90AC2573A1635EE77E72383AC359332A76F
9D28E855D0A8DB6E36C30FA222F5BCF5B7AC77DF96E3483EFA6A9A6FD3089F4B
4E6988789D95CCBC3120> |
13556 <001C60D8A8C9B5EE310DEF4F5EB75B79AB24AF8FC99E63EF5902AEA96
A5F6CE457E6C563360BCF879222D22D8214781E61B21715A15EB33F6B17289DE
A105D6A28CD6A17BADD1AC81D1FC320E707BD70EFC7E402DA3D1B5524570BA76
466E559B5CC00C440DB7609570A60EF41AF1A36D560E42DEE661121F156F1E25
7399E0CB34B6885793485A3874ABEB13FB8E4216D529F7BB5B1C023DE50D9A60
E8C148334C77A4AC09F47E3B0B0BFA8BF450C0FC2850F21D8249C2885E0EF378
C44B954F4BBB5B9255687AAB40FC21870038DEA45505B8B40CE565531A9E04E1
27F5EE7BA56E55D7B25F894ABDB76477416EDE8DE72C3457E7A29351FA80DA7D
00A0C21807D06ED54277D3C954BFCB4BC> |
2616 <001C60D8A8C9B5EE31024001D815B60DC67152D0F57B9C6F5B20609B04
2B4C4E4C201520C89F9912B07852978F93DCC5E9DA9EC680C8B2904DD4DA3415
72D388D4D82869F16C51641275756414ED4E10805FA8384BD5C2EB48ED2D9FD9
3E73A2EFC9F9AB02CA2A7A789F5C305CC780885B3FE2B680B466F25ED69ECDFE
B88A0812ECB02A2015D0BE84547ED8DFE3F4330325571B96DB4DB1E4FA1D18A1
D53C466C7B6F18499F42FA4968817260A3FB51466B6A275D6F> |
1114 <001C60D8A8C9B5EE3102961D9AC399770DEF411BB0D849FDA0F55A3EC0
65A17358A8523CB7084928FD31893E2F4E7D74D06C7DBA1F9DDD563CD986F9E2
90CD60D6EC58B51B261BA7CA9BE1CED16154A1F9C397C37461421ECE1ED35F0D
62CB5247ED5010DC37A80F5ABA15CD6DE93E932B0ADEBE3C35737CFE05509494
0F> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 4.10424 -11.9998 0 0 ]msf
125.897 126.228 mo
(\000O\000R\000V\000V)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
149.897 126.228 mo
(\000\003\000\035\031\325\033f1\037@\023.1.\031Le\012\010\004j\012\037)sh
125.897 140.618 mo
(@\023\(\346\0261\030p5j\017a,\2644\364\0128\0115\004Z\033\240\000\003\000\003)sh
1.34999 289.2 mo
101.19 289.2 li
101.19 309.12 li
1.34999 309.12 li
cp
.145266 .11136 .11136 0 cmyk
f
.24 lw
1.34999 309.12 mo
101.19 309.12 li
101.19 289.2 li
1.34999 289.2 li
1.34999 309.12 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 2 GetGlyphDirectory
32 <001C60D8A8C9B7A73DB6DF131CE6F3EE21C84A46A92D434A47D64B417D5D
66D4D1DAA045> |
19 <001C60D8A8C9B7A73DB9C905ADA7816CD049001EA226382BA35539028841
E84975D48249A99BA0C798EED8AF7DAB23FB008A6A6D45DA387BE258459D5BB0
83508C2D27B2D65AD80E90651F58ECE26496AF4A456B181D4DA468B2650F5157
01BEC572A6F28EDF5A4B2882F3C525D7CABBFDB2562260549105997ABE37672D
C147B23ACEF7891D> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
36.4074 302.263 mo
(\000O\000R\000V\000V)sh
56.427 302.263 mo
(\000 \000\023)
[4.88046 0 ]xsh
41.31 345.84 mo
41.31 355.8 li
51.27 365.76 li
61.23 355.8 li
61.23 345.84 li
41.31 345.84 li
cp
ef
41.31 345.84 mo
41.31 355.8 li
51.27 365.76 li
61.23 355.8 li
61.23 345.84 li
41.31 345.84 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 3 GetGlyphDirectory
50 <001C60D8A8C9B7A73DB90D9D7B6F2EAACBB1E0BB43A8C97B9C7EB9EACEFA
55564EDFEF7E6244E0144A5E44A3116FE10720D1E81294E1699A6AEE7013E62B
306D092BFDBCA4F23B2DFA9DFAE29C576F6D14009D1262438A5A6441248CDB8B
8E14329C730A160536AC5D52DA3F89968225C6081F9E313312DB5EF74B9F1037
4748806E5E933E42F6> |
88 <001C60D8A8C9B7A73DB9114A346127958440054B45D6DD27EA8D471375D5
72445BC4C286672B1840EC5F872969EDC316D1EFFD044E5CCF1BAE826A677491
821E6325850E1DF6D4B9927F904C350BF2975D73D4323360EC025DEEE1956D77
4E3B0B361DD7B2990B623979CEF2C0E741CDD2397E25D69433398449320E4FB3
F0E49A55DB2D667D96291B3513A398EEA9D6FEFC5CDF7C1C4AB4A732A2A66C48
06AF99AABDEE8267000B4F92EF890FB1FF602BEB892FAAB7DF6692738FEB1E98
844B6E> |
87 <001C60D8A8C9B7A73DB95A84AC392EC3FFDC6DCF78498E55E2C751F907E0
EB0E7192CA6CD73FECFD87D1E53C0374F65CF995AC77F4672720791390DED569
3F88B9DFFBCC5CA235024CDF2294EB932A2F212801FB690EF557E4F956B291FC
A8160BCA29BCCA432186AB21CDD389A908118DA381> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.04001 0 0 -8.03982 0 0 ]msf
45.3784 355.791 mo
(\0002\000X\000W)
[3.93965 4.10036 0 ]xsh
.750179 .679652 .670191 .901488 cmyk
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
555.647 169.54 mo
(\034_)sh
502.584 56.1515 mo
(\012V)sh
121.83 159.6 mo
291.99 159.6 li
291.99 202.2 li
121.83 202.2 li
cp
.145266 .11136 .11136 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 6 GetGlyphDirectory
726 <001C60D8A8C9B5EE310D58020D04FD55842C6C35EB078743A0D63A965C4
79FAF904E1533D62D721D87D0D088A50CDA67F5A308C21BB301BDA4431F4A10D
32B7C3337A3000666B22A1978D25ABE20B7761AF2A58EC77F19DD77A7294C7DB
A98FD8EC77646F612FEC79050D84A01E1BEE876E2588B376CCD8A90EADDC59F5
45C8308969F4E4B> |
5507 <001C60D8A8C9B5EE310D3F35534D8DA930ADB20BC69D5168C5C9E5635E
AFD4BD014D96D24915C693E1694A897CD72F16BFBF93A8C5B52969CE0CEFB8F2
7E510EA710F344BA1234A2EB541FF2C130D5FD1B6FB9C5135ADE4C60592BD941
A557BA7B63BBD27A4A31054A83DEC97719A535F2E02072D4DCE6F5D153948D53
002AC39A85CD17AE2DC8C7F5224BCB75F9ABE22899BE829FB810FD2560C8B231
56F21BD75DBB1F2F4B6D2A7F78FDFA340644E1A7E9E27071A86EEF53C56B5EB1
A0437BCB> |
2173 <001C60D8A8C9B5EE310217113C3625C656EFB29986DF5DA3DB12C15C6A
BF6677F8EF15580FEBE6F21CF042524E5CAACB54E9AD342A6A543A29C3DEF5B1
B05F5DB1A2F4DA1D3863985E647F16671436AC83D76DC2D6321EC7E86B27C7B9
22A63B9BA4B56CF87C4AE56939A361A2F9A74BEF567004159C5B37715B176935
D5F5589F35595BD39C6E0AA1C54E237CE46F0F0E535B3591D77479C938301B14
FCAD020B08ED5321E95389D3130908B201B8FDA57DF958E55520BF689F117786
C2620B75377652FAFC7FF0C2EC6D3350E583B163254E923AE2B09B4376EC1140
60E236BF849017519808EB231AB8A531B29DC3E16A34716BD9CF241AFB7CE846
58C3793F991934F998BD0CA0ABDF4D4A16DACEA67AA646DF4F92EA8AECB0A611
8DF25253F276D12603BCC049D45372BFC6591F8FF0F87EEE025E6D6A> |
7206 <001C60D8A8C9B5EE31023610EBEA1990F1BD1557878F11A311D477A5D6
4A0A613D24A1F9FEDA26A3E8E64C586B47BE00B01A340A975BEE06C4306863CD
57D01C07EEA9A7C9DC2A2B1C888C75DDEB4DF01FC24251087EB4C1F8068A8954
0C884798C0ADC9FA60C79C76F983F3907C8782FAAF05D3D06DCBAB99CE28CAA9
E3EB3AA9F882ABC5A1FB3E1371822A01781D82FC71E7292865C19684E18DEDF7
D6A61A2560C83EA6136F419FE71B0863C13AF57CEA1C12A9EF1E67D9153AB1CB
760A95C28715C2902CB7727C8B45391B8BEA76792398DE122A46004BF34F71A5
7520648B6AB0CA7148> |
19492 <001C60D8A8C9B5EE31022ACC8993A51529EDB53B70D218B6CC9754EAD
87BAE539A692754EAC94307AE6614B32BD0C85A6373F69E2D776086CB6A75B35
D1B1F87535060014A9A33BC8725AA46A161A697550DD87CC854EC2714C7B62F2
AD644E4038065F4D9C6EF814159865CCE3666D875E0F4A7C05234B1650602ACD
552DE8040A8F8752986BB1449EA307D5B31240755B892D5D7999E272AC373349
88C576C6AE3699B0FF5E92A3C72C7B0B74442B42DBB0C775D2A99C529352444F
A38D40F1F0C067D5CF4E5EA9A749FFDD4910A16CA6498AE93F03116E6AA01C4D
2DAF740B5A1EB9B7CA56751FDF8298263E87C87566129D9574DDE7CC47539D3> |
1082 <001C60D8A8C9B5EE310273E1573AA3540BDF74783AAC83340C37EF8CD3
57DFC3157416C940EC51CA66ECA91972E9A22E663DD73BF9438F04B34492326F
A34AF86CF0A63C0B3D994A16ED88> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
125.897 177.368 mo
(\000\003\000\003\000\003\000\003\000\003\002\326\025\203\010}\034&L$\000\003)sh
125.897 191.758 mo
(\000\003\000\003\000\003\000\003\000\003\002\326\004:!Q>\225\006\257G\375\005P\034&L$)sh
gsave
129.872 169.68 mo
146.431 169.68 li
146.431 179.758 li
129.872 179.758 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 6114 81 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>YZDDLU+CIDFont+F2 AddT42Char 
2 6678 82 <0002003cffe803b30389000d001900ad404108020903060a03a413ae18a0
1bb212b216be18065b18591985138c1895139d18a5120736133a19471349
19570856125413070a0c0c11240b070305051724040b14b8038140120780
4b5334078043358f079f070207191a0eb8038140270040170e3f00404b53
34004043350040323500401e350000200030004000a0000500c31b2bc318
2b4e10f65d2b2b2b2b2b4de94e10f45d2b2b4de9003fed3c103c3fed3c10
3c3130015d5d5d005d011402042322263534122433321607342623220215
141633321203b39ffee48689ada9011b8484aba65b4893f760498df70250
96fedaacaf8b930128acae465d63fe5bd05f6701a300>YZDDLU+CIDFont+F2 AddT42Char 
2 8996 90 <00010023ffe8054b0389002b016f400b1815191b020815091b022ab8ffde
40270c0d3e571a532a651a602ae01a052a152f1b3c16481b5f1b5c2a6e1b
6c1f692ba527b42b0b122db8ffc0b3303a342db8ffc0b22e352db8ffc0b2
2a352db8ffc0b21f352db8ffc0b31e3a342db8ffc04030171c341a2ac901
011800228a25c62b26260e0e00071c1b1b1919180b02030405060511191b
2b1a1c1f0b2f0b3f0b030bb8019fb505820f110111b80337400c01e5198a
18821a2b8a00e51ab8028e400a1b8a1c254f245f240224b8032fb22ae51c
b8ffc0b328143f1cb8ffc0b22b351cb8ffc0400f2e36341c402135301c40
1c501c031cba0323002c0338b1de182b10f65d2b2b2b2bedf65d3c10edfd
fded10fdfdedfd5dfde45d1112393911121739003f3c103c103c3f3c103c
103cf4ed191112392fe4182fb10602435458400b0c011c012c01261b2c2a
05005d593130012b2b2b2b2b2b435c58b41b220c3917b8ffdeb2113918b8
ffdeb511391a220f392b2b2b2b595d005d2b015d5d01133637363534272e
023534363332161514070607060207230301230227262726232207352516
13161701035a45ae683d0a0437162e2429390f1e576ae1372541fe632c07
240f2319331d2d011f3c120604019b0389fd12ccb3692f1611092325151f
2b3d33342d5688a3fee93802b4fd4c01abf7672017062443a7fea6832202
a600>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/n 81 def
/o 82 def
/w 90 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 110 /n put
dup 111 /o put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
/j /k 2{/.notdef}rp /n /o /p /q /.notdef 
/s 3{/.notdef}rp /w 136{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [8.91937 0 0 -8.88447 0 0 ]msf
129.872 177.597 mo
(now)sh
grestore
gsave
122.19 159.962 mo
146.426 159.962 li
146.426 177.361 li
122.19 177.361 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 1884 55 <0001008f00000532054c0021012b40230340120b3f0d221039b50d01131a
141d13120b111d1205038802208821021001060101bb0308000a0021ffc0
400b1139211000300070000200b8030840101b100a0b0b1e1a1b141a1a1b
091c0a1bb8019c4014000221bd0100020a1312081a22281b100bd2121ab8
ffc0b33334341ab8ffc0b32b2e341ab8ffc0b32329341ab8ffc0b31e2034
1ab8ffc0400b181a347f1a9f1aaf1a031ab8021eb722091a171a220a67b9
034a00182b2b103c2b2b10f65d2b2b2b2b2b435c58b51a40140c3f1ab8ff
c0b217391ab8ffc0b323123f1ab8ffc0b712133e1a4032193f2b2b2b2b2b
5901ed2b3c2b10c0003f3c2b3f3cfc3c10fd3c3c3c870e2e2b057d10c42b
7a10f05d01182f2bc42b7a10e001182f382bc40110ed10fd390010ed0110
c00010ed0110c03130015d2b2b0121032336353427262323010615141633
3307213733323736363701232206060723012c04066f26132d228d6bfef4
3340512e0cfdb20b1a4e2a1d2f2a011951758f581c25054cfe984f3e4925
1cfc5ab029263125251911599003c33c7269>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/T 55 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[84{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i /j /k 2{/.notdef}rp /n /o /p 
/q /.notdef /s 3{/.notdef}rp /w 136{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [15.3863 0 0 -15.3263 0 0 ]msf
122.19 173.642 mo
(T)sh
grestore
gsave
130.231 191.521 mo
146.068 191.521 li
146.068 202.079 li
130.231 202.079 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 5720 79 <0001004fffe80261058e001d0129404a09000112001f011f401a35540054
1cef1ff917040a200b300b400b500b040b1d45155a281c301d4d00000003
001d031f1215141212150f0b121e28151210200b300b400b500b040b6c0a
ba01bb001d0124400c032512001201c012d0120212b8013b400a1e091217
121e0a774c182b2b103c2b2b10f65d71435c58b90012ffc0b3170e3f12b8
ffc0400932193f124028143f12b8ffc0b325163f12b8ffc0401323153f12
4021143f1240170e3f1240101b3f12b8ffc0b30f193f12b8ffc040090e17
3f12400d163f12b8ffc0b51839124016392b2b2b2b2b2b2b2b2b2b2b2b2b
5901ede4f4ec5d2b103c2b10c0003f870e2e2b087d10c400183ff5ed2bfc
01f500105dc93130015d2b0171435c58400b0b40170e3f0a40170e3f01b8
ffdeb123392b2b2b59015d01010615141633323736371706070623222635
34370136353426232207350261feaa19130e131634391e5f503b35263320
010f212628172f058efb5a59140f141129561f8635263422247003aa7311
181f0725>YZDDLU+CIDFont+F2 AddT42Char 
2 8632 87 <00010054ffe802630481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702144e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/l 79 def
/t 87 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 108 /l put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[84{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i /j /k /l /.notdef /n /o 
/p /q /.notdef /s /t 2{/.notdef}rp /w 136{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [9.23246 0 0 -9.26073 0 0 ]msf
130.231 199.802 mo
(last)
[2.67735 4.52396 3.6008 0 ]xsh
grestore
gsave
122.552 181.439 mo
146.069 181.439 li
146.069 199.56 li
122.552 199.56 li
cp
eclp
YZDDLU+CIDFont+F2*1 [15.9267 0 0 -15.9754 0 0 ]msf
122.552 195.722 mo
(T)sh
grestore
147.99 285.24 mo
260.55 285.24 li
260.55 336.24 li
147.99 336.24 li
cp
.145266 .11136 .11136 0 cmyk
f
147.99 336.24 mo
260.55 336.24 li
260.55 285.24 li
147.99 285.24 li
147.99 336.24 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 10 GetGlyphDirectory
7460 <001C60D8A8C9B5EE310D81F2D77B34AD0BB68D5508F44AAEAD490814CD
C9512A198ED3A9792B223937B6B2D0BDD9A2944EAB581C130EBCD1094566CF20
8A6665A6CB7CF96BA5DF7B5DD46A1E45DF62ECE0FAE62C92EDCB17FD39E67303
738D92520E537988EB6789801F1E4961796AD7B1CA036E8A1F259CDF1E4EE34A
7DE572A27E60E8EC0EB0F5E0ACB9604E358C2D11CDF252869FDA4B3BD36CC90F
C8861A85779967DF26971B0CD0D69FB304147D5D7DD788F70844A7D4F51BFE0F
236631C26750899A2CD47AD20BEA17F5B8FC7EDDC57E7391B8F8A4FFC9A1FDEA
3E7719F9590F62723507C584CBFF81CCF09B2C78FB9C945D0797CE654218545C
DF5D8162D73E57D0D4B0715D9E7F61F3F25AA8F76D095B> |
7136 <001C60D8A8C9B5EE3100C5FAE52DD80AD0A36A265B20229A4C451E2440
A19A87461D007560B76AADBD298D3EBDFD4B6F0D567976215C0B468537F7BCC9
4C6A538B0E76FC646F036EC71F49367F3696977438154F176355E22918D9D2DC
05AEB2149FEBAB8694EF86277F7014B202D0407189029AB18A2CEBE97582BD03
B236B4B8BA4BA437CBB1B5FDD677E5A1934C627C81B37A166B367AB44A7AED50
8E452F8947445EC619512FE9E8E557BE8CA1AB2F633DAD33EED99CA2F3177E92
9517D7D07DE6C05308160A1F98ABE77FBF90ADD8707747A5EEEC49C743F418F3
7FA6C63CD740A5B3CDAFFF2DC50CB4A424B3F96FF8ABC3112671F132AEFD9ABA
9A19BD5374C93038196234B07657D7BE9DBAF4DB865E561BEDF4CB874B58C71F
B31C897DDCB7E3BE8359CE90F29108CC600C7C5ED53A746A6386400F84388850
790C7FE32CC04DFE7551633CD675252903DDD283C1BF42924DD89AA556568E14
87D42D6AEE8F7ADAB2FFD751083D7E37A2D0CB7D6CACBAA8A7300565961903CF
2D64D7E74F12F8980DE587364C085E7EA73082E9E97EC4B38B0014B2B8BB8AF2
E2540A5486042983EABAE3351B4952D0FA> |
68 <001C60D8A8C9B7A73DB98653E05A9FC5B4254F58F5858E2F9DD35F00B619
566B7BB4F7C4C2B42ED1669A11C0ABDCF71636A26724909F770B9F3B832A0ADD
704744512CA49951968524C6F19BB75839DA017D7F9A68C0EB746C90532AE970
0011A529A34FFFE7DF8E2DA1CAE7DDD6B188776A8F3BA22028327E10150489A6
BD920AB47DA700ED3CC8441DA90DAE8B3DCC2FBF82F09622616A7171B54C5A51
A4C247547246B8172441710905FC36527600CE160A1337FF6089ABEF5CCF192F
4FDDF1FDD8178A05039AEAB3262D260C73FC446748142821CBE5B9EBC3AEB024
C5FECF6E14EE6775D36790CEB4964AEE903A1EE6EA67C32D7FE72E7C85417E80
AA5C078EB6FE4C0CD4> |
66 <001C60D8A8C9B7A73DB63EE23D29A813D25791E340F2BE> |
2748 <001C60D8A8C9B5EE3102400FFBBE09DC2B89AA5B4FAEE607CE0358153F
0A329569EB85A33BFD07CBC4E8349883EDAC4DDDC24275ADAB2BEA39FF0B7BD3
0C79B5B47716583EF51683AA22898ED2D72DF15D4099A8849BEBDC4EDFCB0F2F
019AFC4F69E16E5BE312F770D62BC875C60170341C0462D34C749CD687DAE068
9E7EA71BE5459B1A54B565DA92C7EA84C816AA717F093D28B7110FA9C8C8B370
03A0CD2AE8D83B70B49A5349E37354C88B6C1BF867D768AA0DEC7758577EB0F4
82B188E4B0BAEF5C7678FD87356015387E07B1D00DD66523E10A4EB444235C86
7629E1AC655EBB1571C8ADA6A0479B7EE788366303CDB17A00> |
15 <001C60D8A8C9B7A73DBE9CAD5C073E152BA708892DCE9858257074EFFF15
1CC2CAE59B880D4928B72124933A4E869A246F956E0C13D88CF15CCD30D46B07
018EC563E08A1D50804112D40E938B42C2D693093FD887AF16> |
77 <001C60D8A8C9B7A73DB6AD62A965CD069911233B5AE4F189F7CB3DD873ED
05AD976485E4DF2D93E4FC55C691DAD9E6F407731BB7CF2D209B8F9B53F4B49E
0A6A7EC3BD15B33E5A8DDDDB55274B73346A24C76E7DEA5433DAC1FFE75280AD
B30D34DBFE6D3B96648877AD741ABBA0A8954882E673F3EC6814345C17569764
1DAF98BF8662332E2A1522F3542873678AF7D33FCAA732BA98D5F39477E6F77A
CBC2A3218DAF44C81C1456A1D2BD9CE2F4700DF8EFF0B270290A06948D76E304
3E53EE3907A3EE1668ECB2> |
78 <001C60D8A8C9B7A73DB9DDE50E42414D7463C23E7DF3F7740D8399584E76
0478B4B9DAE9A58DF916D341DC2985043F40488E0B2B243567C0A9021639D2B3
B40039B69E76B214CE527D22CF4BD88F229C6200B42A9E88BFA281B7CE19D3D4
1628C77376AF3EF1471A5CA3981FA1ED4CC8D398DFB2D8FF3EFBAB070C1153DC
4655D47954A549C76579DEDC4A8638C7DAC4315FBD0F2691AFCCDC23AF6C0050
B58CCD1C807AF1D2685B243B6C15B988724F74E251488CC66F99EA7DC5A24ACF
4CA53CB593> |
14 <001C60D8A8C9B7A73DF80AEAC8FA193211DD045F2231FF4E9E576B6F2560
5958AE633B2AE81B37D4064DF153> |
20 <001C60D8A8C9B7A73DB9873C4F791E79ACFF794BEACD19C19AF494E78F88
29EFC3CC7D3628878E17C4A01E41A7E094F8C1BA4E11669947F4830A1D0A5096
2242B577F5C761E3EB42574B7809832B24AA9A0838BB8D7088A4971157A18E8F
D7> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
150.014 301.796 mo
(\035$\033\340)
[9.96001 0 ]xsh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
170.089 301.796 mo
(\000O\000D\000V\000W)sh
190.109 301.796 mo
(\000B\000O\000R\000V\000V)
[4.88048 5.07954 5.07953 4.88048 0 ]xsh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
215.065 301.796 mo
(\012\274)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
150.014 313.817 mo
(\000O\000R\000V\000V\000\017\000O\000D\000V\000W\000B\000O\000R\000V\000V\000 \000O\000R\000V\000V\000\017)
[5.07954 4.88046 5.07954 5.07956 4.88043 5.07956 4.98 4.98 4.98004 5.07951 4.88048 5.07956 
4.98 4.98 4.98 5.07956 4.88048 5.07953 4.98 0 ]xsh
150.014 325.8 mo
(\000O\000R\000V\000V\000 \000M\000\020\000N\000\016\000\024)
[5.07954 4.88046 5.07954 5.07956 4.88043 5.07956 4.98 5.07956 4.88048 0 ]xsh
.72 lw
204.27 256.2 mo
204.27 276.24 li
@
207.51 275.4 mo
204.27 285.24 li
201.03 275.4 li
207.51 275.4 li
cp
ef
516.51 133.08 mo
572.79 111.84 li
628.95 133.08 li
572.79 154.44 li
516.51 133.08 li
cp
.145266 .11136 .11136 0 cmyk
ef
.24 lw
516.51 133.08 mo
572.79 111.84 li
628.95 133.08 li
572.79 154.44 li
516.51 133.08 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
47 <001C60D8A8C9B7A73DB914F33C23AAE67CDFE632CC6CF5A267C5D97160BE
42069A1F8D8B462471A477B627AF492D9C2CAC0F2A8C8F01A649B8E9F6AE791E
DF59C5A24A1450BBC13D2BA1454E0ECEA449F92D2A0CA98E55693D097AC7036D
204C4385CF77469880E4C83E9B3B768F6133B8C64352> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
535.342 136.214 mo
(\000/\000R\000V\000V\000\003\000\003\000O\000D\000V\000W\000B\000O\000R\000V\000V)
[5.07953 4.88043 5.07959 4.97998 4.97998 4.98004 5.07953 4.88043 5.07959 4.97998 4.97998 4.9801 
5.07947 4.88049 0 ]xsh
gsave
555.267 126.238 mo
565.47 126.238 li
565.47 138.597 li
555.267 138.597 li
cp
eclp
%ADOBeginSubsetFont: QJJAAA+CIDFont+F3 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLV+CIDFont+F3 gcheck setglobal} if
1 318 100 <00020000000003ee04f70006000a00b140172505370646067600a806f806
0602010306050400010202b80280400b0600140602030600030202b80280
4012050414050201050402090304050106001d01b8023bb2031d04b80276
401907081d0a090a09080804040303010101001a0c0a0707050506b80239
b30b2128182b10f63c103c103c4e10f63c3c103c103c103c103c003f3c4d
fd3cf6fdf6ed113911123901123987082e2b047d10c487082e182b04107d
c400121139391112393130005d011501011501351121152103eefcb6034a
fc1203eefc1204f76efe61fe5e6a01f233fd5d60>YZDDLV+CIDFont+F3 AddT42Char 
YZDDLV+CIDFont+F3 /CharStrings get begin
/g100 100 def
end
YZDDLV+CIDFont+F3 /Encoding get
dup 163 /g100 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLV+CIDFont+F3*1 
[163{/.notdef}rp /g100 15{/.notdef}rp /g116 76{/.notdef}rp]
YZDDLV+CIDFont+F3 nf
YZDDLV+CIDFont+F3*1 [16.1199 0 0 -14.5379 0 0 ]msf
555.267 137.156 mo
(\243)sh
grestore
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
396.272 102.135 mo
(\034_)sh
340.47 111.84 mo
492.39 111.84 li
492.39 153.84 li
340.47 153.84 li
cp
.145266 .11136 .11136 0 cmyk
f
340.47 153.84 mo
492.39 153.84 li
492.39 111.84 li
340.47 111.84 li
340.47 153.84 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 5 GetGlyphDirectory
13638 <001C60D8A8C9B5EE310342C9F375357C900DF452988A54A99E0E2B60C
4E781A28B227D8DA662A03A4DBD3E41C0714EFD0C136F91F0E0F97213FC8F03B
83663BFE29B5123E15D9F9332D85A485BBF2CE6BDF9B6E0AAAF8B335DDDB3228
510E9B80AE85F90ED8E345B8BC2FF88116AB7406327B3A103A12C6AF9B6D31B2
250A9E7093B168C69EFC667D25B2F8C27F5C232CBADCBD30B5008E59E8B778B4
B54E54B859A4467EC20CD6037B943DAA3D8AEC5C1838E791D669E5F95661A66B
AE5F74FF7A9EEAD8951E6D4BEC2780A0D084C9E8983E89732D9DA33F93204296
BF1B21FEA144611C625E7FDDBD435176423BE0E6A7ABA9EF88D74E4B5B6CA7B0
5FE843C660A0BDD44531B22445223214E6A70F1B7BE0521B66EACF0153739B61
840B96584105E77107B12C90F5D9769EC3FFE359331AEA1586BE23CA817F3D21
10FCC6C86A39410DBD24C1D0A718ED1F2AE8998052A4BD5C415887E4E931CF58
B34E50E7DF6C017FDD945407B4532DA85FF0BB0F2ED5FA5A680C97C641D37999
4B5FBD9F0EE268DF5871614919EE1017B4E71C9368CA6302853BC41E6BE2E62> |
13635 <001C60D8A8C9B5EE310232574423BB84E24845E25E69E5A453935AC64
889F0EF745A36589615B2B87C541485089382267029457956C6F1C65A7EABEFE
4ACF7057F0F9629CC21B0DDEA7181C57EF9B7C8906831EE892CADDBC4D806BF7
3EA1DA292A6B07C6DE255D8EFD3D624079250CC4E1DC5EAD90C234CE09397803
320B3D160B119EA6D08CBB9AE4BC505C92F540A948B2609FA0D208962E33A0C5
761AB48E0493AAB14713734AEFAFC20FF9400083FA31F517C853D523ECD72B93
DE52923F04B142A89FD1949E2EF56E4FBE5C405198D6C6E00E404E90D68223AB
FC22C941B88C6E0F2C928DB95B316314591B164F503AE735A8F42111F40F2DE7
5A4E6939EC0C4F0CE2597D15B90980F933ABE1752D73B264EFA31C5AF73B7672
1426FEB5419FBA75134C6FC7DF2364B73010866385B5128B2DC34ACC893BC7F1
A7B1A943582A78EE5F75B0A828D67F10EA95144F9C7A0334E649230B4AE0FB4D
220FFEB05AE265BC585E123504F13DFDB14ACBD127470C3B1B296481F43EFA38
6D222DB9D6232D1E225DB9CCB7BF964947D631530EED0D3D2266D04E368F0765
B6D676C64F5FFB17B1D9CB277C1323CF50B31DBC4484D1FCFB0C7E107BE39F9C
BA7359993FA6D6CD6CD5FDE1E9F378DF5E786DECDD0DB41171BA2E0910309C37
9C93F00FB485B07C2> |
4488 <001C60D8A8C9B5EE310268C06C8E833C231A4830235EACF22D7DA9845B
168D3903BBA92C96700D726323F3F397236E4685F6F97DAFF36DE2E6CA6C4448
77E41B5C5BEF2F593D88D4305E972F2C7329136B40AAA5F62BE894FEAE2DAC76
9FA11DC02747600DEA523139018A4C975CFAAC0062B0C9B0B629CF792AA75A2C
B73C671B5AB41E045CD68819C15FECBF1DA98FF69A26F3C43D590B2FD43A3981
064EFA71229A7BEFEBE1C456F1A345B98DA8C0EF9D29DE654E9A091FE0345EE6
B653683564E28156C49DD3428A3126341315E5558C204767A863778FF3B1BBF7
5A1829DB4B796BD1DB328D8111B2DF2677A50B1F1B> |
12487 <001C60D8A8C9B5EE310327921E19EC2CA5F9AE688C60C02F229AAAC1C
D565168BF8ACC0390D25EDC30B5CE85040846739C03E6D35E75458C4007542A6
1A770133563063670D8DDF8A20F1A6AC26FF82B59F88B7DB6AC9B6D94A3FC635
1DB41943131093FE75D7098F13B4F27839F016A725871A29580D47935CEBD637
859CD87B8937A1F2CE46E964B3D08CDF48C9CB2FC97DF26A9D602DDDB6EE480D
7987F040D000FF4D53CE5EF8ACD76F08B2AB45216DC3D77F1838D5F4F23A258F
09A00818FF2996E5BF7FD850DC4A566C6809D5F9EAFFABC116C84E7F4A0CE04D
B5A05733CCE31E33756C7124D9CCECFCDF8D43BEEEBF221421DADD577D3E50A5
26F20645FE496E3265681F69A01C3C7A4D67FB7D29E95359E2E6D0FF75DEC4CE
440C102884EB73ABAD5D91125FA232BF719196D03007B1BD382F741F1CD466F2
81BDAB38970A456862706DF0B180F4C0CED20DF0415F1F5F53D171B44F6508DE
DB9E05C7C97B62CCD9194BC9CFE24C8CB413A2150D03C6CF44EA7300E568F93A
6D616512E3E7FEF5F125CDC8A47E975018FE0F27B448E25D2353A01E3F829BCB
111EED7B1131280E118D032307E7D1E190E4FDC03785A5E3A4F511D80179CEEC
F177519D1FC6EF835AE7D> |
2579 <001C60D8A8C9B5EE310337A891C2D47E2711CF26560A417EB40B284B8F
541C41D98DD9CC89810C7F6AFA663CBCDA046C1B3FECD657475A00CBAD5868B3
72B1A1290AEC9493091530C8A89195A969F828F00702> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
346.452 129.95 mo
(G\375\005P5F.15C\021\2100\307\012\023,\264\010})
[9.95999 10.1592 9.96002 9.96002 10.0595 9.96005 9.95999 10.0596 9.95999 0 ]xsh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
446.441 129.95 mo
(\000O\000R\000V\000V)sh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
466.477 129.95 mo
(\004Z\030\325)
[9.95999 0 ]xsh
411.503 141.972 mo
(\033\267)sh
147.99 214.2 mo
260.55 214.2 li
260.55 256.2 li
147.99 256.2 li
cp
.145266 .11136 .11136 0 cmyk
f
147.99 256.2 mo
260.55 256.2 li
260.55 214.2 li
147.99 214.2 li
147.99 256.2 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 5 GetGlyphDirectory
18045 <001C60D8A8C9B5EE310346907E8F831E456907BA4B372C57771ECA4F2
19626DF42B52B91F2867F58096FAA3C6E6D8EE000B776DE75D54D496CBF57FA6
75AFF5026F5D93C3D166F6DD1C932B6DB6A062EA83DBF41D373597933EC9C5AD
20F9BC14ABAD32A4364A36673921B317B0782C2916A179CEB9FDC56291AB55A7
4F16EE296B2373E1853D0F4308F780DA757FCF441C437B1B5336A3A8DB4D4C32
099D9AE4544B0EDC4394412937210B1F8365FDD2782F5130432DBB9728BFB2B4
C15EC148D02C1206AA74DE0FC4E0EF90D6F51DE6E7314A1712471885A8821870
E7649099FE5432468B740A851C3FAEE7861FDD5118BC0C1BED424CAF1DCC1598
C84C6D097BBB7D67D0661E63A60FF96A09522EA9C3E62D487D98618D8BACE4E5
1F6B5A68EB06A8AEA7A1C2FE72A644009DB98E169B10891A7EBAECA1E27E58D3
A8299F859650C922BB99B20EC68C1E90E700A4101E567E29A2B98E9607712A51
0BD486E5B56152E8EACBCD9D4CF861AA9714A98E10B092EE8A19C6C6382A6D43
D5FE0AD76EE3ACE3EC1A173EB79A4EC61B1EE23CE857253F72E0FD165CC28364
F28E895344EF98F51D2493514D9331E96AA4690DB03BD24D6F7C1> |
2486 <001C60D8A8C9B5EE3102EB79165C108C5C1D23BC2B28F2445C84B09549
C25B66B6542A68951CA784DC16D23E49B5BBE634CB7263DABAC65A6ACE6F3D41
2B178D81B1A4AEB500A38DF4C1A6060EBA7169B28C027EF1E97F33F61441D40F
5B6DD9519412DA89D5DF9B5D06AC78DB10C23483D48A6C7D90F85E1186902033
7A91DE7C6B5C3FE5C5E07B125847ED7B19CBE3D762DF99806C322819E97180C1
F4FB7B4A83C72035D9FE1DFF2971E936CC4A0BF4BC727AE6EDCB143500EAE1B2
723AB35F4C0F7F13DA376B8C3B4234AEF3005FAE52526F5C340FE73D0694C673
26> |
6318 <001C60D8A8C9B5EE31020F8D1FB3301B8B405E4F84E7057B7B1189C68B
8699B8143545C8979E2315CE11478B479080434CF974D3193F5F551EF5DF2F91
39B75529E3CBF62C7E7CC9C390DC63043B975053780DEE1025F987BA13F348E6
7C5786C4A41B1B8CDB8E3D627F7519BE89005ACF2AC5A5949EC6EA4652BB99BD
9094A808D81B55AFDF2D2218BD3E03126F5CBFFF3077463B207B19179E2870C1
81585D9EBD8F1599E7B416C9CB9419B35FFC7D5AC5210ECF6ABE18F57E52F442
1958DB813CCE7DE69061F7C4C353CAA6667A4E02F59DAE8B29DDA0CAA7E35059
FABB867B4C4BD9E22641424C07754BAA9E0CD4F5082CDF1121F277816C5ECA0F
F0AEFB2A98F3222C57DAAB05D8FD8B58FD6B3D7676BFA9AAA81DE219342A6EFC
013F4161B1CF509CE949A890C44B7BDB443BD2B4F97B1D16A32258DDD12202D5
87DF50530FC8E182236E> |
2144 <001C60D8A8C9B5EE3127F1A26D8102AC97454C099C0604BBFC5A87A1B8
03056AAC8EED5559C147F259F291F2026576A69FBCF5512465B42369E5509678
1F78635DE188B0BA6860812FD176D4444AA79CCE882E1C632D2D3C37B322E4AC
B203B68B554DB899C81B25F026EF52E2510D6636AEE02E5923D41D167D7C4484
40C92F77B6F5B1ADFCDCC15690BC997ACD7C18319129F8AA027BCA9427370F4C
8F1C553FEDBDCDF5B791C551A37270649EDAB160A0E8AB3A1BFD65B6CB450758
4A78426858059C3D40B74C42A8163AF54C3C27434724A3C7364081D8F1889B8C
0B56909CBDC18DF9C30F05FEC8157C771F8FFEFACAAD0EC9F0AB498361D13F6A
EC31F343E75882FECDC0C5FB36B4A44F2EAD7AD628AF69B219D23BB55BCFC689
58AC14F92A3B9298C418D4BEEF474E25> |
1455 <001C60D8A8C9B5EE3102DFD644C21AEA3BE3997E018442D31D254A454D
CB2DAB5662D0F948B9B9716A9A4FBC890D0246759F3B6C67F7D2921704D221BB
EDF2DBEE1A8E1A0314214F2BDED2F8720D2B5E5AF95C13721D5D63ACBBFCED96
6BD1844796F6EE2D8E62DC3816E4ED3CFAB88483A7C5285D47C3A94B1A6C527C
A395C97302BEFE659F17B79B8A463037FD64036A2A6B38341ED6BD3AC56D1B65
A2B3212AE143C178221AC6384F5BACF2DC54DDF55A952F3849DCBE82AD4D10A3
71869E569F3C29DD509951FDA3A71DFAAAD125F0F09CB919C9137D2FBF8C5DDD
8E0AF583290E95AC4457AD3EC03CF75C97CABBF42BAA217AE498F2D91637FBB5
32F48BC1B31F7F84DC984861D874DB70743B849B69C6CB0665E3289916E0230A
58EB57A0FAFE994D18F0C997D88E51359173E94846C5D7EB39> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
154.332 226.202 mo
(F}\011\266\033\240\031\236\0115\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\030\256)
[9.96002 10.1592 9.95999 9.96004 9.95999 4.98 4.98001 4.98 5.07956 4.88046 5.07953 4.98 
5.07956 0 ]xsh
171.879 238.185 mo
(\010`\033\240\031\236\0115\000\003\000\003\000\003\005\257)
[9.96001 10.0596 9.96002 9.96001 5.07954 4.88045 5.07956 0 ]xsh
gsave
213.632 221.282 mo
245.31 221.282 li
245.31 230.285 li
213.632 230.285 li
cp
eclp
YZDDLU+CIDFont+F2*1 [7.94223 0 0 -7.94296 0 0 ]msf
213.632 228.365 mo
(ij)
[27.9565 0 ]xsh
grestore
gsave
205.473 212.64 mo
245.311 212.64 li
245.311 228.242 li
205.473 228.242 li
cp
eclp
YZDDLU+CIDFont+F2*1 [13.7009 0 0 -13.7021 0 0 ]msf
207.031 224.883 mo
(pp)
[26.3057 0 ]xsh
grestore
gsave
220.588 212.513 mo
245.305 212.513 li
245.305 231.723 li
220.588 231.723 li
cp
eclp
%ADOBeginSubsetFont: GFNBAA+CIDFont+F4 Initial
ct_T42Dict begin
-0.125 -0.375 1.621 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+CIDFont+F4
Type42DictBegin
[<00010000000c000c000c000c4f532f326903ef46000000cc0000004e6376
74200105038c0000011c0000001a6670676df9c7cd1c00000138000000e9
676c79662bc4488000000c2c0000009468656164ce87e07e000002240000
00366868656109ae05170000025c00000024686d74780890002100000280
0000014e6c6f636113d1141b000003d00000012c6d617870029f01070000
04fc000000206e616d65ffcb459e0000051c000006b4707265709d69b239
00000bd00000005967646972000000000000000000000000000002a90190
0005000000cc00cc0000011e00cc00cc0000011e006602000c0f05050102
01020502020280000000000000000000000000000000645363690040f020
f03a0380ff380052048202390000001a0038001a0037003b006f00710000
000002ae0011000000140000b800002c4bb800095058b101018e59b801ff
85b800841db9000900035f5e2db800012c2020456944b001602db800022c
b800012a212db800032c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800042c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800052c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800062c2020456944b001602020457d691844b001602db800072c
b800062a2d0000000001000000044ccc305c2ed15f0f3cf5001903e80000
0000b2e67c8000000000b699d40cff83fe87065603c20000000000000000
00000000000100000380ff3800520621ffc3ffab06160001000000000000
0000000000000000001203e8000001360000014d00100000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000002250011000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000001b001b001b001b
001b001b001b001b001b001b001b001b001b001b004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a004a004a004a004a004a004a004a
004a004a004a004a004a004a004a004a000100000095001c000100000000
00020000000000080000020000e9000000000000001a013e000100000000
0000002d000000010000000000010008002d000100000000000200070118
0001000000000003001d011f00010000000000040008002d000100000000
0005001b013c0001000000000006000801570001000000000007003c015f
00010000000000080013018700010000000000090022019b000100000000
000a00eb002d000100000000000b001501bd000100000000000c001501bd
0003000004090000005a01d200030000040900010010022c000300000409
0002000e04020003000004090003003a041000030000040900040010022c
00030000040900050036044a000300000409000600100480000300000409
0007007804900003000004090008002604e0000300000409000900440508
000300000409000a01d6022c000300000409000b002a054c000300000409
000c002a054c436f70797269676874202863292044657369676e20536369
656e63652c20496e632c20313939392d323030312e4d5420457874726120
697320737570706c6965642077697468204d6174685479706520616e6420
4571756174696f6e20456469746f722c20736f667477617265206170706c
69636174696f6e7320666f72207468652065646974696e67206f66206d61
7468656d61746963616c206e6f746174696f6e2e2020497420737570706c
69657320636f6d6d6f6e6c792075736564206d6174682073796d626f6c73
207468617420617265206e6f742070726573656e7420696e207468652053
796d626f6c20666f6e742e20205669736974207777772e6465737363692e
636f6d20666f722064657461696c732e526567756c617244657369676e20
536369656e63653a204d542045787472613a20342e3356657273696f6e20
342e333020284a616e756172792032303031294d542d45787472614d5420
457874726120616e64204d61746854797065206172652074726164656d61
726b73206f662044657369676e20536369656e63652c20496e632e4d696b
65204576616e732c205061756c20546f7070696e672c204a696d204b696e
67687474703a2f2f7777772e6465737363692e636f6d0043006f00700079
007200690067006800740020002800630029002000440065007300690067
006e00200053006300690065006e00630065002c00200049006e0063002c
00200031003900390039002d0032003000300031002e004d005400200045
007800740072006100200069007300200073007500700070006c00690065
0064002000770069007400680020004d0061007400680054007900700065
00200061006e00640020004500710075006100740069006f006e00200045
006400690074006f0072002c00200073006f006600740077006100720065
0020006100700070006c00690063006100740069006f006e007300200066
006f00720020007400680065002000650064006900740069006e00670020
006f00660020006d0061007400680065006d00610074006900630061006c
0020006e006f0074006100740069006f006e002e00200020004900740020
0073007500700070006c00690065007300200063006f006d006d006f006e
006c0079002000750073006500640020006d006100740068002000730079
006d0062006f006c00730020007400680061007400200061007200650020
006e006f0074002000700072006500730065006e007400200069006e0020
007400680065002000530079006d0062006f006c00200066006f006e0074
002e00200020005600690073006900740020007700770077002e00640065
0073007300630069002e0063006f006d00200066006f0072002000640065
007400610069006c0073002e0052006500670075006c0061007200440065
007300690067006e00200053006300690065006e00630065003a0020004d
0054002000450078007400720061003a00200034002e0033005600650072
00730069006f006e00200034002e0033003000200028004a0061006e0075
006100720079002000320030003000310029004d0054002d004500780074
00720061004d005400200045007800740072006100200061006e00640020
004d00610074006800540079007000650020006100720065002000740072
006100640065006d00610072006b00730020006f00660020004400650073
00690067006e00200053006300690065006e00630065002c00200049006e
0063002e004d0069006b00650020004500760061006e0073002c00200050
00610075006c00200054006f007000700069006e0067002c0020004a0069
006d0020004b0069006e00670068007400740070003a002f002f00770077
0077002e006400650073007300630069002e0063006f006dbb0000000700
0200002b2bbb0002003a006100052bbb0003001c002e00052bbb0004001a
002b00052bbb0005000e001700052bbb0006000e001700052bbb0000003a
006100052bbb0001001b002d00052bba0007000300072b00000000>
[149 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 54 16 <0001001100cf02110139001b000001270e03272e03070e0307173e021617
1e01373e010211250717273d2d12262a2c17222e1e120729101f2d423242
5b2b2119012018081913030e060f0d0802031218190819121c0c0812170a
14102600>GFNBAA+CIDFont+F4 AddT42Char 

1 0 0 <> GFNBAA+CIDFont+F4 AddT42Char 
GFNBAA+CIDFont+F4 /CharStrings get begin
/g16 16 def
end
GFNBAA+CIDFont+F4 /Encoding get
dup 58 /g16 put
pop
end
%ADOEndSubsetFont
/YZDDLW+CIDFont+F4 /GFNBAA+CIDFont+F4 findfont ct_VMDictPut
/YZDDLW+CIDFont+F4*1 
[58{/.notdef}rp /g16 197{/.notdef}rp]
YZDDLW+CIDFont+F4 nf
YZDDLW+CIDFont+F4*1 [13.7008 0 0 -13.702 0 0 ]msf
220.588 224.886 mo
(:)sh
grestore
.869987 134.76 mo
100.71 134.76 li
100.71 185.76 li
.869987 185.76 li
cp
.145266 .11136 .11136 0 cmyk
f
.869987 185.76 mo
100.71 185.76 li
100.71 134.76 li
.869987 134.76 li
.869987 185.76 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YZDDLT+CIDFont+F1-GBK-EUC-H 5 GetGlyphDirectory
13703 <001C60D8A8C9B5EE3103469030A0AF0A74EE088CD9FBA3D29547F09B4
A70DF2E2920DF48EFAA2859D8DC633F4290DA52773D57D30163A4C6B31F97907
CB681F32C089517DEE3DC08EBBCD5D2A535458E0BC6628981F8A3E7400236FB0
0F47CDB8CD9600A95A29D00D9ED3DE0FCA51EAEF89CE8989530CE45D56251FB0
6F5F1BE94FE668A11F58F47AA34598F045F9B3F8BA925A5BBC4A227C94319043
8807B1C8EDEDA3EE11E10F39DAEBC3BB23D6A2F1B507AB57168B0529C51C8902
F5760A59C65EEA2D6E8EC97C89A96632AA64244C663CA0CEB2D3BF6DC4DD6D64
82899D0AE145B04A81D66574D62CF7701695F8FA601377128A4A48F3A4C94> |
2119 <001C60D8A8C9B5EE310D0265CD21D6C39EE05E33D7037A6AE93BDBD91B
D87EAF7651B77178FA3F680ADB4EEA485AFD4E61249D0F1B3182677448000BA2
5D4A9B9D30605706AA7EC85822931A3CE8DE4A791BD0BCF72D501FCEC3A8E74E
A908B7094B0448A9D5133A3D75813B84E4F5E7B8913AF368FB4A04F9E9B2AE6C
E560903FD767D5652FCC8F4AFD593DD5DBBCCFA8A281BE387CBDECB430EAE6E0
C851592130C423554EAC4D300B77FEE3B7991FBD7E9EA63CD5E71E36662E71C3
807D417FE91EA54795334450AAEB160AB128097EC46B8656413F4C1309613B5D
718DCA18DEF9EF170F449F11EFF247BCC7D6EAE0501F09D33EACE368> |
1644 <001C60D8A8C9B5EE310D8D4A87651AD7F39D005C43703E3C7C8BD7D647
6578F9B4497A8FB2E3C945E18F90E3A8A478A27E7A07888213CAD803089BB83E
ACF9D661663EFA4F93BFA5F282E98A70BD82785C259E10DC54EB8121816FA52A
52C1DBBB18B58F863027F99054CD74D98666F14928189789E6668CD81FE590C4
16501DDE89AAE7C19FDE3394A92D4B229499E7890AAFE3E1113C69FF7ED13CDC
25D92DBE21BF9C338AC0AA639FAE69E8F533B28B417D2C66C10FBB7D5417B1A8
08D72A5BEF52FF17C5639F34CCA6B27B6BD9FD676DA4696B711BE10380B8778A
40B5CF41F1090342EE42C179F50545C78EE1529DDEFB3232456F82> |
7481 <001C60D8A8C9B5EE3103A8976BABEC5B9C8FB8D09F7CF58DD37A569B5B
7A052DBCD016EC9A3B53E0B44C47F85DF90DFE3AFF5752A1394F6C42DAD47C95
C61151C08B729A9F4D1F2829D9327A42BD3BB29BD61CC5790B5624CBF6F37972
4032E1E86B2B80DE591C20A233712B2776B8E4CF26704274B6BD89C0C0785B7C
08FE45DA9B0D3F87A51D7431C9182B19F04C842BC08A024693569CAD293E825A
0AEABEDC9F5AC72485873E6DE5C69C6A889607465A9F82670E82C913A478> |
2511 <001C60D8A8C9B5EE310D47B88EC1FC86B8177FE188B27AFE26B5E21312
D93A662340AFF71BDDF45145D6D1E6F332758D958F6853EDAC20670474728E3D
BF4AB5AD68A8398FDBE48B46B8D3A83703FD4034646A2BCD638BF03CCA35F368
607164DC258F3C3E5DCAAE773186FD48D0C9DE7693B59994DD85C0FCAAC08827
9BC246EFF6784501C3BBC844D1D809B510A4CA83EAD2D3CCD9AA5AF44D32360F
61B8BD42A0CBB9A381F482371390E6D750E8344C54C6724B798AA5562E766447
A8F2561194EE75AFA45852D239339E571411F6C0FEC9AFF73EA6BE753B553B49
89918F70F69A128A6B21BBD1D80554C451B004547703619B627B63EC6734E650
A140E15A230A12EA3893F7F31C5C824AA4493725152A18A2E77813FBAC31ADC3
CBFD29AD3C75FF103917D7692FF3AF8B0C0C603521AE2C2A74478D2D25354DC0> |
!
end
end end
%ADOEndSubsetFont
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
2.90911 151.309 mo
(5\207\010G\0003\000L\000G\006l\004j\0003\000L\000G\000\020)
[9.96 10.0596 5.07955 4.88046 5.07955 9.96001 9.96 4.98001 4.98 4.98 0 ]xsh
2.90911 163.331 mo
(\000U\000H\000S\000O\000\\,\2645F.1\0115,\264\030p\0359)
[5.07955 4.88046 5.07955 4.98001 4.98 9.96001 10.0596 9.96 9.96001 10.0596 9.96 0 
]xsh
2.90911 175.314 mo
(\011\317\017\373\033\240\031\236\0115)
[9.96 10.0596 9.96 9.96 0 ]xsh
gsave
63.2697 170.401 mo
91.7095 170.401 li
91.7095 178.562 li
63.2697 178.562 li
cp
eclp
YZDDLU+CIDFont+F2*1 [7.13171 0 0 -7.14867 0 0 ]msf
63.2697 176.882 mo
(ij)
[25.1035 0 ]xsh
grestore
gsave
56.0706 162.717 mo
91.7114 162.717 li
91.7114 176.759 li
56.0706 176.759 li
cp
eclp
YZDDLU+CIDFont+F2*1 [12.3027 0 0 -12.3317 0 0 ]msf
57.3922 173.76 mo
(pp)
[23.4983 0 ]xsh
grestore
gsave
69.5086 162.604 mo
91.7151 162.604 li
91.7151 179.881 li
69.5086 179.881 li
cp
eclp
YZDDLW+CIDFont+F4*1 [12.3028 0 0 -12.3318 0 0 ]msf
69.5086 173.764 mo
(:)sh
grestore
gsave
-79.65 -85.08 mo
-79.65 510.12 li
762.15 510.12 li
762.15 -85.08 li
cp
eclp
.72 lw
51.27 309.12 mo
51.27 336.84 li
@
54.51 336 mo
51.27 345.84 li
48.03 336 li
54.51 336 li
cp
ef
100.71 233.88 mo
138.99 233.88 li
@
138.15 230.64 mo
147.99 233.88 li
138.15 237.24 li
138.15 230.64 li
cp
ef
340.47 63.72 mo
416.43 42.48 li
492.39 63.72 li
416.43 85.08 li
340.47 63.72 li
cp
.145266 .11136 .11136 0 cmyk
ef
.24 lw
340.47 63.72 mo
416.43 42.48 li
492.39 63.72 li
416.43 85.08 li
340.47 63.72 li
cp
.750179 .679652 .670191 .901488 cmyk
@
grestore
YZDDLU+CIDFont+F2*1 [8.06412 0 0 -8.03955 0 0 ]msf
375.035 70.8 mo
(nowlast)
[4.11267 4.03204 24.8376 2.3385 4.03204 3.14514 0 ]xsh
gsave
368.069 54.8389 mo
465.873 54.8389 li
465.873 70.5582 li
368.069 70.5582 li
cp
eclp
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLU+CIDFont+F2 gcheck setglobal} if
2 1042 50 <0002007affe105be056b0010002200aeb520221e123f17b8ffde40481e12
3f34193a1c3a224419481c4b225402570e531455155a1d5e1e65156a1c6a
1f76137a1c7c1f85148e1d970694139c1c9a1db415bf1dbd1e1b070e0813
02113300031a33080917b8037f40110c4014390c405c350c404764340c65
2320b8037f4018044021413f044015233f04405c35044047643404401935
04b80117b670240124655c182b105df62b2b2b2b2be910f62b2b2be9003f
ed3fed313001715d2b2b0132161615140204232226263534123624172206
06070615141633323637361235342603f187d076fdfe68da9dd365b7fe01
208064bfbc4b5c92975baf5f77a292056b75e57bdafe21fc8be46bbe0173
f9864063e1b6e0c78edb5a6d8901a9b888d1>YZDDLU+CIDFont+F2 AddT42Char 
2 1330 53 <0002ffd1000004a2054c00260031018a407d081609273c2a48004c2a4a2b
5a006a007b00771f792d96069a2daa2ab917bf2abf2e11a606b40702061c
161c892d0303273131040c130d1d0c0b040a1d0b1a14191d1a2622251d26
3104041e1314141313142122221e0001140000012101292f2e1a292e0101
001a02260c0c0b0b000822210100042c1332281413102cba037f001effc0
b3282d341eb8ffc0b31c1e341eb8ffc0b31318341eb80117b67033013331
d404ba030100140213b51340120b3f13b8ff80b326173f13b8ff80400928
183f13400f193e13b8ffc0b30b123e13b8ff80b72d173f1341183913b8ff
c0b612391340113913b8ffc0b3282d3413b8ffc0b31c1e3413b8ffc0b613
183480130113b80173b63209131713320ab80173b1c4182b2b103c2b2b4e
10f45d2b2b2b2b2b2b2b2b2b2b2b2b014de4fde44e105df62b2b2b4de92b
103c2b10c001121739003f3c103c103c3f12392fed10ed111239870e2e2b
0e7d10c4870e2e182b057d10c4180010ed0110c00010ed0110c00010ed01
10c00010ed0110c087103c7dc43130005d015d5d21030627030615141716
170721373637363736371336353426073721321615140607131616170701
163332363534262322070353d94c5075171d166209fdf30b4a1a29132023
ed184b460c01badec4c9af8430606b0bfd584032acc87d7d202c02930110
fe6650372a1812082525030c111d2f770333522d2e400125a88983d91dfe
739258062502db09bf8e6f760800>YZDDLU+CIDFont+F2 AddT42Char 
YZDDLU+CIDFont+F2 /CharStrings get begin
/O 50 def
/R 53 def
end
YZDDLU+CIDFont+F2 /Encoding get
dup 79 /O put
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLU+CIDFont+F2*1 
[79{/.notdef}rp /O 2{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i /j /k 
/l /.notdef /n /o /p /q /.notdef /s 
/t 2{/.notdef}rp /w 136{/.notdef}rp]
YZDDLU+CIDFont+F2 nf
YZDDLU+CIDFont+F2*1 [13.9486 0 0 -13.9063 0 0 ]msf
368.069 67.197 mo
(TTRTO)
[33.1977 35.0109 8.36926 7.95081 0 ]xsh
grestore
%ADOBeginSubsetFont: QJJAAA+CIDFont+F3 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YZDDLV+CIDFont+F3 gcheck setglobal} if
1 100 16 <0001000001dd041a02400003001a400c001d03011a050019042028182b4e
10e410e6002f4dfd313011211521041afbe602406300>YZDDLV+CIDFont+F3 AddT42Char 
1 152 33 <0001003c0000042a041a00060081401137054705a6060302010305060400
030202b80280400b0504140502010504010202b802804012060014060203
060002060504030103070004bc02740003023b00010274400a000800f805
1a082128182b4e10f64dfd003ffdf6ed011112173912393987082e2b047d
10c487082e182b047d10c400111239391112393130005d33350101350115
3c034afcb603ee6e019f01a26bfe0e33>YZDDLV+CIDFont+F3 AddT42Char 
YZDDLV+CIDFont+F3 /CharStrings get begin
/g16 16 def
/g33 33 def
end
YZDDLV+CIDFont+F3 /Encoding get
dup 45 /g16 put
dup 62 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YZDDLV+CIDFont+F3*1 
[45{/.notdef}rp /g16 16{/.notdef}rp /g33 100{/.notdef}rp /g100 15{/.notdef}rp /g116 
76{/.notdef}rp]
YZDDLV+CIDFont+F3 nf
YZDDLV+CIDFont+F3*1 [13.9486 0 0 -13.9063 0 0 ]msf
392.192 67.197 mo
(->)
[32.6399 0 ]xsh
.72 lw
204.27 336.24 mo
204.27 347.76 li
204.27 354.12 209.43 359.28 215.79 359.28 cv
297.87 359.28 li
305.67 359.28 312.03 352.92 312.03 345.12 cv
312.03 28.2 li
312.03 20.28 318.39 14.04 326.19 14.04 cv
402.27 14.04 li
410.07 14.04 416.43 20.28 416.43 28.2 cv
416.43 36.84 li
@
419.67 36 mo
416.43 42.48 li
413.19 36 li
419.67 36 li
cp
ef
416.43 85.08 mo
416.43 102.84 li
@
419.67 102.12 mo
416.43 111.84 li
413.19 102.12 li
419.67 102.12 li
cp
ef
492.39 63.72 mo
558.51 63.72 li
566.43 63.72 572.79 70.08 572.79 78 cv
572.79 102.84 li
@
576.03 102.12 mo
572.79 111.84 li
569.43 102.12 li
576.03 102.12 li
cp
ef
405.63 214.08 mo
557.55 214.08 li
557.55 256.08 li
405.63 256.08 li
cp
.145266 .11136 .11136 0 cmyk
f
.24 lw
405.63 256.08 mo
557.55 256.08 li
557.55 214.08 li
405.63 214.08 li
405.63 256.08 li
cp
.750179 .679652 .670191 .901488 cmyk
@
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
419.206 232.194 mo
(G\375\005P5F.15C\021\2100\307\012\023,\264\010})
[9.95999 10.0595 9.95999 9.96002 10.0595 9.96005 9.96002 10.1592 9.95999 0 ]xsh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 3.40652 -9.95979 0 0 ]msf
519.156 232.194 mo
(\000O\000R\000V\000V)sh
539.176 232.194 mo
(\000\020)sh
444.145 244.216 mo
(\000O\000D\000V\000W\000B\000O\000R\000V\000V)
[5.07956 4.88043 5.07956 4.97998 4.98001 4.98001 5.07953 4.88046 0 ]xsh
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.95979 0 0 ]msf
489.16 244.216 mo
(\004Z\030\325\033\267)
[9.95999 10.0596 0 ]xsh
.72 lw
628.95 133.08 mo
648.39 133.08 li
656.19 133.08 662.55 139.44 662.55 147.36 cv
662.55 220.92 li
662.55 228.72 656.19 235.08 648.39 235.08 cv
581.31 235.08 li
578.67 235.08 576.15 234.36 573.99 233.04 cv
573.15 232.56 572.31 232.56 571.47 233.04 cv
569.31 234.36 566.79 235.08 564.27 235.08 cv
557.55 235.08 li
@
567.39 238.32 mo
557.55 235.08 li
567.39 231.84 li
567.39 238.32 li
cp
ef
471.63 297.48 mo
471.63 307.44 li
481.59 317.4 li
491.55 307.44 li
491.55 297.48 li
471.63 297.48 li
cp
ef
.24 lw
471.63 297.48 mo
471.63 307.44 li
481.59 317.4 li
491.55 307.44 li
491.55 297.48 li
471.63 297.48 li
cp
@
0 0 0 0 cmyk
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.04001 0 0 -8.03982 0 0 ]msf
475.707 307.427 mo
(\0002\000X\000W)
[3.93964 4.10034 0 ]xsh
.72 lw
481.59 256.08 mo
481.59 288.48 li
.750179 .679652 .670191 .901488 cmyk
@
484.83 287.64 mo
481.59 297.48 li
478.35 287.64 li
484.83 287.64 li
cp
ef
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H findfont [12 0 0 -11.9998 0 0 ]msf
633.975 125.525 mo
(\012V)sh
gsave
221.549 233.278 mo
228.387 233.278 li
228.387 242.398 li
221.549 242.398 li
cp
eclp
YZDDLU+CIDFont+F2*1 [7.93117 0 0 -8.03955 0 0 ]msf
221.549 240.479 mo
(k)sh
grestore
gsave
213.268 224.519 mo
228.387 224.519 li
228.387 240.238 li
213.268 240.238 li
cp
eclp
YZDDLU+CIDFont+F2*1 [13.7188 0 0 -13.9063 0 0 ]msf
214.829 236.884 mo
(p)sh
grestore
%ADOBeginSubsetFont: HJCBAA+CIDFont+F5 Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /HJCBAA+CIDFont+F5
Type42DictBegin
[<00010000000c000c000c000c4f532f3217705eba000000cc000000606376
74201d6402d70000012c000010846670676d6d591b53000011b000000a59
676c79662414d6780000b60400000ee268656164e9529c6500001c0c0000
003668686561134d15a500001c4400000024686d74784b6b012d00001c68
00003db26c6f6361be49b97100005a1c0000229a6d6178701819101b0000
7cb8000000206e616d658512f01400007cd80000299570726570b3329291
0000a67000000f9367646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002effc000785b0000000900000000544d432000400022
0640058cfe460133072101bb400001ffffff00000394054c000000200015
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
03d703f10470000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000160016001700180018001a001b00210029002a
002a002c002d002e002f003200340036003700380039003a003b003c003d
003e004200460046004a004c004d004f004f00530053005500570059005c
005c005d005d005e005f0061006400650067006800690069006b006e006f
00710076007600770077007d007e007f008000810082008600870087008a
008d008e0096009600970097009c00a000a200a300a600ac00b300b300b6
00b800b900be00bf00c100c200c400c500c600c700ca00ca00cb00cc00cc
00ce00d100d200d300d700da00db00dc00de00df00e000e000e300e64057
8574737271706f6e6d6c6b6a6968676665625d55544f4e403f3e3d3c3b3a
393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c
1b1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d
2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121
592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112b
b01723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920
b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae459
59182d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212110592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b802b023701020b802b04520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2c014b53234b515ab00225b00425b0062549
23451869525a58b00225b00225b00525462345696048592121212d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab9035803588a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2c2320b000508a8a64b10003255458b0401bb10103255458
b037438b59b04f2b5923b0622b2321235865592d2cb13a000c215460432d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a37403a403b403e023f021bb101
02435458b237403aba0100003b0100b33e013f011bb18002435258b23740
3ab80180b13b401bb901000002435258b237403aba0180003b01401bb901
800002435258b237403ab80200b13b401bb237403aba0100003b01005959
59b9400000808855b94000020063b8040088555a58b33e003f011bb33e00
3f0159595942424242422d2cb0024354584b53234b515a58381b2121591b
21212121592d2c012d2cb0022563b0206066b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b03543525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b03543525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cb12501885058b94000020063b8040088545cb0134b
525b1bb001592d000000000100000006f5c3d7f4eb3a5f0f3cf508190800
00000000a2e31dc200000000d36b3e05fb74fd8c105e0851000000090001
000000000000000100000721fe4500571000fb74f9d2105e000100000000
000000000000000000000d8d0639011c0000000002000000000000000000
000003440085000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004830025000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000071d00220000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004000044
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002aa000d00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000001a8ffba000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000051bffba0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000100ffba0800ffba1000
ffba00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004a4001a0000
000000000000000000000000000000000000000000000000000000000000
051a002200000000000000000000000000000000041e0016000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
004b004b004b004b004b00d200d200d200d200d200d200d200d200d200d2
00d200d200d200d200d200d200d200d200d200d200d200d200d200d200d2
00d200d20133013301330133013301330133013301330133013301330133
013301330133027e027e027e027e027e027e027e027e027e027e027e027e
027e027e027e027e027e027e027e027e027e027e027e03fb03fb03fb03fb
03fb03fb03fb03fb03fb03fb03fb03fb03fb03fb05250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
052505250525052505250525052505250525052505250525052505250525
05250525053f053f053f053f053f053f053f053f053f053f053f053f053f
053f053f053f053f053f053f053f053f053f053f053f053f053f053f053f
053f053f053f053f053f053f053f053f053f053f053f053f053f053f053f
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590559055905590559055905590559055905590559055905590559
055905590573058d05a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a705a705a705a705a705a705a705a705a705a705a705a705a7
05a705a705a706230623062306230623062306230623062306c306c306c3
06c306c30771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771077107710771077107710771077107710771077107710771
077107710771000000>
<00010000114c00460002000000000002001000400086000006340f930000
00000000003a02be0000000300000000006c00000000000300000001001e
006c0000000300000002000e01140000000300000003005800e200000003
00000004001e006c00000003000000050018013a00000003000000060022
015200000003000000070076006c0000000300000008003000b000000003
0000000900860174000000030000000d0e0401fa00010000000000000036
0ffe0001000000000001000f103400010000000000020007108800010000
00000003002c106f0001000000000004000f10340001000000000005000c
109b0001000000000006001110a70001000000000007003b103400010000
00000008001810560001000000000009004310b8000100000000000d0702
10fb0003000104030002000c17fd00030001040500020010180d00030001
04060002000c181d00030001040700020010182900030001040800020010
18390003000104090000006c00000003000104090001001e006c00030001
04090002000e01140003000104090003005800e20003000104090004001e
006c00030001040900050018013a00030001040900060022015200030001
040900070076006c0003000104090008003000b000030001040900090086
0174000300010409000d0e16184900030001040a0002000c17fd00030001
040b00020010265f00030001040c0002000c17fd00030001040e0002000c
266f0003000104100002000e267f00030001041300020012268d00030001
04140002000c17fd0003000104150002001017fd0003000104160002000c
17fd0003000104190002000e269f00030001041b00020010266f00030001
041d0002000c17fd00030001041f0002000c17fd0003000104240002000e
26ad00030001042a0002000e26bb00030001042d0002000e26c900030001
080a0002000c17fd0003000108160002000c17fd000300010c0a0002000c
17fd000300010c0c0002000c17fd00a90020003200300031003600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
002000540069006d006500730020004e0065007700200052006f006d0061
006e00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
004d006f006e006f0074007900700065003a00540069006d006500730020
004e0065007700200052006f006d0061006e00200052006500670075006c
0061007200200028004d006900630072006f0073006f0066007400290056
0065007200730069006f006e00200036002e0039003600540069006d0065
0073004e006500770052006f006d0061006e00500053004d0054004d006f
006e006f0074007900700065002000540079007000650020004400720061
00770069006e00670020004f006600660069006300650020002d00200053
00740061006e006c006500790020004d006f007200690073006f006e002c
00200056006900630074006f00720020004c0061007200640065006e0074
00200031003900330032004d006900630072006f0073006f006600740020
0073007500700070006c00690065006400200066006f006e0074002e0020
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e007400200074006f002000630072006500610074
0065002c00200064006900730070006c0061007900200061006e00640020
007000720069006e007400200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
0074006800650020006c006900630065006e007300650020007400650072
006d0073002c0020006f00720020007400650072006d00730020006f0066
0020007500730065002c0020006f006600200074006800650020004d0069
00630072006f0073006f00660074002000700072006f0064007500630074
002c002000730065007200760069006300650020006f007200200063006f
006e00740065006e007400200069006e0020007700680069006300680020
007400680069007300200066006f006e0074002000770061007300200069
006e0063006c0075006400650064002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e00200041006e00790020006f00740068
006500720020007500730065002000690073002000700072006f00680069
00620069007400650064002e000d000d00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000d005000650072006d0069007300730069006f006e0020
0069007300200068006500720065006200790020006700720061006e0074
00650064002c002000660072006500650020006f00660020006300680061
007200670065002c00200074006f00200061006e00790020007000650072
0073006f006e0020006f0062007400610069006e0069006e006700200061
00200063006f007000790020006f006600200074006800650020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c002000480065006200720065007700200061006e006400200061
00730073006f00630069006100740065006400200064006f00630075006d
0065006e0074006100740069006f006e002000660069006c006500730020
00280074006800650020201c004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065201d0029002c
00200074006f0020006400650061006c00200069006e0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f00660074007700610072006500200077006900740068006f00750074
0020007200650073007400720069006300740069006f006e002c00200069
006e0063006c007500640069006e006700200077006900740068006f0075
00740020006c0069006d00690074006100740069006f006e002000740068
0065002000720069006700680074007300200074006f0020007500730065
002c00200063006f00700079002c0020006d006f0064006900660079002c
0020006d0065007200670065002c0020007000750062006c006900730068
002c00200064006900730074007200690062007500740065002c00200073
00750062006c006900630065006e00730065002c00200061006e0064002f
006f0072002000730065006c006c00200063006f00700069006500730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002c0020
0061006e006400200074006f0020007000650072006d0069007400200070
006500720073006f006e007300200074006f002000770068006f006d0020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f00660074007700610072006500200069007300200066
00750072006e0069007300680065006400200074006f00200064006f0020
0073006f002c0020007300750062006a00650063007400200074006f0020
00740068006500200066006f006c006c006f00770069006e006700200063
006f006e0064006900740069006f006e0073003a000d000d005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000d00540048004500200053004f004600540057004100520045
002000490053002000500052004f00560049004400450044002000270041
00530020004900530027002c00200057004900540048004f005500540020
00570041005200520041004e005400590020004f004600200041004e0059
0020004b0049004e0044002c002000450058005000520045005300530020
004f005200200049004d0050004c004900450044002c00200049004e0043
004c005500440049004e004700200042005500540020004e004f00540020
004c0049004d004900540045004400200054004f00200054004800450020
00570041005200520041004e00540049004500530020004f00460020004d
00450052004300480041004e0054004100420049004c004900540059002c
0020004600490054004e00450053005300200046004f0052002000410020
0050004100520054004900430055004c0041005200200050005500520050
004f0053004500200041004e00440020004e004f004e0049004e00460052
0049004e00470045004d0045004e0054002e00200049004e0020004e004f
0020004500560045004e00540020005300480041004c004c002000540048
004500200041005500540048004f005200530020004f005200200043004f
005000590052004900470048005400200048004f004c0044004500520053
0020004200450020004c004900410042004c004500200046004f00520020
0041004e005900200043004c00410049004d002c002000440041004d0041
0047004500530020004f00520020004f00540048004500520020004c0049
004100420049004c004900540059002c0020005700480045005400480045
005200200049004e00200041004e00200041004300540049004f004e0020
004f004600200043004f004e00540052004100430054002c00200054004f
005200540020004f00520020004f00540048004500520057004900530045
002c002000410052004900530049004e0047002000460052004f004d002c
0020004f005500540020004f00460020004f005200200049004e00200043
004f004e004e0045004300540049004f004e002000570049005400480020
00540048004500200053004f0046005400570041005200450020004f0052
002000540048004500200055005300450020004f00520020004f00540048
004500520020004400450041004c0049004e0047005300200049004e0020
00540048004500200053004f004600540057004100520045002e000da920
3230313620546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e2054696d6573204e65
7720526f6d616e20697320612074726164656d61726b206f662054686520
4d6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f747970653a
54696d6573204e657720526f6d616e20526567756c617220284d6963726f
736f66742956657273696f6e20362e393654696d65734e6577526f6d616e
50534d544d6f6e6f7479706520547970652044726177696e67204f666669
6365202d205374616e6c6579204d6f7269736f6e2c20566963746f72204c
617264656e7420313933324d6963726f736f667420737570706c69656420
666f6e742e20596f75206d617920757365207468697320666f6e7420746f
206372656174652c20646973706c617920616e64207072696e7420636f6e
74656e74206173207065726d697474656420627920746865206c6963656e
7365207465726d732c206f72207465726d73206f66207573652c206f6620
746865204d6963726f736f66742070726f647563742c2073657276696365
206f7220636f6e74656e7420696e207768696368207468697320666f6e74
2077617320696e636c756465642e20596f75206d6179206f6e6c79202869
2920656d626564207468697320666f6e7420696e20636f6e74656e742061
73207065726d69747465642062792074686520656d62656464696e672072
65737472696374696f6e7320696e636c7564656420696e20746869732066
6f6e743b20616e6420286969292074656d706f726172696c7920646f776e
6c6f6164207468697320666f6e7420746f2061207072696e746572206f72
206f74686572206f75747075742064657669636520746f2068656c702070
72696e7420636f6e74656e742e20416e79206f7468657220757365206973
2070726f686962697465642e0d0d54686520666f6c6c6f77696e67206c69
63656e73652c206261736564206f6e20746865204d4954206c6963656e73
652028687474703a2f2f656e2e77696b6970656469612e6f72672f77696b
692f4d49545f4c6963656e7365292c206170706c69657320746f20746865
204f70656e54797065204c61796f7574206c6f67696320666f7220426962
6c6963616c2048656272657720d24c61796f7574204c6f676963d3206173
206a6f696e746c7920646576656c6f7065642062792052616c7068204861
6e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065726d69
7373696f6e20697320686572656279206772616e7465642c206672656520
6f66206368617267652c20746f20616e7920706572736f6e206f62746169
6e696e67206120636f7079206f6620746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20616e64206173736f63696174656420646f63756d656e746174696f6e20
66696c6573202874686520d24c61796f7574204c6f67696320536f667477
617265d3292c20746f206465616c20696e20746865204c61796f7574204c
6f67696320536f66747761726520776974686f7574207265737472696374
696f6e2c20696e636c7564696e6720776974686f7574206c696d69746174
696f6e207468652072696768747320746f207573652c20636f70792c206d
6f646966792c206d657267652c207075626c6973682c2064697374726962
7574652c207375626c6963656e73652c20616e642f6f722073656c6c2063
6f70696573206f6620746865204c61796f7574204c6f67696320536f6674
776172652c20616e6420746f207065726d697420706572736f6e7320746f
2077686f6d20746865204c61796f7574204c6f67696320536f6674776172
65206973206675726e697368656420746f20646f20736f2c207375626a65
637420746f2074686520666f6c6c6f77696e6720636f6e646974696f6e73
3a0d0d5468652061626f766520636f70797269676874206e6f7469636520
616e642074686973207065726d697373696f6e206e6f7469636520736861
6c6c20626520696e636c7564656420696e20616c6c20636f70696573206f
72207375627374616e7469616c20706f7274696f6e73206f662074686520
4c61796f7574204c6f67696320536f6674776172652e0d0d54484520534f
4654574152452049532050524f564944454420274153204953272c205749
54484f55542057415252414e5459204f4620414e59204b494e442c204558
5052455353204f5220494d504c4945442c20494e434c5544494e47204255
54204e4f54204c494d4954454420544f205448452057415252414e544945
53204f46204d45524348414e544142494c4954592c204649544e45535320
464f52204120504152544943554c415220505552504f534520414e44204e
4f4e494e4652494e47454d454e542e20494e204e4f204556454e54205348
414c4c2054484520415554484f5253204f5220434f505952494748542048
4f4c44455253204245204c4941424c4520464f5220414e5920434c41494d
2c2044414d41474553204f52204f54484552204c494142494c4954592c20
5748455448455220494e20414e20414354494f4e204f4620434f4e545241
43542c20544f5254204f52204f54484552574953452c2041524953494e47
2046524f4d2c204f5554204f46204f5220494e20434f4e4e454354494f4e
20574954482054484520534f465457415245204f52205448452055534520
4f52204f54484552204445414c494e475320494e2054484520534f465457
4152452e0d004e006f0072006d0061006c006e0079006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac004d00690063007200
6f0073006f0066007400200073007500700070006c006900650064002000
66006f006e0074002e00200059006f00750020006d006100790020007500
7300650020007400680069007300200066006f006e007400200074006f00
20006300720065006100740065002c00200064006900730070006c006100
7900200061006e00640020007000720069006e007400200063006f006e00
740065006e00740020006100730020007000650072006d00690074007400
65006400200062007900200074006800650020006c006900630065006e00
7300650020007400650072006d0073002c0020006f007200200074006500
72006d00730020006f00660020007500730065002c0020006f0066002000
74006800650020004d006900630072006f0073006f006600740020007000
72006f0064007500630074002c0020007300650072007600690063006500
20006f007200200063006f006e00740065006e007400200069006e002000
7700680069006300680020007400680069007300200066006f006e007400
2000770061007300200069006e0063006c0075006400650064002e002000
59006f00750020006d006100790020006f006e006c007900200028006900
2900200065006d0062006500640020007400680069007300200066006f00
6e007400200069006e00200063006f006e00740065006e00740020006100
730020007000650072006d00690074007400650064002000620079002000
740068006500200065006d00620065006400640069006e00670020007200
650073007400720069006300740069006f006e007300200069006e006300
6c007500640065006400200069006e002000740068006900730020006600
6f006e0074003b00200061006e0064002000280069006900290020007400
65006d0070006f0072006100720069006c007900200064006f0077006e00
6c006f006100640020007400680069007300200066006f006e0074002000
74006f002000610020007000720069006e0074006500720020006f007200
20006f00740068006500720020006f007500740070007500740020006400
65007600690063006500200074006f002000680065006c00700020007000
720069006e007400200063006f006e00740065006e0074002e0020004100
6e00790020006f0074006800650072002000750073006500200069007300
2000700072006f0068006900620069007400650064002e000d000a000d00
0a00540068006500200066006f006c006c006f00770069006e0067002000
6c006900630065006e00730065002c002000620061007300650064002000
6f006e00200074006800650020004d004900540020006c00690063006500
6e00730065002000280068007400740070003a002f002f0065006e002e00
770069006b006900700065006400690061002e006f00720067002f007700
69006b0069002f004d00490054005f004c006900630065006e0073006500
29002c0020006100700070006c00690065007300200074006f0020007400
6800650020004f00700065006e00540079007000650020004c0061007900
6f007500740020006c006f00670069006300200066006f00720020004200
690062006c006900630061006c0020004800650062007200650077002020
1c004c00610079006f007500740020004c006f006700690063201d002000
6100730020006a006f0069006e0074006c00790020006400650076006500
6c006f007000650064002000620079002000520061006c00700068002000
480061006e0063006f0063006b00200061006e00640020004a006f006800
6e00200048007500640073006f006e002e0020000d000a000d000a005000
650072006d0069007300730069006f006e00200069007300200068006500
720065006200790020006700720061006e007400650064002c0020006600
72006500650020006f00660020006300680061007200670065002c002000
74006f00200061006e007900200070006500720073006f006e0020006f00
62007400610069006e0069006e00670020006100200063006f0070007900
20006f006600200074006800650020004f00700065006e00540079007000
650020004c00610079006f007500740020006c006f006700690063002000
66006f00720020004200690062006c006900630061006c00200048006500
6200720065007700200061006e00640020006100730073006f0063006900
6100740065006400200064006f00630075006d0065006e00740061007400
69006f006e002000660069006c0065007300200028007400680065002020
1c004c00610079006f007500740020004c006f0067006900630020005300
6f006600740077006100720065201d0029002c00200074006f0020006400
650061006c00200069006e00200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
72006500200077006900740068006f007500740020007200650073007400
720069006300740069006f006e002c00200069006e0063006c0075006400
69006e006700200077006900740068006f007500740020006c0069006d00
690074006100740069006f006e0020007400680065002000720069006700
680074007300200074006f0020007500730065002c00200063006f007000
79002c0020006d006f0064006900660079002c0020006d00650072006700
65002c0020007000750062006c006900730068002c002000640069007300
74007200690062007500740065002c0020007300750062006c0069006300
65006e00730065002c00200061006e0064002f006f007200200073006500
6c006c00200063006f00700069006500730020006f006600200074006800
650020004c00610079006f007500740020004c006f006700690063002000
53006f006600740077006100720065002c00200061006e00640020007400
6f0020007000650072006d0069007400200070006500720073006f006e00
7300200074006f002000770068006f006d00200074006800650020004c00
610079006f007500740020004c006f00670069006300200053006f006600
7400770061007200650020006900730020006600750072006e0069007300
680065006400200074006f00200064006f00200073006f002c0020007300
750062006a00650063007400200074006f00200074006800650020006600
6f006c006c006f00770069006e006700200063006f006e00640069007400
69006f006e0073003a000d000a000d000a00540068006500200061006200
6f0076006500200063006f00700079007200690067006800740020006e00
6f007400690063006500200061006e006400200074006800690073002000
7000650072006d0069007300730069006f006e0020006e006f0074006900
6300650020007300680061006c006c00200062006500200069006e006300
6c007500640065006400200069006e00200061006c006c00200063006f00
700069006500730020006f00720020007300750062007300740061006e00
7400690061006c00200070006f007200740069006f006e00730020006f00
6600200074006800650020004c00610079006f007500740020004c006f00
670069006300200053006f006600740077006100720065002e000d000a00
0d000a00540048004500200053004f004600540057004100520045002000
490053002000500052004f00560049004400450044002000270041005300
20004900530027002c00200057004900540048004f005500540020005700
41005200520041004e005400590020004f004600200041004e0059002000
4b0049004e0044002c002000450058005000520045005300530020004f00
5200200049004d0050004c004900450044002c00200049004e0043004c00
5500440049004e004700200042005500540020004e004f00540020004c00
49004d004900540045004400200054004f00200054004800450020005700
41005200520041004e00540049004500530020004f00460020004d004500
52004300480041004e0054004100420049004c004900540059002c002000
4600490054004e00450053005300200046004f0052002000410020005000
4100520054004900430055004c0041005200200050005500520050004f00
53004500200041004e00440020004e004f004e0049004e00460052004900
4e00470045004d0045004e0054002e00200049004e0020004e004f002000
4500560045004e00540020005300480041004c004c002000540048004500
200041005500540048004f005200530020004f005200200043004f005000
590052004900470048005400200048004f004c0044004500520053002000
4200450020004c004900410042004c004500200046004f00520020004100
4e005900200043004c00410049004d002c002000440041004d0041004700
4500530020004f00520020004f00540048004500520020004c0049004100
420049004c004900540059002c0020005700480045005400480045005200
200049004e00200041004e00200041004300540049004f004e0020004f00
4600200043004f004e00540052004100430054002c00200054004f005200
540020004f00520020004f00540048004500520057004900530045002c00
2000410052004900530049004e0047002000460052004f004d002c002000
4f005500540020004f00460020004f005200200049004e00200043004f00
4e004e0045004300540049004f004e002000570049005400480020005400
48004500200053004f0046005400570041005200450020004f0052002000
540048004500200055005300450020004f00520020004f00540048004500
520020004400450041004c0049004e0047005300200049004e0020005400
48004500200053004f004600540057004100520045002e000d000a004e00
6f0072006d00610061006c0069004e006f0072006d00e1006c006e006500
4e006f0072006d0061006c0065005300740061006e006400610061007200
64041e0431044b0447043d044b0439004e0061007600610064006e006f00
74006801b001a10300006e00670041007200720075006e00740061000000
410a005403ef02ad001d001f03ee03ed003c001f03edb2061d1fb803ecb3
032a1f3f411503e4006003e9009f03e500df03e50004001003e4001003e5
003f03e5007003e400ff03e40005ffc003e1b345453240b803e1b32b2e32
40b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003df
b2161b32b9ffc003deb2424232b9ffc003deb2363832b9ffc003deb32a2d
32df410a03de00ef03de000203de03df0028001fffc003dfb3282e32f041
0d03df0001037e000f0101001f00a003dd00b003dd0002004003dab32426
329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b700
12001f03b603b50064001fffc003b5b30e1132004173038d000100c0038d
00d0038d00e0038d00f0038d0004006f03a7007f03a7008f03a700af03a7
0004000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03a50001
000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa0001
03a8036a0022001f038c03940015001f038b03930015001f03a40393001a
001f03a20394001e001f03a10393001e001f039f0394001e001f039b0394
001a001f039a0393001e001f039903940016001f039803940016001f0397
0393001b001f03960394001b001f03950393001b001f03760375001a001f
03740375001a001f03a00373b21e1f10411e039300200393003003930003
00200394003003940040039400030000039400010383036c001e001f03b1
036c0032001f036d036c0032001fffc0037db2212332b9ffc0037db31719
32a0410a037d00b0037d00c0037d00d0037d0004ffc0037cb2212332b9ff
c0037cb3171932a0412d037c00b0037c00c0037c00d0037c000400300373
004003730002000003730010037300200373000300e0037300f003730002
00b0037300c0037300d003730003008403730090037300a0037300030377
036a0029001f0389036ab2281f40b80367b33940323fbb03660001004003
66b3191d328fbb0366000100400366b3090a3240b80366b3090e3240b803
66b3090f323fbb0365000100400365b3090c3240b80365b31a1d3240b803
65b3090e326b410e0363007b036300020014036300240363003403630044
036300040363b2242f1fba034e006d0800400e1f7f027f037f047f050430
440112bf033200500800001f0012032d003c0800b61f5f3c013785a04185
0362000100000362001003620070036200900362000400f0035f00010020
035e0020035f0030035f0040035e00040000035e0000035f0010035f00d0
035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f0005
0000030f0010030f0050030f0060030f0070030f00d0030f00060000030f
0010030f0020030f0030030f00e0030f00f0030f0006030f00270000030e
0030030e000200e0030e00f0030e0002030e004a00e0030d00f0030d0002
030d002700d002fc0001001002fc002002fc005002fc000300d002fc00e0
02fc0002000002fc001002fc002002fc003002fc005002fc006002fc0006
00e002fc00f002fc0002002002fc003002fc004002fc000302fc402c27c0
2901b02901a02901902901403c3f413240223f4132121212858f4caf4cbf
4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ff
c0b5b2191a32370f413b02af0001005f02af009f02af00df02af0003001f
02af002f02af003f02af006f02af000402af02af001f02ad002f02ad003f
02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02ad
005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f
02ad0003004002acb23a334f414d02ac005f02ac009f02ac0003002f02ac
003f02ac0002000f02ac003f02ac00af02ac000300b002ac00e002ac0002
004f02ac005f02ac00a002ac0003001f02ac002f02ac003f02ac0003000f
02ac0001000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004
035a035a0357035702ad02ad02ac02ac032c400d31151f00161600000012
1108104110020c004a000d01a8004a000d0198004a000d0189004a000d01
3f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d
01940041000d0121400b410db4410d4f410d29410d411002170021000d02
150021000d02060021000d01eb0021000d014e0021000d012c4014210df9
210df3210df1210d9d210d71210d3d210d4110021c001f000d0214001f00
0d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f
0d371f0d410d019e0141000d00420141000d001e0141000d001b0141000d
01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801
ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f901
0f0101001f01f6b224e41f411501f401490401001f01f301490401001f01
f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c811f41
1501a3010f019a001f01a200220801001f01a100500401001f019f014901
9a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c01
01001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1f
b8016ab23c2a1f4111016700240201001f0163002502ab001f014c010f01
9a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c79
1fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f
0401001f010d00220401001f0108b223811fb80106b425e41ff73cbb0125
001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401
b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb8
0201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b8
0201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d01
0f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a
23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24
e41f2623b80156b41f35555537ba023500070175402c0774076207560751
073b0733072d0720071d071c071408120810080e080c080a080808060804
080208000814b8ffe0402b00000100140610000001000604000001000410
000001001002000001000200000001000002010802004a00b013034b024b
534201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b10101
8e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a51
5ab0052342180016763f183f123e113946443e113946443e113946443e11
3946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b
2b2b2b2b2b2b2b2b2b2b181d42b0964b5358b235aaaa1d4259b0324b5358
b235ffff1d42594bb04753205c58b90271026f4544b90270026f45445958
b9017a0271455258b90271017a4459594bb04753205c58b9002202704544
b9003c027045445958b901b30022455258b9002201b34459594bb04c5320
5c58b9014900224544b1222245445958b901c20149455258b9014901c244
59594bb06753205c58b9002402714544b90050027145445958b9021e0024
455258b90024021e4459594bb8020153205c58b9010f00224544b1222245
445958b90c00010f455258b9010f0c004459594bb01c53205c58b1252545
44b12c2545445958b13725455258b125374459594bb0ab53205c58b12525
4544b1232545445958b901590025455258b9002501594459594bb8010153
205c58b125254544b1282545445958b902080025455258b9002502084459
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b01b361dc6463456523456023456560234560b08b766818b0806220
20b164dc4565234520b003266062636820b003266165b0dc236544b06423
4420b161634565234520b003266062636820b003266165b063236544b061
2344b10063455458b163406544b26140614523614459b3a67f434b456523
456023456560234560b089766818b080622020b1437f4565234520b00326
6062636820b003266165b07f236544b043234420b1a64b4565234520b003
266062636820b003266165b04b236544b0a62344b1004b455458b14b4065
44b2a640a645236144594b5242014b5058b108004259435c58b108004259
b3020b0a124358601b2159421610703eb0124358b93b21187e1bba040001
a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b
2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0
102342b0112342002b001845694445694445694445694473737374737373
737475752b7373747475184569447373742b4bb021534bb046515a58b03c
b03c45b040604459012b2b2b2b75752b5840365f235f255f285fa5046f23
6f256f286fa5044f234f254f284fa5043f233f253f283fa5042f232f252f
282fa5041f231f251f281fa5047575757575755943584010bf3ccf3c026f
3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f22
9f22af2206757559435c58b6403c9f22ef220375592b2b01747474744544
73737474757545447345447374454473747573737373732b584024600970
0980090310092009300940095009056f037f038f03031f032f033f034f03
5f0305b8ffc0b2073a33b8ffc04046063a33900ba00bb00bc00bd00b05b0
06c006d006e006f0060520063006400650066006700680069006a0060990
06900702600b700b800b03100b200b300b400b500b051f07010075757573
7575752b2b757575751b40100706441f0b0a441f0302441f0908441f2b2b
2b2b592b752b435841220063032d00010003032d0013032d0023032d0033
032d0053032d000500c3032d00d3032d00e3032d00f3032d00040083032d
0093032d00a3032d00b3032d0004032d032d4518694474747575592b4358
b900180332b330353238b80332b361663238b80332b3535a3238b80332b3
454e3238b80332b33c413218b80332b23f330a410f0332000100ba033200
ca033200da033200ea033200fa03320005033203324518694474752b2b2b
2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b01
7373737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b
2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73742b002b2b2b2b0000>
[3811 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 420 32 <0002002501db045c037300030007009bb0852b58b10607b80327b6054f04
5f040204be034c00020003032700010000ff80403b3a3500008000025000
8000a000d000e0000500060605050202100101d0010130014001a0010300
011001200103015c090704040303005c08585e182b10f63c103c103c10f6
5d5d71723c103c103c003f5d712b3cfd3cf65d3cfd3c31301bb10704b807
f2b36c070003b807f2b16c0000182f2b2f2b303159132115211521152125
0437fbc90437fbc9037352f45200>HJCBAA+CIDFont+F5 AddT42Char 
2 0 0 <0002011c0000051c050000030007006cb0852b58b10201bb02be00060007
02bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c31301bb10004b807d7b36c000107b807d7b16c0100182f2b2f
2b3031592111211125211121011c0400fc2003c0fc400500fb002004c000
>HJCBAA+CIDFont+F5 AddT42Char 
HJCBAA+CIDFont+F5 /CharStrings get begin
/equal 32 def
end
HJCBAA+CIDFont+F5 /Encoding get
dup 61 /equal put
pop
end
%ADOEndSubsetFont
/YZDDLX+CIDFont+F5 /HJCBAA+CIDFont+F5 findfont ct_VMDictPut
/YZDDLX+CIDFont+F5*1 
[61{/.notdef}rp /equal 194{/.notdef}rp]
YZDDLX+CIDFont+F5 nf
YZDDLX+CIDFont+F5*1 [13.94 0 0 -13.9063 0 0 ]msf
198.149 249.84 mo
(=)sh
gsave
192.033 246.237 mo
238.835 246.237 li
238.835 255.359 li
192.033 255.359 li
cp
eclp
YZDDLU+CIDFont+F2*1 [8.05921 0 0 -8.03955 0 0 ]msf
192.033 253.436 mo
(kack)
[32.3979 3.94907 3.62663 0 ]xsh
grestore
gsave
173.55 237.482 mo
238.826 237.482 li
238.826 253.201 li
173.55 253.201 li
cp
eclp
YZDDLU+CIDFont+F2*1 [13.94 0 0 -13.9063 0 0 ]msf
173.55 249.84 mo
(seqseq)
[5.57613 5.99409 20.7707 5.43681 6.13341 0 ]xsh
grestore
572.79 154.44 mo
572.79 293.28 li
572.79 301.08 566.43 307.44 558.51 307.44 cv
497.31 307.44 li
@
498.15 310.68 mo
491.55 307.44 li
498.15 304.2 li
498.15 310.68 li
cp
ef
416.43 153.84 mo
416.43 172.92 li
416.43 180.72 410.07 187.08 402.27 187.08 cv
392.19 187.08 li
384.39 187.08 378.03 193.44 378.03 201.24 cv
378.03 293.28 li
378.03 301.08 384.39 307.44 392.19 307.44 cv
465.87 307.44 li
@
465.03 304.2 mo
471.63 307.44 li
465.03 310.68 li
465.03 304.2 li
cp
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/YZDDLW+CIDFont+F4*1 uf
/YZDDLW+CIDFont+F4 uf
/GFNBAA+CIDFont+F4 uf
/YZDDLV+CIDFont+F3*1 uf
/YZDDLV+CIDFont+F3 uf
/QJJAAA+CIDFont+F3 uf
/YZDDLX+CIDFont+F5*1 uf
/YZDDLX+CIDFont+F5 uf
/HJCBAA+CIDFont+F5 uf
/YZDDLU+CIDFont+F2*1 uf
/YZDDLU+CIDFont+F2 uf
/HIBBAA+CIDFont+F2 uf
/YZDDLT+CIDFont+F1-GBK-EUC-H-Identity-H uf
/YZDDLT+CIDFont+F1-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

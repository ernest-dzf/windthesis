%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: decodelc.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: victor
%%CreationDate: 2017/3/23, 17:32:12
%%BoundingBox: 0 0 484 519
%%HiResBoundingBox: 0 0 483.2457 518.7812
%%CropBox: 0 0 483.2457 518.7812
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1030 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2017-03-23T17:31:33+08:00"
   xmp:ModifyDate="2017-03-23T17:32:04+08:00"
   xmp:MetadataDate="2017-03-23T17:32:04+08:00"
   pdf:Producer="Microsoft: Print To PDF"
   xmpMM:DocumentID="uuid:504fef96-db2d-4d7f-ad75-73c2ff32c52d"
   xmpMM:InstanceID="uuid:39815143-5800-400b-b3c8-84e2f51183e5">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>victor</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-ç»Ÿåł¾22.vsdx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -518.781 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 518.781 li
483.246 518.781 li
483.246 0 li
cp
clp
306.27 478.101 mo
348.87 478.101 li
356.67 478.101 363.03 471.741 363.03 463.941 cv
363.03 456.141 356.67 449.781 348.87 449.781 cv
306.27 449.781 li
298.47 449.781 292.11 456.141 292.11 463.941 cv
292.11 471.741 298.47 478.101 306.27 478.101 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.24 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
306.27 478.101 mo
348.87 478.101 li
356.67 478.101 363.03 471.741 363.03 463.941 cv
363.03 456.141 356.67 449.781 348.87 449.781 cv
306.27 449.781 li
298.47 449.781 292.11 456.141 292.11 463.941 cv
292.11 471.741 298.47 478.101 306.27 478.101 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: PBAAAA+CIDFont+F1 Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+CIDFont+F1
Type42DictBegin
[<00010000000c000c000c000c4f532f32176e7e46000000cc000000606376
74201d6402d70000012c000010846670676d6d591b53000011b000000a59
676c7966a554ff0f0000b6880000454c68656164e9529c6500001c0c0000
003668686561134d15e700001c4400000024686d7478d00c078600001c68
00003e366c6f63615a4c48ef00005aa00000229a6d617870182b107e0000
7d3c000000206e616d658512f01400007d5c0000299570726570b3329291
0000a6f400000f9367646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002effc000785b0000000900000000544d432000400020
25cc058cfe460133072101bb400001ffffff00000394054c000000200015
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
03d703f10470000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000160016001700180018001a001b00210029002a
002a002c002d002e002f003200340036003700380039003a003b003c003d
003e004200460046004a004c004d004f004f00530053005500570059005c
005c005d005d005e005f0061006400650067006800690069006b006e006f
00710076007600770077007d007e007f008000810082008600870087008a
008d008e0096009600970097009c00a000a200a300a600ac00b300b300b6
00b800b900be00bf00c100c200c400c500c600c700ca00ca00cb00cc00cc
00ce00d100d200d300d700da00db00dc00de00df00e000e000e300e64057
8574737271706f6e6d6c6b6a6968676665625d55544f4e403f3e3d3c3b3a
393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c
1b1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d
2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121
592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112b
b01723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920
b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae459
59182d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212110592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b802b023701020b802b04520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2c014b53234b515ab00225b00425b0062549
23451869525a58b00225b00225b00525462345696048592121212d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab9035803588a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2c2320b000508a8a64b10003255458b0401bb10103255458
b037438b59b04f2b5923b0622b2321235865592d2cb13a000c215460432d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a37403a403b403e023f021bb101
02435458b237403aba0100003b0100b33e013f011bb18002435258b23740
3ab80180b13b401bb901000002435258b237403aba0180003b01401bb901
800002435258b237403ab80200b13b401bb237403aba0100003b01005959
59b9400000808855b94000020063b8040088555a58b33e003f011bb33e00
3f0159595942424242422d2cb0024354584b53234b515a58381b2121591b
21212121592d2c012d2cb0022563b0206066b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b03543525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b03543525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cb12501885058b94000020063b8040088545cb0134b
525b1bb001592d000000000100000006f5c3fcacbf025f0f3cf508190800
00000000a2e31dc200000000d36b3e05fb74fd8c105e0851000000090001
000000000000000100000721fe4500571000fb74f9d2105e000100000000
000000000000000000000dcf0639011c0000000002000000020000000000
000003440085000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000005c70010000000000556004a0000000004e3002a04730021
000000000000000000000000000000000000000004e30029071d002205c7
ffe505c700480473002200000000000000000473008004e3003e00000000
000000000000000000000000000000000000000000000000000000000000
0000000000000400ffef000000000000000000000000038d004604000044
038d004c0000000000000000000000000239003c00000000000000000000
0000000000000400000c00000000000000000000000002aa000d00000000
023900140400000200000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000239003c0000
000000000000000000000000000002aa00e9000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000001a8ffba000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000051bffba0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000100ffba0800ffba1000
ffba00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004c10066000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000019a000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000239003c0000000000000000
0000000000000000000000000422000a000000000447004904a4001a0394
0035035f0016000000000000000002150027000000000000000003d10027
051a002204a400130480004903a8000a00000000041e001602f4004d03d7
002f04840008000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000002150027000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000>
<0000004b004b004b004b004b00d200d200d200d200d200d200d200d200d2
00d200d200d200d200d200d200d200d200d200d200d200d200d200d200d2
00d200d200d200d200d200d200d202340234030d030d0423052205220522
05220522052205c60711084908e70a010a010a010b9f0c600c600c600c60
0c600c600c600c600c600c600c600c880c880c880c880dce0f4b11571157
1157115712c512c512c512c512c5149214921492149215bc15bc16fc1862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186218621862186218621862186218621862186218621862
186218621862186219261926192619261926195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b195b195b195b195b195b195b195b195b195b195b195b195b
195b195b195b197519751975197519751975197519751975197519751975
197519751975197519751975197519751975197519751975197519751975
197519751975197519751975197519751975197519751975197519751975
1975198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f198f198f198f198f198f198f198f198f198f198f198f198f
198f198f198f19a919c319dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd19dd
19dd19dd19dd19dd19dd19dd1ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae81ae8
1ae81ae81af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01af01af01af01af01af01af01af01af01af81af81af81af81af8
1af81b9d1b9d1c2c1ca81d271d941d941d941dd21dd21dd21e211ec11f4b
1fc6203b203b20e921b12210229022902290229022902290229022902290
229022902290229022902290229022902290229022902290229022902290
229022902290229022902290229022902290229022902290229022902290
229022902290229022902290229022902290229022902290229022902290
22902290229022902290229022902290229022a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a622a622a622a622a622a622a622a622a622a622a622a6
22a622a622a622a6000000010000114c0080001000280002000200100040
0086000006340f93000200010000003a02be0000000300000000006c0000
0000000300000001001e006c0000000300000002000e0114000000030000
0003005800e20000000300000004001e006c00000003000000050018013a
00000003000000060022015200000003000000070076006c000000030000
0008003000b0000000030000000900860174000000030000000d0e0401fa
000100000000000000360ffe0001000000000001000f1034000100000000
0002000710880001000000000003002c106f0001000000000004000f1034
0001000000000005000c109b0001000000000006001110a7000100000000
0007003b10340001000000000008001810560001000000000009004310b8
000100000000000d070210fb0003000104030002000c17fd000300010405
00020010180d0003000104060002000c181d000300010407000200101829
0003000104080002001018390003000104090000006c0000000300010409
0001001e006c0003000104090002000e01140003000104090003005800e2
0003000104090004001e006c00030001040900050018013a000300010409
00060022015200030001040900070076006c0003000104090008003000b0
000300010409000900860174000300010409000d0e16184900030001040a
0002000c17fd00030001040b00020010265f00030001040c0002000c17fd
00030001040e0002000c266f0003000104100002000e267f000300010413
00020012268d0003000104140002000c17fd0003000104150002001017fd
0003000104160002000c17fd0003000104190002000e269f00030001041b
00020010266f00030001041d0002000c17fd00030001041f0002000c17fd
0003000104240002000e26ad00030001042a0002000e26bb00030001042d
0002000e26c900030001080a0002000c17fd0003000108160002000c17fd
000300010c0a0002000c17fd000300010c0c0002000c17fd00a900200032
00300031003600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e002000540069006d006500730020004e00650077
00200052006f006d0061006e002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e004d006f006e006f0074007900700065003a0054
0069006d006500730020004e0065007700200052006f006d0061006e0020
0052006500670075006c0061007200200028004d006900630072006f0073
006f00660074002900560065007200730069006f006e00200036002e0039
003600540069006d00650073004e006500770052006f006d0061006e0050
0053004d0054004d006f006e006f00740079007000650020005400790070
0065002000440072006100770069006e00670020004f0066006600690063
00650020002d0020005300740061006e006c006500790020004d006f0072
00690073006f006e002c00200056006900630074006f00720020004c0061
007200640065006e007400200031003900330032004d006900630072006f
0073006f0066007400200073007500700070006c00690065006400200066
006f006e0074002e00200059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e007400200074006f0020
006300720065006100740065002c00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
006400200062007900200074006800650020006c006900630065006e0073
00650020007400650072006d0073002c0020006f00720020007400650072
006d00730020006f00660020007500730065002c0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000700072
006f0064007500630074002c002000730065007200760069006300650020
006f007200200063006f006e00740065006e007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
00770061007300200069006e0063006c0075006400650064002e00200059
006f00750020006d006100790020006f006e006c00790020002800690029
00200065006d0062006500640020007400680069007300200066006f006e
007400200069006e00200063006f006e00740065006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
0068006500200065006d00620065006400640069006e0067002000720065
0073007400720069006300740069006f006e007300200069006e0063006c
007500640065006400200069006e0020007400680069007300200066006f
006e0074003b00200061006e006400200028006900690029002000740065
006d0070006f0072006100720069006c007900200064006f0077006e006c
006f006100640020007400680069007300200066006f006e007400200074
006f002000610020007000720069006e0074006500720020006f00720020
006f00740068006500720020006f00750074007000750074002000640065
007600690063006500200074006f002000680065006c0070002000700072
0069006e007400200063006f006e00740065006e0074002e00200041006e
00790020006f007400680065007200200075007300650020006900730020
00700072006f0068006900620069007400650064002e000d000d00540068
006500200066006f006c006c006f00770069006e00670020006c00690063
0065006e00730065002c0020006200610073006500640020006f006e0020
0074006800650020004d004900540020006c006900630065006e00730065
002000280068007400740070003a002f002f0065006e002e00770069006b
006900700065006400690061002e006f00720067002f00770069006b0069
002f004d00490054005f004c006900630065006e007300650029002c0020
006100700070006c00690065007300200074006f00200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020201c004c0061
0079006f007500740020004c006f006700690063201d0020006100730020
006a006f0069006e0074006c007900200064006500760065006c006f0070
00650064002000620079002000520061006c00700068002000480061006e
0063006f0063006b00200061006e00640020004a006f0068006e00200048
007500640073006f006e002e0020000d000d005000650072006d00690073
00730069006f006e00200069007300200068006500720065006200790020
006700720061006e007400650064002c002000660072006500650020006f
00660020006300680061007200670065002c00200074006f00200061006e
007900200070006500720073006f006e0020006f0062007400610069006e
0069006e00670020006100200063006f007000790020006f006600200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
0061006e00640020006100730073006f0063006900610074006500640020
0064006f00630075006d0065006e0074006100740069006f006e00200066
0069006c00650073002000280074006800650020201c004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065201d0029002c00200074006f0020006400650061006c00200069
006e00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000770069
00740068006f007500740020007200650073007400720069006300740069
006f006e002c00200069006e0063006c007500640069006e006700200077
006900740068006f007500740020006c0069006d00690074006100740069
006f006e0020007400680065002000720069006700680074007300200074
006f0020007500730065002c00200063006f00700079002c0020006d006f
0064006900660079002c0020006d0065007200670065002c002000700075
0062006c006900730068002c002000640069007300740072006900620075
00740065002c0020007300750062006c006900630065006e00730065002c
00200061006e0064002f006f0072002000730065006c006c00200063006f
00700069006500730020006f006600200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
006100720065002c00200061006e006400200074006f0020007000650072
006d0069007400200070006500720073006f006e007300200074006f0020
00770068006f006d00200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
0020006900730020006600750072006e0069007300680065006400200074
006f00200064006f00200073006f002c0020007300750062006a00650063
007400200074006f002000740068006500200066006f006c006c006f0077
0069006e006700200063006f006e0064006900740069006f006e0073003a
000d000d005400680065002000610062006f0076006500200063006f0070
0079007200690067006800740020006e006f007400690063006500200061
006e0064002000740068006900730020007000650072006d006900730073
0069006f006e0020006e006f00740069006300650020007300680061006c
006c00200062006500200069006e0063006c007500640065006400200069
006e00200061006c006c00200063006f00700069006500730020006f0072
0020007300750062007300740061006e007400690061006c00200070006f
007200740069006f006e00730020006f006600200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
00740077006100720065002e000d000d00540048004500200053004f0046
00540057004100520045002000490053002000500052004f005600490044
0045004400200027004100530020004900530027002c0020005700490054
0048004f00550054002000570041005200520041004e005400590020004f
004600200041004e00590020004b0049004e0044002c0020004500580050
00520045005300530020004f005200200049004d0050004c004900450044
002c00200049004e0043004c005500440049004e00470020004200550054
0020004e004f00540020004c0049004d004900540045004400200054004f
0020005400480045002000570041005200520041004e0054004900450053
0020004f00460020004d00450052004300480041004e0054004100420049
004c004900540059002c0020004600490054004e00450053005300200046
004f00520020004100200050004100520054004900430055004c00410052
00200050005500520050004f0053004500200041004e00440020004e004f
004e0049004e004600520049004e00470045004d0045004e0054002e0020
0049004e0020004e004f0020004500560045004e00540020005300480041
004c004c002000540048004500200041005500540048004f005200530020
004f005200200043004f005000590052004900470048005400200048004f
004c00440045005200530020004200450020004c004900410042004c0045
00200046004f005200200041004e005900200043004c00410049004d002c
002000440041004d00410047004500530020004f00520020004f00540048
004500520020004c0049004100420049004c004900540059002c00200057
00480045005400480045005200200049004e00200041004e002000410043
00540049004f004e0020004f004600200043004f004e0054005200410043
0054002c00200054004f005200540020004f00520020004f005400480045
00520057004900530045002c002000410052004900530049004e00470020
00460052004f004d002c0020004f005500540020004f00460020004f0052
00200049004e00200043004f004e004e0045004300540049004f004e0020
0057004900540048002000540048004500200053004f0046005400570041
005200450020004f0052002000540048004500200055005300450020004f
00520020004f00540048004500520020004400450041004c0049004e0047
005300200049004e002000540048004500200053004f0046005400570041
00520045002e000da9203230313620546865204d6f6e6f7479706520436f
72706f726174696f6e2e20416c6c20526967687473205265736572766564
2e2054696d6573204e657720526f6d616e20697320612074726164656d61
726b206f6620546865204d6f6e6f7479706520436f72706f726174696f6e
2e4d6f6e6f747970653a54696d6573204e657720526f6d616e2052656775
6c617220284d6963726f736f66742956657273696f6e20362e393654696d
65734e6577526f6d616e50534d544d6f6e6f747970652054797065204472
6177696e67204f6666696365202d205374616e6c6579204d6f7269736f6e
2c20566963746f72204c617264656e7420313933324d6963726f736f6674
20737570706c69656420666f6e742e20596f75206d617920757365207468
697320666f6e7420746f206372656174652c20646973706c617920616e64
207072696e7420636f6e74656e74206173207065726d6974746564206279
20746865206c6963656e7365207465726d732c206f72207465726d73206f
66207573652c206f6620746865204d6963726f736f66742070726f647563
742c2073657276696365206f7220636f6e74656e7420696e207768696368
207468697320666f6e742077617320696e636c756465642e20596f75206d
6179206f6e6c792028692920656d626564207468697320666f6e7420696e
20636f6e74656e74206173207065726d6974746564206279207468652065
6d62656464696e67207265737472696374696f6e7320696e636c75646564
20696e207468697320666f6e743b20616e6420286969292074656d706f72
6172696c7920646f776e6c6f6164207468697320666f6e7420746f206120
7072696e746572206f72206f74686572206f757470757420646576696365
20746f2068656c70207072696e7420636f6e74656e742e20416e79206f74
686572207573652069732070726f686962697465642e0d0d54686520666f
6c6c6f77696e67206c6963656e73652c206261736564206f6e2074686520
4d4954206c6963656e73652028687474703a2f2f656e2e77696b69706564
69612e6f72672f77696b692f4d49545f4c6963656e7365292c206170706c
69657320746f20746865204f70656e54797065204c61796f7574206c6f67
696320666f72204269626c6963616c2048656272657720d24c61796f7574
204c6f676963d3206173206a6f696e746c7920646576656c6f7065642062
792052616c70682048616e636f636b20616e64204a6f686e20487564736f
6e2e200d0d5065726d697373696f6e20697320686572656279206772616e
7465642c2066726565206f66206368617267652c20746f20616e79207065
72736f6e206f627461696e696e67206120636f7079206f6620746865204f
70656e54797065204c61796f7574206c6f67696320666f72204269626c69
63616c2048656272657720616e64206173736f63696174656420646f6375
6d656e746174696f6e2066696c6573202874686520d24c61796f7574204c
6f67696320536f667477617265d3292c20746f206465616c20696e207468
65204c61796f7574204c6f67696320536f66747761726520776974686f75
74207265737472696374696f6e2c20696e636c7564696e6720776974686f
7574206c696d69746174696f6e207468652072696768747320746f207573
652c20636f70792c206d6f646966792c206d657267652c207075626c6973
682c20646973747269627574652c207375626c6963656e73652c20616e64
2f6f722073656c6c20636f70696573206f6620746865204c61796f757420
4c6f67696320536f6674776172652c20616e6420746f207065726d697420
706572736f6e7320746f2077686f6d20746865204c61796f7574204c6f67
696320536f667477617265206973206675726e697368656420746f20646f
20736f2c207375626a65637420746f2074686520666f6c6c6f77696e6720
636f6e646974696f6e733a0d0d5468652061626f766520636f7079726967
6874206e6f7469636520616e642074686973207065726d697373696f6e20
6e6f74696365207368616c6c20626520696e636c7564656420696e20616c
6c20636f70696573206f72207375627374616e7469616c20706f7274696f
6e73206f6620746865204c61796f7574204c6f67696320536f6674776172
652e0d0d54484520534f4654574152452049532050524f56494445442027
4153204953272c20574954484f55542057415252414e5459204f4620414e
59204b494e442c2045585052455353204f5220494d504c4945442c20494e
434c5544494e4720425554204e4f54204c494d4954454420544f20544845
2057415252414e54494553204f46204d45524348414e544142494c495459
2c204649544e45535320464f52204120504152544943554c415220505552
504f534520414e44204e4f4e494e4652494e47454d454e542e20494e204e
4f204556454e54205348414c4c2054484520415554484f5253204f522043
4f5059524947485420484f4c44455253204245204c4941424c4520464f52
20414e5920434c41494d2c2044414d41474553204f52204f54484552204c
494142494c4954592c205748455448455220494e20414e20414354494f4e
204f4620434f4e54524143542c20544f5254204f52204f54484552574953
452c2041524953494e472046524f4d2c204f5554204f46204f5220494e20
434f4e4e454354494f4e20574954482054484520534f465457415245204f
522054484520555345204f52204f54484552204445414c494e475320494e
2054484520534f4654574152452e0d004e006f0072006d0061006c006e00
79006f00620079010d0065006a006e00e9006e006f0072006d0061006c00
5300740061006e0064006100720064039a03b103bd03bf03bd03b903ba03
ac004d006900630072006f0073006f006600740020007300750070007000
6c00690065006400200066006f006e0074002e00200059006f0075002000
6d0061007900200075007300650020007400680069007300200066006f00
6e007400200074006f0020006300720065006100740065002c0020006400
6900730070006c0061007900200061006e00640020007000720069006e00
7400200063006f006e00740065006e007400200061007300200070006500
72006d006900740074006500640020006200790020007400680065002000
6c006900630065006e007300650020007400650072006d0073002c002000
6f00720020007400650072006d00730020006f0066002000750073006500
2c0020006f006600200074006800650020004d006900630072006f007300
6f00660074002000700072006f0064007500630074002c00200073006500
7200760069006300650020006f007200200063006f006e00740065006e00
7400200069006e0020007700680069006300680020007400680069007300
200066006f006e0074002000770061007300200069006e0063006c007500
6400650064002e00200059006f00750020006d006100790020006f006e00
6c0079002000280069002900200065006d00620065006400200074006800
69007300200066006f006e007400200069006e00200063006f006e007400
65006e00740020006100730020007000650072006d006900740074006500
64002000620079002000740068006500200065006d006200650064006400
69006e00670020007200650073007400720069006300740069006f006e00
7300200069006e0063006c007500640065006400200069006e0020007400
680069007300200066006f006e0074003b00200061006e00640020002800
6900690029002000740065006d0070006f0072006100720069006c007900
200064006f0077006e006c006f0061006400200074006800690073002000
66006f006e007400200074006f002000610020007000720069006e007400
6500720020006f00720020006f00740068006500720020006f0075007400
7000750074002000640065007600690063006500200074006f0020006800
65006c00700020007000720069006e007400200063006f006e0074006500
6e0074002e00200041006e00790020006f00740068006500720020007500
730065002000690073002000700072006f00680069006200690074006500
64002e000d000a000d000a00540068006500200066006f006c006c006f00
770069006e00670020006c006900630065006e00730065002c0020006200
610073006500640020006f006e00200074006800650020004d0049005400
20006c006900630065006e00730065002000280068007400740070003a00
2f002f0065006e002e00770069006b006900700065006400690061002e00
6f00720067002f00770069006b0069002f004d00490054005f004c006900
630065006e007300650029002c0020006100700070006c00690065007300
200074006f00200074006800650020004f00700065006e00540079007000
650020004c00610079006f007500740020006c006f006700690063002000
66006f00720020004200690062006c006900630061006c00200048006500
620072006500770020201c004c00610079006f007500740020004c006f00
6700690063201d0020006100730020006a006f0069006e0074006c007900
200064006500760065006c006f0070006500640020006200790020005200
61006c00700068002000480061006e0063006f0063006b00200061006e00
640020004a006f0068006e00200048007500640073006f006e002e002000
0d000a000d000a005000650072006d0069007300730069006f006e002000
69007300200068006500720065006200790020006700720061006e007400
650064002c002000660072006500650020006f0066002000630068006100
7200670065002c00200074006f00200061006e0079002000700065007200
73006f006e0020006f0062007400610069006e0069006e00670020006100
200063006f007000790020006f006600200074006800650020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200066006f00720020004200690062006c0069006300
61006c002000480065006200720065007700200061006e00640020006100
730073006f00630069006100740065006400200064006f00630075006d00
65006e0074006100740069006f006e002000660069006c00650073002000
280074006800650020201c004c00610079006f007500740020004c006f00
670069006300200053006f006600740077006100720065201d0029002c00
200074006f0020006400650061006c00200069006e002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f00660074007700610072006500200077006900740068006f0075007400
20007200650073007400720069006300740069006f006e002c0020006900
6e0063006c007500640069006e006700200077006900740068006f007500
740020006c0069006d00690074006100740069006f006e00200074006800
65002000720069006700680074007300200074006f002000750073006500
2c00200063006f00700079002c0020006d006f0064006900660079002c00
20006d0065007200670065002c0020007000750062006c00690073006800
2c00200064006900730074007200690062007500740065002c0020007300
750062006c006900630065006e00730065002c00200061006e0064002f00
6f0072002000730065006c006c00200063006f0070006900650073002000
6f006600200074006800650020004c00610079006f007500740020004c00
6f00670069006300200053006f006600740077006100720065002c002000
61006e006400200074006f0020007000650072006d006900740020007000
6500720073006f006e007300200074006f002000770068006f006d002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f0066007400770061007200650020006900730020006600
750072006e0069007300680065006400200074006f00200064006f002000
73006f002c0020007300750062006a00650063007400200074006f002000
740068006500200066006f006c006c006f00770069006e00670020006300
6f006e0064006900740069006f006e0073003a000d000a000d000a005400
680065002000610062006f0076006500200063006f007000790072006900
67006800740020006e006f007400690063006500200061006e0064002000
740068006900730020007000650072006d0069007300730069006f006e00
20006e006f00740069006300650020007300680061006c006c0020006200
6500200069006e0063006c007500640065006400200069006e0020006100
6c006c00200063006f00700069006500730020006f007200200073007500
62007300740061006e007400690061006c00200070006f00720074006900
6f006e00730020006f006600200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065002e000d000a000d000a00540048004500200053004f0046005400
57004100520045002000490053002000500052004f005600490044004500
4400200027004100530020004900530027002c0020005700490054004800
4f00550054002000570041005200520041004e005400590020004f004600
200041004e00590020004b0049004e0044002c0020004500580050005200
45005300530020004f005200200049004d0050004c004900450044002c00
200049004e0043004c005500440049004e00470020004200550054002000
4e004f00540020004c0049004d004900540045004400200054004f002000
5400480045002000570041005200520041004e0054004900450053002000
4f00460020004d00450052004300480041004e0054004100420049004c00
4900540059002c0020004600490054004e00450053005300200046004f00
520020004100200050004100520054004900430055004c00410052002000
50005500520050004f0053004500200041004e00440020004e004f004e00
49004e004600520049004e00470045004d0045004e0054002e0020004900
4e0020004e004f0020004500560045004e00540020005300480041004c00
4c002000540048004500200041005500540048004f005200530020004f00
5200200043004f005000590052004900470048005400200048004f004c00
440045005200530020004200450020004c004900410042004c0045002000
46004f005200200041004e005900200043004c00410049004d002c002000
440041004d00410047004500530020004f00520020004f00540048004500
520020004c0049004100420049004c004900540059002c00200057004800
45005400480045005200200049004e00200041004e002000410043005400
49004f004e0020004f004600200043004f004e0054005200410043005400
2c00200054004f005200540020004f00520020004f005400480045005200
57004900530045002c002000410052004900530049004e00470020004600
52004f004d002c0020004f005500540020004f00460020004f0052002000
49004e00200043004f004e004e0045004300540049004f004e0020005700
4900540048002000540048004500200053004f0046005400570041005200
450020004f0052002000540048004500200055005300450020004f005200
20004f00540048004500520020004400450041004c0049004e0047005300
200049004e002000540048004500200053004f0046005400570041005200
45002e000d000a004e006f0072006d00610061006c0069004e006f007200
6d00e1006c006e0065004e006f0072006d0061006c006500530074006100
6e00640061006100720064041e0431044b0447043d044b0439004e006100
7600610064006e006f0074006801b001a10300006e006700410072007200
75006e00740061000000410a005403ef02ad001d001f03ee03ed003c001f
03edb2061d1fb803ecb3032a1f3f411503e4006003e9009f03e500df03e5
0004001003e4001003e5003f03e5007003e400ff03e40005ffc003e1b345
453240b803e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e1
02ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb236
3832b9ffc003deb32a2d32df410a03de00ef03de000203de03df0028001f
ffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00b003
dd0002004003dab32426329fbf03cc000103ca03c90064001fffc003c9b2
0d1132410a03c703b70012001f03b603b50064001fffc003b5b30e113200
4173038d000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f
03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a70004
03ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a500040054
03aa0001006b03aa000103a8036a0022001f038c03940015001f038b0393
0015001f03a40393001a001f03a20394001e001f03a10393001e001f039f
0394001e001f039b0394001a001f039a0393001e001f039903940016001f
039803940016001f03970393001b001f03960394001b001f03950393001b
001f03760375001a001f03740375001a001f03a00373b21e1f10411e0393
002003930030039300030020039400300394004003940003000003940001
0383036c001e001f03b1036c0032001f036d036c0032001fffc0037db221
2332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d0037d0004
ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c
00d0037c0004003003730040037300020000037300100373002003730003
00e0037300f00373000200b0037300c0037300d003730003008403730090
037300a0037300030377036a0029001f0389036ab2281f40b80367b33940
323fbb0366000100400366b3191d328fbb0366000100400366b3090a3240
b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c3240
b80365b31a1d3240b80365b3090e326b410e0363007b0363000200140363
00240363003403630044036300040363b2242f1fba034e006d0800400e1f
7f027f037f047f050430440112bf033200500800001f0012032d003c0800
b61f5f3c013785a041850362000100000362001003620070036200900362
000400f0035f00010020035e0020035f0030035f0040035e00040000035e
0000035f0010035f00d0035e00e0035f00050010030f0020030f0030030f
00d0030f00e0030f00050000030f0010030f0050030f0060030f0070030f
00d0030f00060000030f0010030f0020030f0030030f00e0030f00f0030f
0006030f00270000030e0030030e000200e0030e00f0030e0002030e004a
00e0030d00f0030d0002030d002700d002fc0001001002fc002002fc0050
02fc000300d002fc00e002fc0002000002fc001002fc002002fc003002fc
005002fc006002fc000600e002fc00f002fc0002002002fc003002fc0040
02fc000302fc402c27c02901b02901a02901902901403c3f413240223f41
32121212858f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032
b8ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f
02af00df02af0003001f02af002f02af003f02af006f02af000402af02af
001f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f
02ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad0002
000f02ad001f02ad003f02ad0003004002acb23a334f414d02ac005f02ac
009f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac0003
00b002ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f
02ac003f02ac0003000f02ac0001000f035a0001000f035a001f035a003f
035a005f035a0070035a000500cf035700df03570002000f0357001f0357
0070035700af03570004035a035a0357035702ad02ad02ac02ac032c400d
31151f001616000000121108104110020c004a000d01a8004a000d019800
4a000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d
274a0dbe02280041000d01940041000d0121400b410db4410d4f410d2941
0d411002170021000d02150021000d02060021000d01eb0021000d014e00
21000d012c4014210df9210df3210df1210d9d210d71210d3d210d411002
1c001f000d0214001f000d020b001f000d0196001f000d014a001f000d01
26400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e
0141000d001b0141000d01f2b40f440f0009bb01f20044000d0201b23c29
1fb80200b23c291fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb8
01fab23c931fbc01f9010f0101001f01f6b224e41f411501f40149040100
1f01f301490401001f01f1014900ab001f01f001490067001f01a6003c01
25001f01a4b23c811f411501a3010f019a001f01a200220801001f01a100
500401001f019f0149019a001f019d01490067001f019cb22c621fb8019b
b22c791fbc019a002c0101001f0197b22ce41fb80193b22c891fb80192b2
2c6c1fb8018fb2259e1fb8016ab23c2a1f4111016700240201001f016300
2502ab001f014c010f019a001f01480149006c001f0147b22c891fb80145
b22c9e1fb80144b22c791fb80143b223311fb80127b23c811fbc01230050
0101001f011fb223e41f4115011d0023019a001f011c00230801001f011b
00250801001f010e010f0401001f010d00220401001f0108b223811fb801
06b425e41ff73cbb0125001f00f5010fb29e1fe3bc01490156001f00e201
49b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21f
c02cb80801b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671f
ad23b80801b21fa523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f
812cbc0401001f006d010f0156400b1f592c3e1f4c3cab1f4625b80101b2
1f403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b80401b2
1f3025b802abb61f2a24e41f2623b80156b41f35555537ba023500070175
402c0774076207560751073b0733072d0720071d071c071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b534201b0124b004b5442b0372b4bb807ff52b038
2b4bb008505b58b101018e59b0382bb00288b801005458b801ffb101018e
851bb0124358b90001012f858d1bb90001017c858d5959014bb0c063004b
6220b0f65323b8010a515ab0052342180016763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181d42b0964b5358b235
aaaa1d4259b0324b5358b235ffff1d42594bb04753205c58b90271026f45
44b90270026f45445958b9017a0271455258b90271017a4459594bb04753
205c58b9002202704544b9003c027045445958b901b30022455258b90022
01b34459594bb04c53205c58b9014900224544b1222245445958b901c201
49455258b9014901c24459594bb06753205c58b9002402714544b9005002
7145445958b9021e0024455258b90024021e4459594bb8020153205c58b9
010f00224544b1222245445958b90c00010f455258b9010f0c004459594b
b01c53205c58b125254544b12c2545445958b13725455258b12537445959
4bb0ab53205c58b125254544b1232545445958b901590025455258b90025
01594459594bb8010153205c58b125254544b1282545445958b902080025
455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc64634565234560234565602345
60b08b766818b080622020b164dc4565234520b003266062636820b00326
6165b0dc236544b064234420b161634565234520b003266062636820b003
266165b063236544b0612344b10063455458b163406544b2614061452361
4459b3a67f434b456523456023456560234560b089766818b080622020b1
437f4565234520b003266062636820b003266165b07f236544b043234420
b1a64b4565234520b003266062636820b003266165b04b236544b0a62344
b1004b455458b14b406544b2a640a645236144594b5242014b5058b10800
4259435c58b108004259b3020b0a124358601b2159421610703eb0124358
b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d41
2d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211b
ba01a80400000b2b59b0102342b0112342002b0018456944456944456944
45694473737374737373737475752b7373747475184569447373742b4bb0
21534bb046515a58b03cb03c45b040604459012b2b2b2b75752b5840365f
235f255f285fa5046f236f256f286fa5044f234f254f284fa5043f233f25
3f283fa5042f232f252f282fa5041f231f251f281fa50475757575757559
43584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf
22025f226f227f228f229f22af2206757559435c58b6403c9f22ef220375
592b2b017474747445447373747475754544734544737445447374757373
7373732b5840246009700980090310092009300940095009056f037f038f
03031f032f033f034f035f0305b8ffc0b2073a33b8ffc04046063a33900b
a00bb00bc00bd00b05b006c006d006e006f0060520063006400650066006
700680069006a006099006900702600b700b800b03100b200b300b400b50
0b051f070100757575737575752b2b757575751b40100706441f0b0a441f
0302441f0908441f2b2b2b2b592b752b435841220063032d00010003032d
0013032d0023032d0033032d0053032d000500c3032d00d3032d00e3032d
00f3032d00040083032d0093032d00a3032d00b3032d0004032d032d4518
694474747575592b4358b900180332b330353238b80332b361663238b803
32b3535a3238b80332b3454e3238b80332b33c413218b80332b23f330a41
0f0332000100ba033200ca033200da033200ea033200fa03320005033203
324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b
2b732b74012b002b2b017373737474732b2b00732b2b002b2b2b01737473
2b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500737300456944
0073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73
742b002b2b2b2b0000>
[16269 1473 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 6416 70 <00010046ffe4034a03af00210222b0852b58b2080401b102024354584020
021a060c10100255060c0f0f0255060c0d0d02550616250f090760217021
0221b8ffc0b513130255211db8ffd4b4131402551db8ffcab6121202551d
3103002fed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040
732a2d340023430d5d36170d5705021c135404530553065407581b581c07
6705760580008021b41bc520d020e000e50509370147015618551c5f2360
18601c7618721c8a128e1390119018a601a402af23b301c101c707c719e9
08e41cea20f4011806024a1257128b1f8b208023f02307112001bcffe000
20ffe0001fffe0b2001d00b8034640301021016021802102002110212021
5021602170219021a021b021c021d021e021f0210d21661ddf0f010fc716
2509071db8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f
0c020c2f100030004000600070009000b000c000e00009300040000200aa
731a831a02501a019f1a011ab8010c4012f0060100061006200630064006
0506432243b9029100182b4e10f472714ded5d7271fd715de47172ed003f
ed2b2b3feded7110f45d7172e412b10602435458400a531d631d731d0393
1d01005d7159393130383838013801715d005d017200722b2b435c58b400
1018391bb8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b
2b2b2b012b595901711bb70f0f092121030916b807eab46c0907031db808
1cb26c030b00183f2b3f2b12392f11392f30315901060623220235340033
321615140623222726262726232207061514163332373637034a25d8839c
e80101b487ae312c3b1e110b23233e643d51a189624e3734015cb5c30106
dfd8010e8f4d262f2615761f1e4a62a1a4fb432e7900>PBAAAA+CIDFont+F1 AddT42Char 
2 8878 76 <0002003c00000207058e000b0022026fb0852b58b10202435458b90024ff
c0401d0d0d0255120d080d0d02550d21181010025521180f0f0255211318
0309b8ffeeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8
ffceb610100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ff
e0b40f0f025518b8ffd6b5101002551820b803e240174f216f217f210321
226f00010060060106400f0f025506b8ffc0b71313025506220613002f3f
d62b2b5dcd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102b
c43130012b1bb10602435458400d20121010065521121010065506b8ffc0
b44b4b065506b8ffc0b44141065506b8ffc04019373706554006010006a0
060260060106000020212207130309b8fff6401c10100655090924230d02
101006550d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6
b40f0f065518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b11
12392f2bcd002f3fddcd3fcd5d71722b2b2b3130012b2b1b401990240160
2470249024a024f024052024502402402450240224b8ffc0b332323424b8
ffc0b3383a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a
3418291e134a220d291e124a2321271941201e21440c190c139006010639
0000220c0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b
0c0c0d190d2418402b3918b8ffc0401a363a349018015018016018701890
18a018f0180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72
003f3c3f3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d71
5d017259591bb900060831b74000002207111314b803e2b26c130a00183f
2b323f3f1aed303159013216151406232226353436131114161633152135
323636351134272626232207272501292a3b3b2a2a3c3b7e193141fe4343
2e1b09071e1a1c280e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c2424
1a3c550161952c20190f2470>PBAAAA+CIDFont+F1 AddT42Char 
2 9610 81 <0001000c000003f703af00330304b0852b58b10202435458401735401212
0255300c10100255310c101002550e080f1623b8ffea402e10100255231d
242908080d0d025508040f0f025508060c0c025508162412120255161a0d
0d0255160c1313025516b8fff4b40f0f025516b8ffdeb41010025516b8ff
ee40260c0c025516001d040f0f02551d080d0d02551d060c0c02551d2918
12120255290e1313025529b8ffeeb41010025529b8fff0b40f0f025529b8
fff6b40d0d025529b8fffa400a0c0c025529001c022430b803e240093140
0910025531320dbe03e2001003e2002203e2002503e24009240f2432071a
2c0207003fed3f2f2f10ededecec10dd2bed11123939012f2b2b2b2b2b2b
dd2b2b2bc02f2b2b2b2b2b2bcd2b2b2b10c410c42b10c410c431302b2b2b
1bb10602435458405e2f1610100655300c10100655311610100655001c02
24303132071a2c02070f24080c0d0d065508021010065508060f0f065508
16020d0d065516021010065516080f0f065516163534001d0c0d0d06551d
080f0f06551d02101006551d29b8fff0b40d0d065529b8fff0b410100655
29b8fff2b70f0f0655292935341112392f2b2b2bdd2b2b2bc01112392f2b
2b2bcd2b2b2b002f2f3fed3fddcd111239393130012b2b2b1b403a35402a
350835600d5d3630355035603570359035052d0401403560357035803590
35b03506b035d03502b0350160358035c035031d0816291e0fb8030f4011
2229291e244a2208291e0e4a231d291e23b8030e402e2331272a41301e31
441c00233233071a2c02072423230f0f0e0a17162407900801b008010f08
70089f08cf080408b802bd401b29331d242a1f2950296029702904802990
29b02903002910290229b8ffc04009141634296034a67f182b10f62b5d71
723cfd3c10fd5d71723cfd3c003f3c103c103c3fed3f3c113939f5edfc01
f52b2b2b2b3130437940121819030604251903171c01050618051a1c012b
01103c2b2b8181015d71015d71005d01722b2b59591bb532070f0a021ab8
080c40096c020722100d032425b803e2b46c0f0a240a00183f3f2b17323f
2b3f3f303159013633321617161511141716163315213533323637363511
34262322071114171616331521353332363511342626232207272533014b
a1924b6c20160e0b3142fe3b1340330a04414d77760b0e314bfe3b144631
0f1f1a1c270f01142b02edc24b563c7cfe79571f191c242427260f4f0177
7d7182fe1d5d161d1b242447640154a5481a0f247000>PBAAAA+CIDFont+F1 AddT42Char 
2 0 0 <0002011c0000051c050000030007006cb0852b58b10201bb02be00060007
02bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c31301bb10004b807d7b36c000107b807d7b16c0100182f2b2f
2b3031592111211125211121011c0400fc2003c0fc400500fb002004c000
>PBAAAA+CIDFont+F1 AddT42Char 
PBAAAA+CIDFont+F1 /CharStrings get begin
/c 70 def
/i 76 def
/n 81 def
end
PBAAAA+CIDFont+F1 /Encoding get
dup 99 /c put
dup 105 /i put
dup 110 /n put
pop
end
%ADOEndSubsetFont
/FRZWPI+CIDFont+F1 /PBAAAA+CIDFont+F1 findfont ct_VMDictPut
/FRZWPI+CIDFont+F1*1 
[99{/.notdef}rp /c 5{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]
FRZWPI+CIDFont+F1 nf
FRZWPI+CIDFont+F1*1 [12 0 0 -12.0002 0 0 ]msf
317.307 467.538 mo
(ncin)
[6 5.27982 3.35999 0 ]xsh
.72 lw
327.51 501.261 mo
327.51 487.101 li
@
324.27 487.941 mo
327.51 478.101 li
330.87 487.941 li
324.27 487.941 li
cp
ef
277.23 498.741 mo
377.91 498.741 li
377.91 518.781 li
277.23 518.781 li
cp
0 0 0 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (FRZWPJ+CIDFont+F2-GBK-EUC-H)
%%Title: (FRZWPJ+CIDFont+F2-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /FRZWPJ+CIDFont+F2-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 9 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
7573 <001C60D8A8C9B5EE31029615090294B8EC66045C3699F6BF458FA9B417
A00432B37A00241FB9AA9F92B208E55E01D8267A4849C9513C8A9522F1F054BA
7C2BC999659D0D0A7C216E794D79E1FFA6642ADB39A48D3ED92BD9AB05A890E3
88639E0C0F677382B20A6F6AB6A211C5F14A751056632029E9235AAA9FA1A749
7A81648C56023FEDD468D42E19B2A78B1FAB72A9947BFAFA30B67080067C4A1A
0F866DAE55C5BC5B88B38C08B9D562251FBD5D55CACEBF550BCA0E025F30A94B
FC9A84EFC3FB71876AFB42EB2400403FE787215AAC8DFA32E2D1580C52D37CFC
1CDADF305ACFE7D92F6A2B560F4D4882> |
14362 <001C60D8A8C9B5EE310352EEAECCBCEC238097454295F2FEE2D936ACA
940AB27A966888430F44792681681307142CC1A784207266023FFE850DEACB24
45120ADD0AE9428CB2108CB3ADEADC16422F16719E3EC8D42FEA914931BD38D2
FC5A842537DBC338E052F2A2A7176237622310A5C15754BE7324095E46447CA0
9635ECB09AAA67607FC5D1DE90364F3> |
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01AE29E2F8D6006DEBE28C3E3167B8B0B15C9979E8BC6F967EAE4108
594879B55E7B2B0C1613F0727FC5D41CF3A18A5C9AF47127977CC09BADEA25A0
5207E3A29DB2A627E71F0DE62BA33B64393D52499CD3D050DB6353DA7F8BAAC4
50A2F546392BEFE2730B572B57EA1E5C6F260C4358B586673BB20F89AC3C5FB2
7145> |
4722 <001C60D8A8C9B5EE310DF4479E8CCE34655876EEDBEC477294991D20B3
1B7B0DC0120DB59FCF27A018392223886704D2CFA66772253458C53B1B1529F5
F2FB0089F587D0B2943405AE8BF5AEE25D8A37B9D4FD1EC8B5129F40867CCD15
ACD1C1F0FEAEA499C7E4499F5AB7269140028366D314596E71840595C4AC09DA
B32602757ADA07FE994B5E75A9B149C3A8D844A6D3D702ED129E7C4565E73361
04C2D26E3893AF49F473CCA093C13CE0F3C062BDD0002676C905A79858FD72E5
7B317D5CE3086038E909E126A41CA4B4401980E371A8D88601A3A766819F1D5D
DF1496D51AB805B6692C03EEB6433345D67F7C71F94C2253D20274C41DEFA7C7
B5F5EBDCB6FB80ED410CE61CE04CA7F813F28C1AC22C> |
11444 <001C60D8A8C9B5EE31023EA36A9FB9EE2C219ABE16AF6E98A7F367D70
9BAB068D02B24D63340F410693C034CF5BBBECA200710170958DB600C4C999E1
05001B2BFA4B7A0F55B3CFDCB20B02C5CDEDD0BD3D4822ACB3C3A6B0A316685D
8CF51742A5A3B0B5BB01743954FFEA07DB62AA948E8DCB0F399F3F0050E67826
2C930A2EEFFA173A3D4063CF42CBD1C9336168A104098AE2979E5954AA83057D
8E7C62401CC0D869A5A63418A5F009EF25398270F31F2C3873A5BC2C86AE252C
75C00D85F58E879895BE629E8544187805AE2CA1D3CD18A971146FBE5CDB0E2B
501F80384737F37603FAC267E78D12AD3DC7638CE9AFD4B6136A9E3C02C60362
BCBDA6F8CAD317A3180BDE6BEB563209B4F7E6CBFB4F8> |
6357 <001C60D8A8C9B5EE3102F64252452FC55563FFA4F4DA6725452670D236
4C2B01D86341E5EE3F719B80B5D726EE21049D145EA5FDBC825B0F0002E12958
8C1A225E764F5BE940FDF885F634FBC64DB16738EB74E1E82F1DF00B007EF28A
F67FCCF1AFF58378B9E789B985F260C671D4CAB48ACB6AD80DFA41D3A17EA284
07C675BF3A1E93E546721A956A77CCC0849B3844A9EDC4E1F52082F5DE7D54FE
121DC389FDD09F5ECD75B471C5E9F9E0DB0F35C83E84569D8BE1D308B9287349
1F8A7101B068DE46862EE7F2F708F7785F2E15FC8DDBE1D0ABCD802DD17630FD
D1BBC1844D5E83B5B56530BACBCDE58FF6E7D43102FFD2399881353E8AB84847
1A4EC3F0161808A404641034D34447250F4E6F70EDD690708F69C521BA5148CD
60F82EE11F4800353DF09538315E56D486A07F946E8F6CD5C0C05DCA5CBCAB8C
D4> |
7095 <001C60D8A8C9B5EE310273E1CE3144FE5C73A2D8FC17E6C9B75782A1BD
4CEB9E92958A41B8DCF1715D833C9A6D1AFE5AAD478F2412F08C30DE5A3D7D62
BFAC23E476D4AC9F53912EED6C659B409FDF75E22D818A4EEED29B6DBDBEC947
88889DD0693A60A5A54E8521E42AE88CF06AED582E68A3346AC1D31F96A0DD43
80CD7B90A4EEA31A7AC30E2F5897D0F23338674417525B863ED129D68BA139B8
F8A8F07136A9E3B767C074253492A772B81B44BCD24530> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H /Identity-H 0 [/FRZWPJ+CIDFont+F2-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
285.639 512.422 mo
(\035\2258\032\000,\0003\022r,\264\030\325\033\267)sh
292.11 397.341 mo
327.51 376.101 li
363.03 397.341 li
327.51 418.581 li
292.11 397.341 li
cp
0 0 0 0 cmyk
ef
.24 lw
292.11 397.341 mo
327.51 376.101 li
363.03 397.341 li
327.51 418.581 li
292.11 397.341 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 3 GetGlyphDirectory
55 <001C60D8A8C9B7A73DB9D5181D8B2E9B717FF670137DD5C74B01C45437E1
9CDD270110C87A6C8B51852CD7A5F8C89E9502C8B78539C3E37CD4EAF21FA206
78904092A16ACC99DA5D861280ABD1338C7C4CC5B2952ABA760CA055734C633F
4ADB41979DD18C1944E40D420356879C7F93510D96BA98EBD63086E2DD58B871
FCD2274E17> |
38 <001C60D8A8C9B7A73DB6A70B0D1171EB2B05716A57A36051BCA4F091B1BF
0612F84D61B7DDA7F028930F1B6F2F65D4AF025FB356DB3FD0FC479702D6A6CF
2BC6311F323FDF5960098F810067E24461B5E628FAC38FC6B3F649788906E6CF
CA2B4C8EFA16DAEBEEF141C78F612FBA19BF360D1C1F97D12E3FA36ABF6ED73D
718360F1D64BA33C9F6A6A1DD16EF3EF2010718698CC942A333C> |
731 <001C60D8A8C9B5EE31025DA3FC8B05BF942C03494149153CD44A8E52E14
10E49657F32929AE85862C4E0C928A28A07E0BE6DE996ACF0FEABDBD89E6F66C
A4D802B87C0F167E35B545D0982DD7F464792179917B8E4C23EBA8BAF872D872
5E7406A3829919DC6C3F42DE113D98DB346B24EA07985D66809F9A932BC053FC
DC9D812DF03BD0E295CA7E8FEE94F23675AFCE5E110E7147EE1CB85798BEEB37
D3429E29698CF847BAB017384C6521249EE43275B0191A780D5249F8CDDDFBF8
61C37DD2D0C9A1D3C9CCEC11EE39B298819D4D2AC04040FD52911D7A0> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
300.639 400.951 mo
(\0007\000&\0003\030\325\033\267\002\333)sh
.72 lw
327.51 449.781 mo
327.51 427.581 li
@
324.27 428.421 mo
327.51 418.581 li
330.87 428.421 li
324.27 428.421 li
cp
ef
363.03 397.341 mo
480.63 397.341 li
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 1 GetGlyphDirectory
2646 <001C60D8A8C9B5EE3102F2793977850BF340D4432B7B08E7E51BF94C77
6EAFC195064369B734FB96DD8BE7968E5A0F8D3FB78E2C93E5D8481CE9B1E45A
0AB573743F0A83AD3B5E8C0639E281BDD298E017FD67078F806A7C0D220631FA
F9F0367B0E0A9929E9F472B334DCE8A810635C13730BD27011BA55100C896824
9003B3EFEDA533196B5C477EB208585954104F9A67AFF598A509943599660777
FE11BECC20515FBBCC7DAE599A2F940C221BEA8E0FAA36C6395816DBA07D7191
CE8EF8692320EB6C49DE4810C1638329AB25D8501DA91199F7E2CB72F5663A94
35> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
383.655 389.654 mo
(\012V)sh
372.03 17.0612 mo
480.63 17.0612 li
480.63 397.341 li
@
372.75 20.3012 mo
363.03 17.0612 li
372.75 13.8212 li
372.75 20.3012 li
cp
ef
292.11 329.301 mo
327.51 308.061 li
363.03 329.301 li
327.51 350.541 li
292.11 329.301 li
cp
0 0 0 0 cmyk
ef
.24 lw
292.11 329.301 mo
327.51 308.061 li
363.03 329.301 li
327.51 350.541 li
292.11 329.301 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 1 GetGlyphDirectory
49 <001C60D8A8C9B7A73DB93195A86F52FD7D9C2F46D3FA2E27C4D24800770C
533F8FDB0AA36F3C1E93160F91A509B1A9F5614C6ECB93756B7DF7665152CAA4
54E77552C6E740ED8DAD365EDF86BD0CE9BFA648F3C363D015EAD09D758720A8
1C1FC14BA91B4AD13685AB4A696A6F97AE0FE70C8BCB5F459F6BCEDD6F128470
3E3B632320982FEA4989C9B8> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
303.639 332.887 mo
(\0001\000&\030\325\033\267\002\333)sh
.72 lw
327.51 376.101 mo
327.51 359.541 li
@
324.27 360.381 mo
327.51 350.541 li
330.87 360.381 li
324.27 360.381 li
cp
ef
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 1 GetGlyphDirectory
7263 <001C60D8A8C9B5EE3103CB5016B82D1F60F99CDBF97F22B053F818C27A
585CBC7A257809D704250A39BDFD15D43F9C2B66A146151CA820A53B626AD5EC
F5CE2EBAAD1EE26CA1CD92E525DBAA7E84A012FA2A273C4CA59086D51D1818C0
B36EB7A9F9F84EF82180CC1886F91714DBD0A447A1C866B4D7F8461A6DA8E1CA
86F234D99053810572D24A7B3F489FFB72787C35FBD0A4CA78556F95967A45CC
B50DCCE20F938BD4A47A8D397BAAC2327536E939E65EB76BC363F2A761EF1E1C
371F2AA45410B796FB2A217F23D7F0D923F2E00D14A324F3B4E9F0ADF63FEB62
F1819649E819B794C3FA7C05A2> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
309.171 369.872 mo
(\034_)sh
208.47 282.741 mo
243.99 261.501 li
279.39 282.741 li
243.99 303.981 li
208.47 282.741 li
cp
0 0 0 0 cmyk
ef
.24 lw
208.47 282.741 mo
243.99 261.501 li
279.39 282.741 li
243.99 303.981 li
208.47 282.741 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 4 GetGlyphDirectory
54 <001C60D8A8C9B7A73DB9D42B5CFCEC7F01981AFE517801773FF8AAF15E7C
4CB81154613C5FD1D562CDDE0EE4B2DAF879E403D864479CE189144ADF8E91EE
92B02765232E00139453EA1282D56AFE97EA9944DCEFDCA33912CFC91F718CF3
8695EB5A489DB0F386655B77C93690B3CBA172BCF76AEA68C342A5AB080E96A1
B7F4FF7B91F4DC4899DAAB0BFA5518431FA6DD33F2B7B3F167C016858873F122
28ADBBB7B15314E534A36AD4CB224A2D0B1287F28FF844C6570FD53B740AFC97
655868483C6FED558A5D1250F9D6D1D2E8961E60B1743758E5F657FB6C585A09
A0464FA3> |
60 <001C60D8A8C9B7A73DB9BF1AB9BE6D77580632FC1435324A7FA99DF4FC36
C1F9160E258E569DD405B6E586E6FB0610C60B571823C5A4FEF8387F3B71FC40
DF5E6D778CF8C75EF91056BA6FBC695A34CA07D7DCB4D855464BBEC932A83618
49E7DA4504D518379204D481ABC90B1A5474045712ACA5B091513549BB103F23
49C134C601F440A239869DEFFB07114F465BE607E2DC93957DA67038A3> |
13726 <001C60D8A8C9B5EE310236118134B984CCF7BA63AAC2756775A28F4C5
3B0D8D2139CF0533ECEC22B064446B6F833199DDA9110EC6AE20B59DDD51E62D
9137C0280E34ACA5CC1D1646DD23DF7BE4D1340FA819BDDF4E3D992F24A32E50
FA77D7D64D763C3E352FB89BB61C8CD61BBCD6CB9A15FFB4B0C4781649535058
98D8E9110A9E2E4E6073CE867CF1BC15E7204EBA82D7A3CAC16EFF01EE13EB01
07AF387B796B99E668F5147664B64C8404BDDB71A992231AB04E7EA33EC17684
F9545CF875D9227BFAD957B10EDAE169081F17F783E9C3D72E96B0E842243197
6A37D3A822E9873D4E7151C3EED32CBC9046712182FBCD14BCD6748BE127248C
67D51FCE55E57F6A2C1BAFBF88726281A0DBB23CA> |
1405 <001C60D8A8C9B5EE310D9DD4E182C5BA4235DC30CC47DE7D2F8A1664C1
4B38D725273C4E490357C6E57752721FA05B60A4A97147265236A06B398518DF
0172C14C7EF73E6C4E4783155D0902678A0B532A482F4A2F49C3A58E67E86651
491A019192E2D62E3DD81FED26A295EDD4FD18C1C0D50DA5AD37E9442E1DA2D3
8DE0338E1712B365835BF3B6249BA7214BE0960B0737B4F8B5CF8438FE02FCC7
118E4B4FFC81278D9C08577F10211BC67C85CC1D91DE22754032A8DB1DD7372F
9B904D46E7AAE6746320EF41613C6D272FD4EE0501E71DB46837A4167777584D
6F909ED5D4D7C0A7AEEAEACC2956DA6CD2EF735E100279C3D1E53E5982B810B0
A207B09BEE6EFEF6AEBC56> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
216.967 286.48 mo
(\0006\000<\00015\236\005}\002\333)sh
292.11 329.301 mo
243.99 329.301 li
243.99 308.901 li
@
241.23 309.501 mo
243.99 303.981 li
246.75 309.501 li
241.23 309.501 li
cp
ef
208.47 215.901 mo
243.99 194.661 li
279.39 215.901 li
243.99 237.141 li
208.47 215.901 li
cp
0 0 0 0 cmyk
ef
208.47 215.901 mo
243.99 194.661 li
279.39 215.901 li
243.99 237.141 li
208.47 215.901 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 2 GetGlyphDirectory
36 <001C60D8A8C9B7A73DB9D2D67B1D3A224FA5A13E5765A8D80B57077B7C0D
5EE80C38C0844F83D9CA4CA31034FE59C812CD484095B8A40CCCF60348FE6542
AEECC5DF128F41BF95D8C6533892661C89C22DE13F3D89E1913522615585C3AB
6D875343A34A7AB5ED5C2D9FD86132CBE3128CF0C0176E3F3851618B1DF70F4C
0BB9F3BEFB258F9A88910575AC54> |
46 <001C60D8A8C9B7A73DB6CE843A337D350A64774AB3E00B5041C43D36A9D1
3AC00B44CAF1B65F7539F78F593096497670C3B040BE57E10D870A713D45EADA
3980548903C72D6CF4B54A0481E5FC748C1EB371806E80D021A1131A5080CC58
6764A058C27F69362BAE2B176CC4479CB7281A463EFD154DBDDC68687A0F7FC8
3B4FF4A6E76E04E42B3FBE5FDD60C283FD47A3BC7122055DA52192D98BFC68D4
973CD440500E85EA51BDFDD2190B699680B68C8813F50B02FBD2DD7867CD1409
5D034AE36D2D0307392442> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
216.967 219.635 mo
(\000$\000&\000.5\236\005}\002\333)sh
.72 lw
243.99 261.501 mo
243.99 246.141 li
@
240.63 246.981 mo
243.99 237.141 li
247.23 246.981 li
240.63 246.981 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
252.171 190.712 mo
(\034_)sh
225.499 252.964 mo
(\034_)sh
185.561 208.338 mo
(\012V)sh
261.967 320.184 mo
(\012V)sh
208.47 126.621 mo
279.39 126.621 li
279.39 174.861 li
208.47 174.861 li
cp
0 0 0 0 cmyk
f
.24 lw
208.47 174.861 mo
279.39 174.861 li
279.39 126.621 li
208.47 126.621 li
208.47 174.861 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 10 GetGlyphDirectory
2125 <001C60D8A8C9B5EE31024001085D3F8FACA0323998602B4B8E9BEA635A
626339136B3D7C86545B4620B1F994B323D1C8D279C6D6B5AB5E8CC78574DFA1
5FD19298937C337113CFEAD6FB9ECFE682F8E48BAD3D68CF2E18044EA5FC8724
911E682AE91CAFEA0890E99B2435BFBE79CE1EBB845D80EE23C4CC87129CED72
4441C3400D64E493F4D90B33449A3296B9661580274BD9931472C71D972B034B
D17D0D32C276740E0750E61930FEBDFFEEAF9F7A799472E9FDE0B0A97E02454E
4B3EAD8033762761CDD7BB9F609D447B1D39109CAE77395BCAD9D2DB455EB54A
C57C15B141DAA1C9ECF353B431305498D937EB55F9077BF7E253B087DD7AC6E8
BBE2B067F33458B83CB35C1CBE4D36CE19937221117B924DA44E7F56C9727B6F
28CAB51A960A7A4D7D12CB34375EAA376FEFBDC84D7E5DDEC90FE73604C2EFA9
A627A409FFE8FA157BD13E> |
4091 <001C60D8A8C9B5EE310337A65A5C610450C7A7B9E7423A4A6766841406
7CD2833C419647E421CDC34BEFA9A1C2F875A5110B2364A1B1ED344D700F54B3
29A3B0E5422D8013C73BC1B587D695C79774475D62D4B1377897ABA576AC218E
30B1C689B7878CC566489484C88502CDF894C48AFDA243A8040F4969C938E75D
CEC1CE1D3CA8818C88725638BC1969354669E384402CCCD6244BB8CEF0218068
571119F5B2B708EB37390E6FB303C3D73091B97E95F23F67C200FC3AD25952EF
858E6485A7CC2996925701E74234D3DCE03948807FDCA22504951EE5157A58A2
13176B166ACBDB1EBF08B0CA105A3FADFFF196D54689F4A378E9F6FCA0B10F8C
53C16ACE5EFE744F5CBB7BCE4CA5B86E641B21A8657F9CEFE2C757532BA2A33B
F4DD6FA29FCCF8ECF5D881D46804B4CE3AED489EE51F51CEE7746009267C8499
4D90DADC89973E699172664DB8478CF9D4566B59DE7C3E6B7835D5AC118A316A
6472519977> |
2374 <001C60D8A8C9B5EE310DA69676F676D079D4C6CB2A0CF3DBD475451DDC
6D7E620CA2418C8326D4B95370DB6A5EDA53E839183A9F64A852F611C5B64C93
89D8E0FF652900A37DED655AD757D5810FCAF59F036A4371C60E1480F9C9121A
40B41D08C8C51C296C1A78C1771513EFAA29D1D4E28B84774516FA161D823D6E
D1806FFD09B8ABE4B179A20D69E55D5770925D5757B4F3643A9742CB072DE62B
258357AC346BE93C09021C9A9006AD4A65F0E6A5474D424FB75DB809ED6D7FFA
B7E8806F540B439B5830D78FA032466A> |
6615 <001C60D8A8C9B5EE31027CAD67CEC802B12240EA84FE047966011276DD
CECE77ED752D5708548F686280DED73ED022750643227BDEBDA9426C2D198CC3
3FEFD0DEC907091A3CA592C8744EC95318F95183A052EABAB14793C64614301F
7A302A2F81C050DF6D8C54C12A3D56302FD2BA6953AA4A3077100BEB52E18E39
028946FBA34F9DA73F8827BAD57EA7727F3DF87F63A659504300750F3A1E6797
D9025DA8DBAFDB79EADD94031802EB1C1CDEBBA0B5754116FDD2AC18DF1D3EA9
678EC8F16C527C436626C2F4B323C7957256B3C39579BF9EB39B81EE9B55E371
57C4E2EA452E615E4A9D65165D7D805D2704F0646CB9135EFBF13F19B377C522
0B9BFB7E272A616F8493EBC11D951741DE6142F3970667CE83DF592FC43AFF0A
77E87C647AFDACBE1926D4C00419DA926DEB8F775E1FC59BE0E64C3EC2176435
937C4E577E4EFCA23A2C429D7C25D48ADBBD3E8FB4727B20D6F1E2EF4DFEE9AB
777D27FFEFABCDCC3BA903974ABE25C4AC69B2834129DBEA80ECFA4C83BC7BE7
F53C9A> |
2150 <001C60D8A8C9B5EE3103DB78D3EA56D6230973C8E7FDF7C51DDA179713
23AB37F3939429E9D68FD39F543416574B569FD252836122D0D254958302B3EF
30FF87DD8C03DFAC3666F2D707BCEDCFADD25F8E5AEBB4955A228C9F31951123
CB2AD5AB1BE101072808E82CCAB088597C0FA6BE54F5EB84896EBCA537E67185
5A9E15D348CBD51F3043CDCCBCFA16FE36787B352E008A498D0E8F8ED985C664
09F0C35CC934D3285CFEC6213E2BF23024E08B0CECBEAF19D7349036DE96E769
1C51D2E43D8892A173DA0905789EC841070870E1993465A2E65787204FFFF8B4
5EF5849FEFD3BEED88389453244BBD2A525528BD65FB585BDA3701C2B5DF69B1
C0EA3C94AB4B59C713FF8E3CD440AF84B240EA3D22D15DABA1DCF5E9675DBCF8
B2BA300ACF90703AC1B9617E96D4F9A0B32EBFF20D8294C739> |
3463 <001C60D8A8C9B5EE31036D2478CBD6273F3C01A077B79B04CFCE186016
E6AE5C0B4D7233B415FC23E4A90A8C8BA54F3B6F5F13512D8FAE7D93FAA2D95D
246BF6F07C04D1150EA08583929BC089D5F8D7B627786CC8ABC2C0CFE6A3A599
01037040627E1E12715D9BC9E43834EFAA956A13A116B6346DF9081C00B15020
8DD292787E9121EDB236DB0DD118488DF62B9B9884B40BAED9DA36A7E73BC0C4
71C75B917BCE1F6A9BD062E7781A2B08E79DF872893582188ADC5FC1C202E50F
E54BFDDA05341CD4121680966CA14D2276739D8B728FAAD7062E82DCACC7EC60
9C69CE2FF9B676FB62C7BB2ABA38D60EE15B1314A1C355BECA8906DE28657E2F
DBF44B072EFA111FBB468526> |
11560 <001C60D8A8C9B5EE31032F29D7DC62833D790A03F28CFFDF93794EE17
C7DA0A86CEABED7B3DD7E9E3DC692DA5DFFA32E6586CAFB7718AC22E85F6BD4F
49A78CE71DE1B57EBD10F2BCC8ECACAD5F8AD4858B208B68A46D0EB406F93B40
9CF2AFDC6E4C64F515D4A0B6FA23E1A9A669F575CE268D185D78589AF79076B4
DB80EFC9ED7DA7CDCD84B8FE4ACED525677072143C68C7BC578ABA3D6C98197E
D6FD0F4FB4E691F1A9823A8A08E32A6C6BC36F259F32DA99A22CD57CAA835D3C
46E5A25C321E26931691FAD5600A14C39D3D0A6520573FEAAB91D66A94C80924
67810E0BADDBF5E3722863C078D9E5329484AC36EEB> |
1955 <001C60D8A8C9B5EE31023611DBA6E078CF0C168379908F58F7E3EE21F9
132EBD0A338794E3C0D499AC01CD44D39C97465EDDE55F5074DBD0A90A1A0968
9D55BA7FDBDB8A7C071FEE906BB71FEC1CF3B7A5970E0DD997DBF141A1309F48
6079FD4180240130465DC913EADF9F838814B3F767CB91A4E7B26A2FF6A61FB8
1AA4BE762D6D680F5B56A0460E4A4BACBB4FA40705690B1AA567C6390B597C40
289F8827CEB057418F7131ECD4A03855442C22AAA20D4856322B6A499D588E6A
7E4F1B7441ABF1D110A684179F200CBEA97EDB4D9113413624ED7E62442C1C0F
39169ED996E100CFF62DD390> |
1553 <001C60D8A8C9B5EE3102DFD78FFE9775FBCAE29132675021C62E1A9FA9
8B60F442469D5F61A4D3B024EA1B283285BD812D93F75BB6F7371F4AFF5C06F4
90880B190493AA0102FB13E7633EC629F6D7E122C13CB4D295B72FA63445CEC3
8756AD4B22E25F26F4B15A844E7DC0056624F389F5F9BE798D80342AE8CFE1DC
D2A97B8A3858870DD5A93D70EA62C5AB5FCF74B4D80B918F1C65619916D4D1F4
018F6F5BE87745DE290D72132722FB58FCD01096011498A4A8C27A4013F061D6
CE8FBCCE675A46DF6BC31A1A8E7D05127E407A0D87375B50FA8A5033C6329670
A12CA7A47BE8256814D4872B065501C6FEDC3B238D991E287959770E9698C470
CA> |
5791 <001C60D8A8C9B5EE31021BDA9F32232A56FBB8D2B5B59029C4C24FB1E4
39D8A81E50524473E9358D320DE09D434C205C5BA156B314F7A77B064470B516
5D64BF41065A8E8A1F4A0B9398776ED045A17A44D7D85A4C3DBD7450C44017F4
749F0E295E8EBA9C356C1EA50004D4D22B3F2587721818E6E3DA733E712D87B2
F9F61396F269EFB4A33E99FC354A00DADC1271C25B72FBD4CFB0C5EA7AB294AD
D65100335C3F0BCA22A08B20115D5BAFF7B023DFA0FA5CABF84D240D5FA31ABD
8B9BD90D1CC6941F4C810C38DDF3A3FB00D1A873BEA49144974A962187C808C0
A9BD192E10CCEEC3266C9FF4881C94E0CF0ABAF8108266E402A90568F7FE8EF3
BFA197A28919E87462A705C9DF5542FDF2124BFA9CB9856890755EE8663D299D
422734BF37E896486DBF63C301E16416B2A4E13AB2D89221FCD61156202D790C
F479F3DD15F3F86215918E33909F373B3C711C0BA1EB676AAD6314C8C07CA0AF
8ACBD9944820D3A795009AF12453AA9D21212330> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
213.967 139.946 mo
(\010M\017\373\011F\0001\000&\022r)sh
213.967 154.337 mo
(\031\327\010f\015\207-\(\007\243)sh
231.968 168.728 mo
(\006\021\026\237)
[12 0 ]xsh
.72 lw
243.99 194.661 mo
243.99 183.861 li
@
240.63 184.581 mo
243.99 174.861 li
247.23 184.581 li
240.63 184.581 li
cp
ef
103.59 184.701 mo
174.51 184.701 li
174.51 247.101 li
103.59 247.101 li
cp
0 0 0 0 cmyk
f
.24 lw
103.59 247.101 mo
174.51 247.101 li
174.51 184.701 li
103.59 184.701 li
103.59 247.101 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 12 GetGlyphDirectory
5418 <001C60D8A8C9B5EE31023ADA669FB37D1DD638F510AE5E2A6FB82B26A8
5950375293140E99F14B506C08C4499ABDD89E4E7C717A9F0B29FC6CAB25960C
08C3A43B87ABCAD5F72535FF31AB2CB1249C0EC0438E1AADBCE44702455DF8CF
8BD5B80847ABC46D88DC181EA5F21C6CE298575CB2549D2B1EAD70DC8853928E
2E8F2006B7D116BEDC88515004AF4FF4D76BD7D65C804CBC5ACCF2B40F74C54E
9B52C57ECC562D91A9F3046F1271FCF5FDB75113F4F1FB22C7435BF8D24F93BA
743E804FB7BBE6BF291FE15ED48BB1FE2DBA93D6F540FB258A4A215568524FB0
9BF905FED9CB30CC88E4DA985D9E122840C42CEA088E3854FA52028A270C6D9B
57EF4A06596CA859F32A0228C210CE885CF6784422FDA76032EA74BDF9849324
B4A8C6E884F5A4A2E685142AC478B0B498ECC929F33204A5178A6AF78BCDD710
C629D9CFF91D13BC62B75E32642CD72C0E75D0E3182C0E4F2C31E6D5DC5DC817
CCDF7BBE16FBBEAA68D2B508FAA81632976BE0> |
12539 <001C60D8A8C9B5EE310213563A27429249DD322E88500D59A43E70F69
6D9813C13DE31DD6E0EF9EE28CE1B318476563E517DA8DD0FAD92CE6C4ADF409
2DA08E862616431CF5F6D0955A97D8D898E5C9C3B690647C991C6903895C3205
4432D1A62551B956D51320A9AC44284B182248A9B4F61705A90B66070FF0CF4E
7BBE615EA7A0A4BB81A796E80B96DB9D3BC89DDF78E48F14CD9056F0B143FA8C
2DB547E8960957A78D758CEF4A6914D311CEE433ECA589AAD71ABD9CBA3CEA3B
3DDCC> |
712 <001C60D8A8C9B5EE310D16C9BDDE67CCF2E7F7F1335373641ADDC8E48C4
BD3315F1731506CF5A4DDDF48AFBFF21A2F093311B104EB9ED655AB55377118A
205E08BD91D637D4E86F85986ABE22223468E767986F984E65AFAAB61557FF77
75E69CE20D37AC884E85CCF331105C5C2FAF6A8> |
1566 <001C60D8A8C9B5EE310DC296DC76FB92EDE99414FD5D8F7762600DFD2E
46A474928E4FADBDF03DED65E0DCF96742EA0014D2262DFC257286BA3FCC24EA
BC6AE23DC1A3DAB5E55DBC598D5133C2C44AC0C27B2865B6EB010763E02341A9
D0DF43F09B0252F914C99A844BED01B30AD82F56C5BAE3B29C78239495D46394
49A4D4EEBD00FDBDE5DE19579E285ABEF2A990A33D5DDDE9D2E028CC8828B89B
9C243241EFDF344DE3B187973551E333CE50658F5171F6AEE51958112EB6B0AA
EFC524F14EF525799C1024562225D757BBA0C21F7CCCD7E56FE1C300BD016C17
AFDA4E8B904869B2492B77720865A213466CA980CE962066F075A1D2EFB9E317
62EDA850883E46A1F77AC3B60F753DCB9DDE2B47511358EE82E4AF737C6AD09B
6E9F7BDD8BDB0818990E9F1DD3B9ED6B4E0CB809B04A482074EF6AF66D31D322
11493B25B31E82BFDEFAEE5C42BB0028BA1DE698C30B487690A2BA7EBD11267C
FF9E2E4FD4EC86F621735CFAED83C926257D> |
7017 <001C60D8A8C9B5EE310254E0CC86CCE62E1002EF0D034FA4D5D667FC63
B1C342EC60F39E09D50CB8F91DBF593369B7D025F7C0065A5F4E05A4218C3DB7
A37C4FB65CB9C8DC36FD75D668D1312F0089DFB4D5FA6949AA39FB02376C8608
F71465D525AAF34EB9B084AE7D5B16BD7B196C98FD2B32C5E00604F8074903C8
419FE9B54ED30017E92368248FDB73B4BA130E6874F1B1722F4DC1AEBA964901
FAA19C656EFEBC0BFF10C13B8416778AA289A879656F6E0F225BE89C7890168A
958BA3444A6D2D4CF1A9838E7A3AE20BB7787B799233F36C7E67AAEDA4D0DD8A
D4AB7D8BB11BBF5D51B0F71A16C3AA96> |
17934 <001C60D8A8C9B5EE310DFF66643629B45D90D0254388B977806EE3672
C1654E23B86AE0A870E112ED6182F8DC228B911C66FCEB0644C208B6747F89FA
C5B961A3DD499735C333B06E23D3B81E07A0727A6B13910FA87D6924B5BB3156
B5B2636FEA661228049661E254FE8107FEE00F237953E7E0CAF6D97D270142A0
CC90247626183F1A11349F721EFBE279E95B32CF2873DBDB68D91DAD924E69E7
E4831FB74CB99605B59023632A433A737C9F41AA2934098D05CB05AB4DAD134F
0B41F81B0E3C4EFAC1C28522F2F6E3454F297E7CD6896E98988B127C3A3BC1CB
473042DA6359DF4AFED7E101D9A5CC675A2960A20C4287007C37CCDFF5D4A4A1
635E503C2AA70F52F5D34984758C714AFB22EE1F5B648F2B2B55FD83056FC44B
11D3B6882F9D17B8659AD8C190F9706F48B14E6314D5916839C08B66D8414623
10DF2EF87E4E5F351FCA3CC6EDCB3C795> |
6613 <001C60D8A8C9B5EE31020F8CAF3CE6B16995FF84ED8E53CF9EF4BFA580
AF9E2759501B9984095640B9C8217DD6995E66ED5D62891FBFE30D086DFF0E9D
1834D16C070817EAC4624156578458F6C1AD21C7DA8F21C7BF7143D37FE48837
92E352C2596EF2367FFB049B9ACA329899DA34EBF06C400D2FE9A592E413962B
ECEEE8E793C3FB45340835AC8BE77D08B2B92DB9FDA6BAE507712273FB8ED491
BEF8944704C4EB45F4D46C854A689D90AD1ADA2DE279F1083A00BD9688E5445E
925AE5A6B74FF8E4151653AE6B04977AD8D732BCED601480D125ABA04009F78D
C2831EFBF5041392D2E67A142E6EDAD20819DDC2000D22BA42A7945BCDC81FB7
9AAACE4CE4D82FDB73047C2188629C3668684361CB56D77D03A1E2E2D02D7CED
2F269F3D39654F7B925DDBB7D37ABD52BE5FECD5A680C8223E54A37D0368471D
DD6A6BFBA370FD76695D9CB2B89E62095A7239A18B9FBF643F6DAD20FD63EC11
0022895C6C11A57B19B5354E5267FF7FC36D117037E882884517E40E85004287
6456F826159047805D7FF202CC626CE9AA8ABEEF74CED354B73B7AE997BC4BA4
737FA77B3439554BFC80C5E0A2BF9FE4C403D6D72CF2CEBBF679C65BE9EA042A
F783455FC6A9062ED6A6731C25D9568947105B17DD233B91> |
10470 <001C60D8A8C9B5EE3102FB3B150205D7B07BAC7465AA8CC9D8F612734
6F99268989C36293E2A158914BA2085944CED83EA673C8DA787469A913183E85
DAAD720ADC00C569EBBBBED086DE5F5308007242A2CF87C2747F55C27F643BC2
B0DAE4C1D5E0B46D17DC1265B8A617B4C6197F8094B423DD86DD7DCFC24E4695
6E8A04332B0B0C03817AD6A6F88F756F3E0A65ADCEA32646169AB8CF931AD4FC
4A1D91CDBA65E64C6F63979D7F08878FBE825C9B83A1D6B8264849D2C8CF713F
3F66BA70745DA2F914A69B771023E05444E24C0757AB1E789E0B03611315D2F6
71284EDBEDFEA9649BECA74483D7B137779F42406DA3C88D9A61065EB68C5C65
37CE316CF90D620E600E3816581A677> |
5681 <001C60D8A8C9B5EE310273E177E80597ED18B98C1A2546D2320D18DB50
53EFC27D64667CD82C0E8664625D0450FE93E88C662454548B54C465BDD31B5C
D5CA488EE12CC9A42A00FBEA24562B5F2B4A8520BBF3A58200C0054612E5434C
7BA5888D8916F56B06B5398A5AA18BB87A3821A82EF12A19DF44CC1F7EE44740
2F9AFA8D6A65852AFCC9ED4C3C9C89B911F0DF4F343835791967DAC4B7E3C70A
F3ABB806ED1AF5874653BC75132DF2FDAEC8F13BC61B26DB66979C5392DC01E9
ABA34F57E046758BB779A30BD2DAC4FDD1A6FF793EEB7A9999F7BE3651F4CE61
F36B5D4B7BE15F0A570CC30DFC527A3F5C484FBDD69DA1FE008D214388756AA3
2AB7B92BC01BEBB691FA8D9EDD5ADE37CEE88C5B187EADD424C770FDCA7CCCC0
043ED18099238A66B8D86167730AF3D0C351F671DA684115904918B54895B19E
BC82B76F49E97A9239B7A0D21072EE07FBD8A74C52BFF827922B1FF81598B1CB
8590CD0EF078CB2E3D7ED55198F7DD9753F1AD9E6FE1BCD0DA5AF390148DAF16
AE42615CD9F7BABA830B0BEEBC17452B141D57D88F2510F434CC32A354DA97> |
66 <001C60D8A8C9B7A73DB63EE23D29A813D25791E340F2BE> |
53 <001C60D8A8C9B7A73DB6A60C55392047798BE3CC3FA64EEF810415694F99
06E515A311F816BEF6973F5016C62AEDEEC5718E9D73B956B99BE2FA5D6A8D34
3DB06F0FADDC518E52DB873DFCDDF12CBE1F8D7472DDD46734C72252EB4ABA27
7540D325C24771AA6820795D96D42CFA07C654D178447A4CA31B9699CEA601FB
AF5E0B8F16878E3FD84F1E9D41CE49B6B5EDA7C21106CFEC2AB1F8798DEC660A
9311BD9D6E28C3ED7676336A299C0307CB51299015C21BBBB51CF2CC17C04435
0B7CE042> |
57 <001C60D8A8C9B7A73DB9C904827946B7B46D15ADBE95238AF9508F1D53F4
023B0CE28DC6191C711B664281A1A2B69A6D5A1F8E676FE2D431A8722E10546A
74F8E3CA09E6C119B39EB9261E22426C5ECFD3F49E3688C141086B578E99DDA5
3AC1BBADC5A39D6144C3A5C6D8677693B3CF550AD80FC1D820341DBE05> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
109.108 198.025 mo
(\025*0\373\0001\000&\022r\031\327)sh
109.108 212.416 mo
(\010f\015\207\002\310\006\036\033i)sh
109.108 226.807 mo
(\0001\000&F\016\031\325\(\346\0261)sh
118.108 241.198 mo
(\0006\000<\0001\000B\0005\000&\0009)sh
110.79 67.1012 mo
168.87 67.1012 li
178.23 67.1012 185.79 59.5412 185.79 50.0612 cv
185.79 40.7012 178.23 33.1412 168.87 33.1412 cv
110.79 33.1412 li
101.31 33.1412 93.75 40.7012 93.75 50.0612 cv
93.75 59.5412 101.31 67.1012 110.79 67.1012 cv
cp
0 0 0 0 cmyk
ef
110.79 67.1012 mo
168.87 67.1012 li
178.23 67.1012 185.79 59.5412 185.79 50.0612 cv
185.79 40.7012 178.23 33.1412 168.87 33.1412 cv
110.79 33.1412 li
101.31 33.1412 93.75 40.7012 93.75 50.0612 cv
93.75 59.5412 101.31 67.1012 110.79 67.1012 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: PBAAAA+CIDFont+F1 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CIDFont+F1 gcheck setglobal} if

2 0 3 <> PBAAAA+CIDFont+F1 AddT42Char 
2 420 36 <00020010000005b0056b001c001f0254b0852b58b102024354584012011f
1e021e1d001c1e1c001d1f011e1c0214be03e2001703e2000703e2000a03
e2401708021c1e030f081c161d001f70018001020101080f0208002f3f12
392f5dcdd0cd2f2f1112173910ededeeec012f2f2f2f2f2f2f107d87c4c4
1087c4c431301b401b080e0f0f0d100a1e091f502106150f13101a111a1b
1b1c181d0621b8ffc0b2253521b8ffc0b330583421b8ffc0b32b2e3421b8
ffc0b2293521b8ffc0b320263421b8ffc0b31a1e3421b8ffc0b2173521b8
ffc0b2153521b8ffc040971013340d0f0b100a1e390f4a0f4610491e4f21
590f57105514581e6a0f6710681e76108004870e8a0f87108712891e881f
9b0f9b1099119b1eb90fb910bd1ab91ecb0fca10c81dca1edb0fd810eb0f
e810e81ef90ff810f91df91e2c090f4b1b021f1e01011f1e02001d1e1e1c
090e0a1b09161c171b160802071b081511141b15781e0f1020101e1c1c22
1110141170110111100f0e0eb802c94011021e1402021e1f1da500007001
80010201b801b5400c08100f03151616080809081cb801fa40090f110111
02a50e4011b80230b34f1e011eb802ec400e20400e500ef00e030ea7206b
8a182b10f65d191afd5ded181a10ed105ded003f3c103c103c3f3c10f45d
3c10fd3c870e2e2b057d10c4875d0e2e182b87057dc42b180010ed0110c0
0010ed0110c00010ed0110c00010ed0110c087107dc43c073c3c073c3130
01715d2b2b2b2b2b2b2b2b2b01725d591bb71e0f1d1d090f1f01b807ed40
0c6c1f1f090f0307171403090ab803e2b36c16090800183f332b17323f12
392f2b1112392f1139303159012107061514161715213536373637013301
16161715213536363534270b0203a9fdf35c223b62fe555519333e01dd23
01d8395d53fde95139286ee6ec01c6d64f271f2f0725250f183093045cfb
988851052525042e212c5f010d0224fddc00>PBAAAA+CIDFont+F1 AddT42Char 
2 1128 38 <0001004affe1050f056b0024013bb0852b584042091e2f012f022f032f1f
960f991ea30fa312b60fb7120b081e011617017d037b1578168d038a169d
03961aac03bb03090c030e04021d48035903052f081011241b00b80105b5
021b0101ba00b8034bb6209a05281c0301b802dfb5112bb0100110b80341
b58f0d9f0d020db8032f402f140902ac000101013210acaf11011f113f11
02111a40260126093c2018010f181f1802180c0d0d02551849256463182b
4e10f42b5d724ded4e105df672714dedf471ed003ffd71f45df4e63fedec
f4ed0110edf4ed10c9313043794020151b060c07251a260b261625061b09
2d000c15092d000819052d010a170d2d00002b2b012b2b2b2b2b2b818101
715d0072715d1b400e20201c10101c0202141c24031c05b807ebb46c1c03
140db807f5b26c140900183f2b3f2b3f1112392f11392f11392f30315901
132326262322060215141216333236371706042320272635341224333217
16333237363704d11f1f3ee6a187da7d76ed9884ca791f66fef0bbfeafb9
8ab6013fbd938f2a121b141a0b056bfe33cfb689fed4dfb8fef29071a814
b5a8fabafccb0154bb4816131b30>PBAAAA+CIDFont+F1 AddT42Char 
2 1562 40 <0001002a000004b4054c00330190b0852b58403f4035671c771c9b30a918
ac30bb30e035085619700670077f087f09800680078f088f0909241f1b1d
2122251f1b2b212308401010025508210e0e1f091b0807b8ffc040211010
0255072102021f061b071c101b0201230e0f0f1d3300a52b2e002d102d02
2db802d340212c2c2b021514a51d1be81c1c1d0809ac080806ac3f077f07
02000710074f070307b8ffe640501010025507762eac2c2b1f2d2f2d022d
6c1aac201b401bdf1b031b5350357035a035033500100613130255100c0f
0f0255100c0d0d0255102225240c10100255240c0f0f0255241a0d0d0255
249e34e0b9018700182b10f62b2b2b3cfd2b2b2b3c105df65dedf45de4fd
f62b5d5ded3c10ed003f3c10ec10fd3c3f3c10fe5d3c10fd3c12392f3cfd
3c0111123910edec0010f52b0110edec0010f52b2b2b3130005d015d1b40
0f2e2e2b06062b09092b1a1a1d2b010fb807edb56c01011d2b00b807edb2
6c2b2ab803e2b46c2b021d14b807edb26c1d1eb803e2b26c1d0800183f2b
2b3f2b2b12392f2b1112392f11392f11392f11392f303159011121323736
373311232627262623211114161633333236373637330321353332373636
3511342726232335211323262627262301ac012a7427340625250e0e1252
55fed6102838e67368303e412875fbeb30302b20171a24543004150f2715
333228650502fde8232e74fe28631c2328fe415a2717202f3e7dfeac2517
1040630371811e2825fed76b50150f00>PBAAAA+CIDFont+F1 AddT42Char 
2 2118 41 <000100210000041f054c002d0178b0852b58b1282fb8011e403725643609
04090ab02f03982bba2bc62bd903d32be904e90afb04fb0a09700570067f
077f08800580068f078f0808070a092a0207210c0cb80126400d081b071d
1f1b17212206210202b801264029051b060e1f1b1621231e1f1b2621232b
2c280a080c0405020201230c0d0d172d002326002810280228b802d34025
27272602161708272b28ac002901002930294029702904299006061f0701
4f0701bf070107b801b5402e000e06131302550e0c0f0f02550e0c0d0d02
550e221e1d0c101002551d0c0f0f02551d1a0d0d02551d9e2e6163182b4e
10f42b2b2b3c4dfd2b2b2b3cf45d71723c10f65d71fde4003f3c3f3c10ee
5d10fd3c12392f3cfd3c111239111239011112392b2b0110edec0010fd2b
0110edec0010fd313000715d015d712b1b400c2929260505260808172601
0db807f2b56c0101172600b807edb26c2625b803e2b56c2602141718b803
e2b26c170800183f2b323f2b2b12392f2b1112392f11392f11392f303159
0111333236373311232e0223231114171617163333152135333237363511
34272627262323352113232e022301a3f7554f0d252501274544f70d0a20
2c3031fdba305426180d0a1f2b313003f10d231a45656a0502fdeb4b6ffe
354f4a25fe566721191218252531207a036c672119121825fed65f592800
>PBAAAA+CIDFont+F1 AddT42Char 
2 3618 49 <0001ffe5ffea05aa054c002701f7b0852b58404b8a1201128f010102404f
358f0201121d020127022d13381378139802df02ff020713222212101f1b
0a2122211f1b1b2122031f1b092123141f1b1a2123121211010202221222
1412122222b801a2400f27ac010a090901021b1a0812090302b802c9400c
125311112010301040100310b8ffe0b41111025510b8fff4b40f0f025510
b8fff4b60d0d0255109e29b8ffc040103f35402901202901a029e0290229
1314b802c940152121302201c02201220c1010025522100f0f025522b8ff
f0400a0d0d025522192861a2182b4e10f42b2b2b5d713c4d10fd3c4d105d
71722bf62b2b2b5d3c4d10e6fd3c003f3f3c3f3c103c10eded872e2b057d
10c40012390139182b2b2b2b07103c3130005d7243584028091219122901
3f0039124f004a125f005a126f006a127a129b01a901bb01b512cb01fa01
12ef0201005d015d5900712b0171435c58b90002ffa8b31e123f02b8ffc0
b3160d3f12b8ffe8b6173901401c3912b8ffe8b21c3912b8ffe8b21b3912
b8ffe8b619390108183912b8ffd8400f1239121612390210153902101939
13b8ffd8b20b3902b8ffd0b20b3902b8fff8b5143902401139002b2b2b2b
2b2b2b012b2b2b2b2b2b2b002b2b59005d1b400c13021b0900021209270c
0908b803e2b56c0902181b1cb803e2b26c1b0800183f2b323f2b32323f3f
111239393031590321011134272623233521152322070615112301111417
16333315213533323736351126262726231b0170033d1c25502f01d83056
241624fc821b264f30fe282f5724163b3d3b1d3b054cfc07030e7d1f2a25
25342072fb890444fcbd7d1f2a252534207203af452c1309>PBAAAA+CIDFont+F1 AddT42Char 
2 4558 51 <000200220000042b054c001f002c01b1b0852b58b9002effc040933a352f
2e7518741b741c7c28702e951c077918b724ba28db1bdb1cda2406192710
2e2826392539273b28302e5a276927702e802e0bc600011a1c291c4b1cd7
19db1b05a82801ca24d917da24d927d828eb24061c40231d28080e1f1b08
2122011f1b0721230f1f1b152123001d202c2a1d283f234f230223230715
2a281616150208070812001a101a301a401a701a051a492eb8ffc0403e3f
35002e01402eb02e029f2ec02ed02e032e2c010613130255010c0f0f0255
010c0d0d025501220f0e0c101002550e0c0f0f02550e1a0d0d02550e9e2d
2eb80177b3216163182b2b4ef42b2b2b3c4dfd2b2b2b3c4d105d71722bf6
5d4d4358b90026032de91bb90026032ded59003f3c3f3c10ed1112392f5d
ed12393912392b2b2b31304379401c2429171c182528262917263301241c
26330127192a3301251b2333002b2b012b2b2b2b81810049547940101e22
211f233b04221e203b0021201f0001103c103c2b002b8101715d00717201
72005d015d2b1bb11d23b807eab56c1d1d08152ab807f1b26c1514b803e2
b56c1502050809b803e2b26c080800183f2b323f2b2b12392f2b30315901
111417163333152135333237363511342726232335213216161514062322
262716163332363534262623220701a41c264d34fdbb335625141b274d33
01f1b6d290dbc831724135521d68974884543350027bfe75801f2c252538
1f74036c801f2c254bb27aa6d00e470a0aa18058974b1300>PBAAAA+CIDFont+F1 AddT42Char 
2 5950 55 <0001003e000004b0054c001f011eb0852b58403a5a015a025a1d5a1e6b01
6b026b1d6b1e082f213f214f219805971ba805a61b0702011d1e161f1b10
2122091f1b0f2123071823001f02100f0821b802c0401309012b0040170e
3f120f001f005000af000400b80228401a08090613130255090c0f0f0255
090c0d0d0255092217161f2b1eb8ffc0400e170e3f12001e101e5f1ea01e
041eba02280016ffec400b10100255161a0d0d025516b802c0b320645d18
2b10f62b2bf45d4358b9001effc0b20b351eb8ffc0b20b0f342b2b592be4
103cfd2b2b2b3cf45d4358400900400b3500400b0f342b2b592be410e600
3f3c3f3cfd3c2b2b0110c910c93130015d005d1bb6021e1e10081f18b807
f4b56c1f020d1011b803e2b26c100800183f2b323f2b3212392f33303159
011323262726262323111417163333152135333237363511232207060607
231304a10f260b131f6754bf1b264f2ffdc130562416a35f28344a072610
054cfec254243a37fbf47d1f2a2525342072040c0e136c5c013e>PBAAAA+CIDFont+F1 AddT42Char 
2 6336 66 <0001ffeffe460412fe9a00030035b0852b58b900020327400d000f030036
05020167044748182b10f53c10f43c003fed31301bb10102b807f3b16c01
00182f2b303159012135210412fbdd0423fe4654>PBAAAA+CIDFont+F1 AddT42Char 
2 7830 72 <0002004cffe4035303b00014001d03b4b0852b58b1020243545840280816
1415000c0f100255000e0c0f1002550e0c0d0d02550e1530400001200030
0002000010000200b8ffc0b41314025500b8ffc040111111025500000b1b
251107000710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ff
d6b41314025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed
12392f2b2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d
158000a000b0000320003000400003000010000200000b1b2511070807b8
ffc040241010065510072007b00703000760078007a00704079204a204b2
040304310b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655
000c0f0f0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd
2b2bc01112392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31
301b4019125f185d1960006014d6030519201c3917201c3916401c391fb8
ffc0400a434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e34
1b06190958135e165f175a185b1a07010309060709080c0515490689028c
06870c8a10851da302ab18b513d402d90fda10f402f30313126007600870
0780078909c107c80ff007080401070d84020309baffe00006ffe0404a36
09460247094f1f5402540962027202891389199913a409a40ab808b509b0
0ac702e702e00cf40a1408d007010007d007027107010007100720079007
a007b00706077d041400301615b8ffc040131239125f157f159f15df1504
15151bd3040104b8ffd0b2143904b8ffe8b2133904b8ffd8404812390431
0b0b5c1b011b25110707cc0816281b390f16016f167f168f160316f41414
800801300890080230088f08df08031008400860087008b008e0080608aa
0e15040089000200b8032c4012300e400e500e03000e100e200e03f00e01
0eb8ffc04009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d
715d713c10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15
015d592b3cfd3c10f45d5d7172393130015d00383800715d014358b40600
010202715971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c40
2d390d402d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ff
c0b21b3908b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2
093908b8ffc0400e093915101939192011390d201139002b2b012b002b2b
2b2b2b2b2b2b2b2b2b2b5959591bb507070b111500b807e5b56c15150b11
1bb807ebb46c11070b04b8081fb26c0b0b00183f2b3f2b12392f2b111239
2f3031591306171633323637170606232202353412333216152521262726
26232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701a805101963
365383023bcc747463781489e10101d9eb0107cbaa3a582438408100>PBAAAA+CIDFont+F1 AddT42Char 
2 10532 85 <0001000d000002b703af002801dab0852b58b1020243545840282a401313
0255061f171127040f0f025527181f0111080d0d025511040f0f02551106
0c0c0255111fb8fff4b40f0f02551fb8fff6b40d0d02551fb8ffee401110
1002551f14121202551f0e131302551fb8fffc400b0f0f02551f01100318
1619bb03e20018002603e2400e4f276f277f2703272807180c0307003fcd
2f3fdd5ded10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10
c410c431302b1bb10602435458402301100318262728076f097f0902090c
030718061f01110c0d0d0655110410100655111fb8fffab40d0d06551fb8
ffeab40f0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd2b2b
c010c4002f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f40
02400f820407402a015f2a011f291e18272211291e17862327272041261e
2744000a0b2a111420100104188009010939100c010c590303000718170a
5f0601400601062e1f2a012a0011241f1f1f2001802090200200201020b0
20c020d02005206029a66e182b4e10f45d71723c4d10fd3c1072e4717200
3f3c3f3c10ed72ed5d11173901111239390010f5edfc01f52b2b31300172
71005d59591bb2161819b803e2b46c180a280cb80813b36b03280700183f
332b3f2b3230315901153633321615140623222623220706071114171616
33152135323736373635113426262322072725014c737937483424235715
12152d30130d423efe2b4622190a050d231a1f270a011503afcece432c27
364514295efe494c271b24242416102311500163a03d1c0f2470>PBAAAA+CIDFont+F1 AddT42Char 
2 11128 87 <00010014fff1023c04c1001b0228b0852b58b1020243545840251d401213
02551d40101002550b0c18121202550c15130105131812120255130e1313
025513b8fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255
130b082c0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b
2bddc010c62f2bcd31302b2b1bb106024354584019170c10100655160c10
100655150c10100655160c101006551bb8ffe8b4101006551ab8ffe8b410
10065519b8ffe8401410100655700b010b0f1b01156914014914011404b8
011b401c0106082c0f0b1b0105021010065505080f0f0655050c0d0d0655
0513b8ffeeb41010065513b8fff0b40f0f065513b8fffab70d0d06551313
1d1c1112392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d31
30012b2b2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d991199
19bf15bf16b819e819079f1d01891a014f0c4f0d5f0c5f0df51805061815
18271803161518191a030118191a03141ba00103153004b8011b401c0103
30020201060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec40
2c200c010c2e2f1db01d021d000101040405241450130180130100131013
b013c013d013e0130613601cab89182b10f65d71723cfd3c103c103c105d
f45ded10ed10f45d3c003ffde43f3c10ed10edfd3c10e401111739001117
391239313000715d0171725d00722b59591bb61b014014160104b807ecb4
6c01060f08b80809b26c0f0b00183f2b3f2b39391a10cd30315901113315
231114163332363733060623222626351123353636373637014ad6d63328
213e11272380442e582a9137732d172904c1fed346fdae593e2928626333
5f630268211669482665>PBAAAA+CIDFont+F1 AddT42Char 
2 11768 88 <00010002ffe403fd039400250258b0852b58b10202435458401627401212
02550801080d0d0255010b20281212025520b8fffc400b0f0f0255201e0d
0d025520b8ffe4401310100255201a080d0d02551a121c1212025512b8ff
f8b40f0f025512b8fffab40d0d025512b8fff4b5101002551224ba03e200
1703e2400e1825060b200e18061d2c0e0b0708b8ffc0b509100255080a00
2fdd2bcd3fed3f1239393f10edec012f2b2b2b2bcd2b2f2b2b2b2bc0dd2b
c431302b1bb1060243545840570740086008700803080a0b200b180e2425
1718250618061d2c0e0b0b010810100655010a0f0f0655010c0d0d065501
201a040f0f06551a04101006551a0a0d0d06551a1208082620080f0f0655
20060d0d065520202612b8fff2b41010065512b8fff6b40f0f065512b8ff
f6b70d0d0655121227261112392f2b2b2b11392f2b2b11392f10cd2b2b2b
10cd2b2b2bc0003fed3f3f10cd10cd111239393fdd5dcd31301b40350127
600d5d36202760277027b02704340b371f3a20481f4820051a08134f1e18
2723214f1e25272308270141071e0844200b251d08b8014540130a002525
191918061d2c0e0e0a0b0a0b0b2120b80167400e00b001010f0170019f01
cf010401b802bd402512191a241212501390130280139013b01303001310
132013b013c013d01306136026c27f182b4e10f45d71723c4d10fd3c10fd
5d713cfd3c3c103c003f3c10ed3f3c103c103c10ed11123939f5edfc01f5
2b2b3130437940101b1c0f111c0f1a1c0010111b101d1c002b01103c2b81
81005d015d2b59591bb2241817b803e2b76c2518060a0b0e1db8080cb26c
0e0b00183f2b3f3f332b3230315901111416163332371705233506062322
2626351134262607352111141633323637113426273503630f21161f270e
feee2d767c454d712c1c37480141593f2b6d4b395a0394fdd59f471c1123
71c28042598c80019941321b0125fd9b8050364c02074e370225>PBAAAA+CIDFont+F1 AddT42Char 
PBAAAA+CIDFont+F1 /CharStrings get begin
/space 3 def
/A 36 def
/C 38 def
/E 40 def
/F 41 def
/N 49 def
/P 51 def
/T 55 def
/underscore 66 def
/e 72 def
/r 85 def
/t 87 def
/u 88 def
end
PBAAAA+CIDFont+F1 /Encoding get
dup 32 /space put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 78 /N put
dup 80 /P put
dup 84 /T put
dup 95 /underscore put
dup 101 /e put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FRZWPI+CIDFont+F1*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 
/F 7{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T 10{/.notdef}rp 
/underscore 3{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp 
/n 3{/.notdef}rp /r /.notdef /t /u 138{/.notdef}rp]
FRZWPI+CIDFont+F1 nf
FRZWPI+CIDFont+F1*1 [12 0 0 -12.0002 0 0 ]msf
125.549 46.5802 mo
(return )
[3.95982 5.39995 3.23987 5.99998 4.07994 5.99998 0 ]xsh
106.108 60.9828 mo
(NF_ACCEPT)
[8.64 6.71996 5.99998 8.63998 8.03996 7.92003 7.31998 6.71996 0 ]xsh
.72 lw
139.11 184.701 mo
139.71 76.1012 li
@
136.47 76.9412 mo
139.83 67.1012 li
142.95 76.9412 li
136.47 76.9412 li
cp
ef
208.47 150.741 mo
148.11 150.741 li
@
148.83 153.981 mo
139.11 150.741 li
148.83 147.501 li
148.83 153.981 li
cp
ef
208.47 215.901 mo
183.51 215.901 li
@
184.35 219.141 mo
174.51 215.901 li
184.35 212.661 li
184.35 219.141 li
cp
ef
208.47 282.741 mo
183.51 282.741 li
@
184.35 285.981 mo
174.51 282.741 li
184.35 279.501 li
184.35 285.981 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
191.092 273.495 mo
(\012V)sh
327.51 308.061 mo
327.51 281.661 li
@
324.27 282.381 mo
327.51 272.661 li
330.87 282.381 li
324.27 282.381 li
cp
ef
292.11 249.981 mo
327.51 227.301 li
363.03 249.981 li
327.51 272.661 li
292.11 249.981 li
cp
0 0 0 0 cmyk
ef
.24 lw
292.11 249.981 mo
327.51 227.301 li
363.03 249.981 li
327.51 272.661 li
292.11 249.981 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 3 GetGlyphDirectory
7514 <001C60D8A8C9B5EE3102961D9AC3F5A48CE998F1C2AB9615734197CE13
55C791839A6E4305090D3852EE0B28C1484C702B78BE3A7EC7F9E7A679E85F46
AEB76AC4F056FCA6A85556618D737AAB99C0E94BA78992D2F80ECE15B49DE1E2
3F4EF41B7D66703636AF224C182B6E1EEF746CBA55BF5E68556CA8CC086F902D
C43E2B813AF04C02A734394B81BEA07B47B04630D1B03A5323AD1AE8741960D6
6675FCE4E071A02A03C70BA7> |
13638 <001C60D8A8C9B5EE310342C9F375357C900DF452988A54A99E0E2B60C
4E781A28B227D8DA662A03A4DBD3E41C0714EFD0C136F91F0E0F97213FC8F03B
83663BFE29B5123E15D9F9332D85A485BBF2CE6BDF9B6E0AAAF8B335DDDB3228
510E9B80AE85F90ED8E345B8BC2FF88116AB7406327B3A103A12C6AF9B6D31B2
250A9E7093B168C69EFC667D25B2F8C27F5C232CBADCBD30B5008E59E8B778B4
B54E54B859A4467EC20CD6037B943DAA3D8AEC5C1838E791D669E5F95661A66B
AE5F74FF7A9EEAD8951E6D4BEC2780A0D084C9E8983E89732D9DA33F93204296
BF1B21FEA144611C625E7FDDBD435176423BE0E6A7ABA9EF88D74E4B5B6CA7B0
5FE843C660A0BDD44531B22445223214E6A70F1B7BE0521B66EACF0153739B61
840B96584105E77107B12C90F5D9769EC3FFE359331AEA1586BE23CA817F3D21
10FCC6C86A39410DBD24C1D0A718ED1F2AE8998052A4BD5C415887E4E931CF58
B34E50E7DF6C017FDD945407B4532DA85FF0BB0F2ED5FA5A680C97C641D37999
4B5FBD9F0EE268DF5871614919EE1017B4E71C9368CA6302853BC41E6BE2E62> |
11825 <001C60D8A8C9B5EE310DC6506A25B46D1148BEBE70EC36ABC4F7E1009
E4E2A4CAE554EB92203D6CE835C37904F4E0B1C7CFCE83A41AD0491C18379B9C
9BE64194743D51A1C41F710F8F302063EE0E937614C75365FB514C8470E3A1C2
17BF2657335459BA20B0F5B6EA1A68D9693B9F08EA67BEF6FD0A08D365D8FF8E
540ADDB4E0D3B7873393BD2CE57236D9D2A186D08BA44E5EC65F6465E39C05A7
8536C34C4EBD0FAC7B4CBCC2C5F2CEB52E71CA7D127F91E1C78A9B9DAC84BF46
CD9226A67C0AE9B6A3FFDCF0F86FE78A3EE0C64CF86A1E45479603BE677BDF01
944C02CA5A4BB5DC5DE79C2A0EF1BC5611F47B95B5D637295655CCD4AD4671D6
F1269C108EB93866B45E91BF105CD4A75A175D6CA9619925B67B6E2A2D3EFAC> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
309.639 246.401 mo
(\035Z5F.1)sh
312.639 260.792 mo
(\000$\000&\000.\002\333)sh
309.171 292.574 mo
(\034_)sh
.72 lw
363.03 249.981 mo
384.15 249.981 li
@
383.43 246.621 mo
393.15 249.981 li
383.43 253.221 li
383.43 246.621 li
cp
ef
393.15 225.861 mo
464.07 225.861 li
464.07 273.981 li
393.15 273.981 li
cp
0 0 0 0 cmyk
f
.24 lw
393.15 273.981 mo
464.07 273.981 li
464.07 225.861 li
393.15 225.861 li
393.15 273.981 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 7 GetGlyphDirectory
6656 <001C60D8A8C9B5EE310371EEE73C4E74D1B9A5612D27357FDC0DC38568
74597C77D69A700D983AFA179E764E6CE4F81A7190F65FCD2F3A640646FA8B1A
00C2234F4DDC06DD5A4E2765E7968C52F8610F9E07A884C665A17D8ECEC44361
D369AA9E48082618CC731BA58A1FD4B50D9FD9503BF33FA5296FDFC229883138
3E3E48CE399055A889DED0D3BD80D433902B913D8114AA6A1E1A54D4E502B9B9
0E5FF41194E2B0465A6007D8EE51AB6499E2EF7F778111DDA324BCB4D8520EFD
926920CFB14196F5BCB770AAEFFF5BE348DDBD8E0E30A85B78F3BAEB104BCE63
464DF327FA112B2714BB3B0770DA3B9FFCA3F5196B09390C0F0F416E5BB8329E
1F56CAB980882012BDD9F942A2CF1F6EE2FFD31BB379D7F083CDEF774DEE327E
42F529C1ECC6F118D186EAC16C7E279D03A036AD3CF651C6F988D3CB33114EFB
6CD7968C370C019E1C197BCA1CCCA0F4990D> |
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AD
7B34929E58612742842FA694BB60002C2DD05220F1C4C3C6C4B098B9DCF18D23
6EB21FAC48FE7B65AF85A82D5859D948BF87B3E84834743CF0B31B0B526DE1A8
54D7CE974B5D343C7EF81141AF0C9DB52CFCBA7F0E45CD8D35C03B9BBC4B8AD9
E6CB76943CC95846E39129FA13DC83D2D5280CB7EA00B23613467DDA55E7673E
187A3C49AA319A0A45EB02CA9C217F41B2AF19411D81437B2114AECE3E6C7BD5
F7BB97523DA795637E7D078F65721F2379EC3BF8A9534E1A3ECA6E987616098A
8CCFADC0D2F44D88BE07FD92E288> |
3940 <001C60D8A8C9B5EE310D783A1AFF38068FD68291FEE1D723856DCA4D8A
3B92A70DFA62DFA7E49BCF4DC121458E0B302CF24BED5F55F681FD650824FCCE
C0B1D374117D0A6CF35E6BC563C6BDA6549EB54D543CCBDD67A7AC5BADFC09A8
433B6BECC125507B440D3A4D5C264D0CCC51F1F1D3155F6A7203B7DA235746AF
48406B13CF4354DEB28E4F1692E92C33E98563F77974534DDB2EE24E90A7E805
8B4274BC1B4D4065F66ABD4895D656780A778E886E344F1B1CD6272583F9FA77
EF51A7521B4811B2271E1690EADB3DDE441F65F1C6AB65970ECBC72E15D31E9B
8A6588D056F1CB3465C51ED72E1CF3C330F0D3FACB918951A6> |
18200 <001C60D8A8C9B5EE3103C375F3B43C4008C509FA9F2B041CA0B29B1FC
7CD507172C352B7B1D46FA579EC3BC89AA48D063F8277D5192788974DFBABA97
5EA3964D90126341A85D6025921DDE21C9CA0ACA964B34B3AFD0B8CE259AC23D
4C13364E3FB46C24A0628A31A72B54868623AD1C5D0E5241F5AA0CB50B6FDBF3
B54E0A97E2F5E92F5DB84732141C53183AE9588016EDB0692B654A1330CC13B5
21E5DCA588032EF3BECE16FBCDE045DCE9C1073F8143800E166299A0E554875E
B4AF8E0CF3169B8065FED26B7C69EA91DBAE1898F1CDFDAB7D2ED56E1C8C81D3
B457249FF3D7B4ED9B401B3801400AC6FC7E957A43232FBA8CB6E454C2B82DAA
489C2069E87A3CAAA249440B8D39D9AC427E81E74D99E77665E78760BF26A417
BE96C9A37AEF4F21A872BC2B96EF584D0E439EBFF4B2EB7FC1754E12A2A21B3A
662D14D1E361C251E6CA381BD8B707AB9E40B0D144653FE44D2815A8A72A397A
2C1DB7A0FFD> |
1236 <001C60D8A8C9B5EE310249C3BE3A1B02B4292762B7D42D16F59C80F293
DA6BA88357D47F1F5F01BDB97433EA3C12D8A81C4DEED0B0C10DA1102E204747
A178877F28C7F4214A399F0AA3C9D0E8DAA2CD23A573AC6866DA858F62A10AD5
05928FCAE691AE84B399ABD9D4BF305B991DF82714FA54DC081CEF22F9D454F2
2CFA24C6BA31E144FE8CBE56C015A08C823321B6D9A8F56638C999D79F2EA6BB
F9D13883257698287D997E72500438248515B2E5018734C86194B4801CBD65B5
1604761F0653914C0050D79FDA449BB497060B01EEE8A53EF347BAC2A56362CA
AC7BD6532CFB9AB6759D7613A504509330B359648D75D016EA0FAFB172F107ED
EFE81AE3C96038B5307E59B3> |
13577 <001C60D8A8C9B5EE3102E39146DD5FEF4EC43E17BE357111DA873B982
7F072A1785B27566486EFE1E6908226D44A57B17FCF8BDE697F63776448F7416
E03BCEDAFCFE2D80074BFBA75CD063CDC84EDDA3B132E1B500F1630C7F370359
6324FA5E88976980247CCFF4A8F09532A4A3A7A646EA428C253ADBD5936C5333
AF8496F7A3D3C0381082DF2784CAF984A30ADD6275A4AD94E6CB5CAD556DB587
C43EE789E3FA1B6E7DDA44FA27F0285E1F54A3AF6297BB2248EAAEB560881177
25F8F1A914209D4F4FF200A1871EA92E22D05AE13B5EBE4471DCF98FCAF96619
A4785890811500B0F858CBFF5F05CB8613CB8E8A8D262FE263FE317EB189D8F1
97B9EB4D3D28FC7DAA12A756E45E2E85D5ECA9E7014E8AA39E1C9C535971D46A
EF7BF5948BCBCBEAFD9FE5C18EA439E795C14B827CDAD23844E> |
1082 <001C60D8A8C9B5EE310273E1573AA3540BDF74783AAC83340C37EF8CD3
57DFC3157416C940EC51CA66ECA91972E9A22E663DD73BF9438F04B34492326F
A34AF86CF0A63C0B3D994A16ED88> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
398.655 239.182 mo
(\032\000\012\006\0001\000&\017dG\030)sh
398.655 253.573 mo
(-\(\007\243\006\021\026\237\002\310)sh
395.655 267.964 mo
(\004\3245\011\004:\022r\0007\000&\0003)sh
366.874 242.323 mo
(\034_)sh
.72 lw
428.67 273.981 mo
428.67 294.261 li
@
431.91 293.541 mo
428.67 303.261 li
425.31 293.541 li
431.91 293.541 li
cp
ef
405.51 337.341 mo
452.31 337.341 li
461.67 337.341 469.23 329.661 469.23 320.301 cv
469.23 310.941 461.67 303.261 452.31 303.261 cv
405.51 303.261 li
396.15 303.261 388.47 310.941 388.47 320.301 cv
388.47 329.661 396.15 337.341 405.51 337.341 cv
cp
0 0 0 0 cmyk
ef
.24 lw
405.51 337.341 mo
452.31 337.341 li
461.67 337.341 469.23 329.661 469.23 320.301 cv
469.23 310.941 461.67 303.261 452.31 303.261 cv
405.51 303.261 li
396.15 303.261 388.47 310.941 388.47 320.301 cv
388.47 329.661 396.15 337.341 405.51 337.341 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: PBAAAA+CIDFont+F1 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CIDFont+F1 gcheck setglobal} if
2 2628 47 <00010029000004b7054c002000e1b0852b58401b10001001200020014022
5702670277028a209920a920b9200c0122b8018e40330e643655025c1e02
091f1b03212216371b113d220a1f1b102123201f2000300040000300e71c
1110021c2302030800ac016c02b802c4402f16170613130255170c0f0f02
55170c0d0d0255172209090a0c101002550a0c0f0f02550a1a0d0d02550a
9e21615d182b4e10f42b2b2b3c4d10fd2b2b2b3cf4f4ed003f3ced3f3c10
e45d39392b2b2b313001722b015d1bb500000312100fb803e2b46c100203
1cb807f4b26c0304b803e2b26c030800183f2b2b3f2b3212392f30315901
170321353332373635113427262323352115260606151114171616333332
363604962174fbe6335625151c274d3302666c5720100c3283639c7e6801
7707fe9025382074036b7f202c2525012a4079fcac531f15142e7500>PBAAAA+CIDFont+F1 AddT42Char 
2 4242 50 <00020048ffe10578056b000c001b00d2b0852b5840319712a807a90aa910
0477017907870188070443080d28000315280609183c1f032f0302000310
032003300340030503491db8ffc0401a3f35201d401d021d113c10092009
020f091f090209491c6463182b4e10f45d724ded4d10712bf65d724ded00
3fed3fed313043794032011b0f250b261a2613260e0c112d001b01182d01
1407112d001605182d01100a0d2d0119020d2d011208152d001704152d00
2b2b2b2b012b2b2b2b2b2b2b2b81015d5d1bb1000db807edb46c00030615
b807ebb26c060900183f2b3f2b3031590120001110002120001110373617
220706111017163332121110272602ed01080183fe7afeebfee8fe83dcbf
f7b66e898e6db3bff9896e056bfe6ffed4fecbfe68018e013c0143ccb149
87a8febcfeb4b388012a0141015cab88>PBAAAA+CIDFont+F1 AddT42Char 
2 5122 54 <00010080ffe10405056b00380299b0852b58401912952c010f010f020b03
000f04280029052b4f014f0209113ab8014640d03638361a031b045f185f
195f1a5f1b06050d050e002ac03a04740b740d740e760f701e701f702f70
308908860b870d870e840f872ba804a83310120d330d340d351d331d341d
352f012f022d04201e201f29292d333e013e023f043019301e301f30213d
343d35480d482a540b560d57105629562b1d1f011f021b331f351b365418
5419541a59325c335c345c355c365a370e030b0b29130b1b29230b203a3b
29303a7212721389249807982f9930a82fc028c12ac62bc03af03a144e08
381b006f021baf01cf0102017f010101ba00b8034b400d359a311c1b1d6f
1f1b1e1eba1db8034b4034199a142a2b2b3c0c0e140c0c0e2b0c2a0e0426
092b0c2a0e04062301fd0000062831032328140902ac01401e223401011f
260126b8012340102f11bf1102df11012011af11df110311b80287b71fac
1e2b10090109b80123401f9f2e01bf2eef2eff2e032e404735402ecf2eef
2e03002e202e302ec02e042ebc014600390146011800182b4e10f45d5d2b
71724ded72f4edfd5d7172fd72392f2bed003fed3fed3c10ed1112173901
11121739870e2e2b0e7d10c4180010ecf4ed0110edf4ed0010ecf4ed5d01
1071edf4ed3130437940362430071328260b2c093300290f263301241326
330107300933000a2d0c33000b0c2c2b27102a33010f0e292a2512233300
082f063301002b2b103c103c2b103c103c2b012b2b2b2b2b8181015d0072
5d43584009630b660d6710632b045d595d0171722b0071005d435c58400c
0b180f3904300f3933300f39002b2b2b591b40133535311919310202311e
1e143138031d093106b807f1b46c31031423b807efb26c140900183f2b3f
2b3f3f1112392f11392f11392f11392f3031590111232e02232206151417
16171e021514062322272626232206072311331e02333236353426272624
2626353436333217163332363703ab25125dac5c68882b3ee9be8b4befbc
3b341fc31a191d0725251a58b56c7d91373a27fea4934ce0ad6c7938171a
210a056bfe2b87a05e7f513e334b7d666d94519adf09053f1e2f01d19291
60845a32662c1ec3748c5492d335191f2f00>PBAAAA+CIDFont+F1 AddT42Char 
PBAAAA+CIDFont+F1 /CharStrings get begin
/L 47 def
/O 50 def
/S 54 def
end
PBAAAA+CIDFont+F1 /Encoding get
dup 76 /L put
dup 79 /O put
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FRZWPI+CIDFont+F1*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 
/F 5{/.notdef}rp /L /.notdef /N /O /P 2{/.notdef}rp 
/S /T 10{/.notdef}rp /underscore 3{/.notdef}rp /c /.notdef /e 
3{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r /.notdef /t 
/u 138{/.notdef}rp]
FRZWPI+CIDFont+F1 nf
FRZWPI+CIDFont+F1*1 [12 0 0 -12.0002 0 0 ]msf
414.627 316.821 mo
(return )
[3.95981 5.39996 3.23984 6 4.07993 6 0 ]xsh
395.31 331.221 mo
(NF_STOLEN)
[8.63995 6.71997 5.99997 6.60004 7.31998 8.75995 7.31998 7.31998 0 ]xsh
304.59 157.821 mo
350.55 157.821 li
350.55 200.301 li
304.59 200.301 li
cp
0 0 0 0 cmyk
f
304.59 200.301 mo
350.55 200.301 li
350.55 157.821 li
304.59 157.821 li
304.59 200.301 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 4 GetGlyphDirectory
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B68B446FD4EE9ED1
4721CF2A9A21B88FDA7D8E37AAC73F35FE4084653B0B95E319EB8703812C2A0C
108D9092AFC18B1940DD2ED6AF36C6F1B98EEE247BC4A963065CFE72FB103B46
B523DBD7E07735C163D7413F2644CC28C6F92F85D0B39EA0D65AF3B4E4B78F55
D6FC49CE4D92F27CEEAC3024668CF3462A4AA4E8573702C758E552BCBE8F0414
EB253C2B7733024541CAE5388922865026D9C7E8A9ACD0C992348DD3F8D4CBC6
0622E7F2161951BFF34079ED8A8E67A25A5F1E11988BE535306FD2CA77DD87D4
D01BE4CA3ECDB0FCD161FE2ECFD9293096DBD24EE4C0F004279A015A08EF5EA4
45F0121066CDD05C304BDE9236870555C977C75D4739DBB42868E680B64AA37B
AE2401958310E87EA4454855BF081799704840DF55FF247D5DC9A48274AB8C60
835B6E7E86EDB425F69F049E974A425D9839A7D556A7244FCF74B36520B3DEC0
C69225DD2EDA65064DE6D781BE0E52E6019E6CD07C93F97A3C40589A375F23EF
61599F097FDD1C00369B8831B391879B210A664175977AE6DF10243B958940CA
DC480B0DCF74760E5300BFB15AA118D97F29E6AFBA54EF39A4F382CE16DE5FC0
7DBA65943CF9E0383993316CFAEC6C9728F1341EE3C4CA8305EF8D7085C3EF7B
9983E5692DB195A932D80484D2890D19> |
6558 <001C60D8A8C9B5EE3102820CDF2059AE7E38A7DD18C49A35420DB1B091
122739BEE0A32333A53DA02BFB714548CF1E0E1DF60B241A30D0E145F324C703
AE6BA40AE7367E8F21EA0F895A1A694E0B1E2B95885487CB92CFDEC1E2ED11BD
F2A7DBB72F5444265C5E8CDEA08DFED3052C81B6BBB72AF4591784C70BE7200D
1AB7ED97BE9C64CF192F912D7354C4FC588801B4F164B79208B016F221435034
0368B5CEF714699166C38AC42E0CCA0FA1C090F3438CA38CFF62B62408B0FC66
1CED7047AA4C28E7CE51EF328B4A242D039B9E86CFF81B0EDB18BD659F822BAB
9AB06551093EE0FE1EFA44BE7E8A9488CA8FC87D41DC769F16898A16C300C034
E8999E3F32045143E4882EF8548B1BC02A3DF2D6FD591734B19E9905316166B0
88D1AE54C0DEDAFC3AE73A2E8B291D796FF1536C4768D97BC0D916F0190CF71C
0C> |
2357 <001C60D8A8C9B5EE310D7591D869FF9527001B0E3CCDFA3905199639DF
6509838F3D6043C938AA9DCAF89B0143E2E223849819648211460C6E08D1EE23
F145488FF37D4388B06472505F9F31FDC58FC483826D8F792F87FD1C08BF639A
9C0865217025D259DAD70B16562302DD378618AFA8BD04213B33A7611C2096EE
12421B96B7F4D117A95303E7C79A6F8549178EAB9AA35A29769A6E91CB557679
BFB20C3EA572CBC19AA7269E33DEBD8193154610DE3BDD16809605CB82F687AD
6C7C3D0306B545B56F77C56CF74CD8D2F06C1B68EA7686B232CEC0240EBBF033
18A4DACD22276C35D82F1E0437E70A7608C0189499228780102173A100691EB0
236DA8D17A75C7028E5B035F28A1999EF278> |
16403 <001C60D8A8C9B5EE3100BADA4056436DC84FE8CAC490986198BDDA550
80E9D930D20775478BADC3CB8F090C0D5DE66A3E929CF18C6630A9F40D183BA3
45AB8979857AEA00550A297EAE4B027F983DB276C322D651E9598A2D770AC031
28A80AB673D25A8982F1AE23287B10DAC305CEE58E966EE83EC2ABF189945A78
5852A6B8F743A92700F124427007ADB770AF2B08DE99482DC129E2123A748112
3CB4C70A02BB16C61D8D52206F85872816DD8047A94D01DEFCC3215C4E96EC85
73647DDAFAEB21EA6A6B857DE7CFD957EB2EAB62576ADC4BBF7EDD2C6497FB0F
56B77A045647773585813A6FA7B27EF6D9BF092E6A2C8AC583FD78F9BEC709F1
04BEC83D0C15AF6F4FB82E7B85832EC301612064FD6B849DBEC0A30795F42B2D
C9F4CAFD31BD6CA98EE95EEDD10C79670EAB2EC5EEE5D73C4F5D00FD6561C10B
8741ADCF8380218563E949BFFA76A2A31AC0496AFD8726554564F037736A1427
ED89CA3C04A12A70118D2D7862C25C706C2A14FD57508C41836F7E837CE2985F
F9C147D8A77644E961CD4D9D74A26612A9C84AFA24A524C88EAF280C1BCC0A21
C02146CC36839422756F1B3868C4E9CF89EF75F86025558BE0D4ABDEC7C8F01F
10CF443E23B52388E4DECB4DFAA8C2DD406CD374FB690068B418E5CF91A2B7D4
27FF175CF> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
309.639 175.571 mo
(\033\240\031\236\0115)sh
315.639 189.962 mo
(@\023.1)
[12 0 ]xsh
.72 lw
327.51 227.301 mo
327.51 209.301 li
@
324.27 210.141 mo
327.51 200.301 li
330.87 210.141 li
324.27 210.141 li
cp
ef
292.11 78.3812 mo
363.03 78.3812 li
363.03 140.781 li
292.11 140.781 li
cp
0 0 0 0 cmyk
f
.24 lw
292.11 140.781 mo
363.03 140.781 li
363.03 78.3811 li
292.11 78.3811 li
292.11 140.781 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 3 GetGlyphDirectory
7460 <001C60D8A8C9B5EE310D81F2D77B34AD0BB68D5508F44AAEAD490814CD
C9512A198ED3A9792B223937B6B2D0BDD9A2944EAB581C130EBCD1094566CF20
8A6665A6CB7CF96BA5DF7B5DD46A1E45DF62ECE0FAE62C92EDCB17FD39E67303
738D92520E537988EB6789801F1E4961796AD7B1CA036E8A1F259CDF1E4EE34A
7DE572A27E60E8EC0EB0F5E0ACB9604E358C2D11CDF252869FDA4B3BD36CC90F
C8861A85779967DF26971B0CD0D69FB304147D5D7DD788F70844A7D4F51BFE0F
236631C26750899A2CD47AD20BEA17F5B8FC7EDDC57E7391B8F8A4FFC9A1FDEA
3E7719F9590F62723507C584CBFF81CCF09B2C78FB9C945D0797CE654218545C
DF5D8162D73E57D0D4B0715D9E7F61F3F25AA8F76D095B> |
7136 <001C60D8A8C9B5EE3100C5FAE52DD80AD0A36A265B20229A4C451E2440
A19A87461D007560B76AADBD298D3EBDFD4B6F0D567976215C0B468537F7BCC9
4C6A538B0E76FC646F036EC71F49367F3696977438154F176355E22918D9D2DC
05AEB2149FEBAB8694EF86277F7014B202D0407189029AB18A2CEBE97582BD03
B236B4B8BA4BA437CBB1B5FDD677E5A1934C627C81B37A166B367AB44A7AED50
8E452F8947445EC619512FE9E8E557BE8CA1AB2F633DAD33EED99CA2F3177E92
9517D7D07DE6C05308160A1F98ABE77FBF90ADD8707747A5EEEC49C743F418F3
7FA6C63CD740A5B3CDAFFF2DC50CB4A424B3F96FF8ABC3112671F132AEFD9ABA
9A19BD5374C93038196234B07657D7BE9DBAF4DB865E561BEDF4CB874B58C71F
B31C897DDCB7E3BE8359CE90F29108CC600C7C5ED53A746A6386400F84388850
790C7FE32CC04DFE7551633CD675252903DDD283C1BF42924DD89AA556568E14
87D42D6AEE8F7ADAB2FFD751083D7E37A2D0CB7D6CACBAA8A7300565961903CF
2D64D7E74F12F8980DE587364C085E7EA73082E9E97EC4B38B0014B2B8BB8AF2
E2540A5486042983EABAE3351B4952D0FA> |
4662 <001C60D8A8C9B5EE3100D9D4964289332C97237D6779A379F0B80231CB
2F8B5742D0FC69D2D31AC178FE29D4FF7DF7F387CEA7131B8236A6E30B96E84E
38517BE148F86294A54453495440B456BE9C4DCD3963786F89BB7509F209F32C
5B18D7A93B9C89D01C6FBDF2B47714356488A69CFEADEED56C4C261C2966B1D6
3468AD396E39097CCBF2D0AE0998F4729AEA49D49220CDCFD4F3F737A806AF41
80622E60B017BDAC68D2E72BFE451BC505C5FBE37DE51D2292E64160E46DED3D
379A6E5FBDCB6AE2D1264F6E0B512BAD5D50D6C32A3FBF800F8DC66BACC275FE
05920E5F38F6DCA773B3A14FD93022CB228497DB04350ABF7BD4A22BDE5B3B9B
88DD2082EE311481F63CC1FB18DCFCBE262198CC534CF567C0F385317AD9AFF3
295EA14DA78D98E31F8A76D597A5740F9082521CDBE4BAC561218F7306C7BF93
77773A982933BBAAAB7C63A9850C09D71EF55B136C0114DB0A4B8E7D6C572DFA
40AAC0130327F3AB4441F10C54FE55216790C6C954E19108550C8CDF01AD1942
BE7321BB2455518158087A73B22A890DA3AC0A6731D69F668D95> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
297.639 91.5698 mo
(\035$\033\340\0001\000&\022r-\()sh
297.639 105.961 mo
(\007\243\006\021\026\237\002\310\0226)sh
297.639 120.398 mo
(\033\240\031\236\0115\004\3245\011)sh
306.639 134.789 mo
(\004:\022r\0007\000&\0003)sh
.72 lw
327.51 157.821 mo
327.51 149.781 li
@
324.27 150.501 mo
327.51 140.781 li
330.87 150.501 li
324.27 150.501 li
cp
ef
297.75 35.4212 mo
355.95 35.4212 li
365.31 35.4212 372.87 27.8612 372.87 18.5012 cv
372.87 9.02116 365.31 1.46116 355.95 1.46116 cv
297.75 1.46116 li
288.39 1.46116 280.83 9.02116 280.83 18.5012 cv
280.83 27.8612 288.39 35.4212 297.75 35.4212 cv
cp
0 0 0 0 cmyk
ef
.24 lw
297.75 35.4212 mo
355.95 35.4212 li
365.31 35.4212 372.87 27.8612 372.87 18.5012 cv
372.87 9.02116 365.31 1.46116 355.95 1.46116 cv
297.75 1.46116 li
288.39 1.46116 280.83 9.02116 280.83 18.5012 cv
280.83 27.8612 288.39 35.4212 297.75 35.4212 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
FRZWPI+CIDFont+F1*1 [12 0 0 -12.0002 0 0 ]msf
312.627 14.898 mo
(return )
[3.95981 5.39996 3.23984 6 4.07996 5.99997 0 ]xsh
293.192 29.3006 mo
(NF_STOLEN)
[8.63998 6.71997 5.99997 6.60004 7.31998 8.75992 7.32001 7.31998 0 ]xsh
.72 lw
327.51 78.3811 mo
327.03 44.4212 li
@
323.79 45.2612 mo
326.79 35.4212 li
330.27 45.2612 li
323.79 45.2612 li
cp
ef
103.59 282.741 mo
139.11 261.501 li
174.51 282.741 li
139.11 303.981 li
103.59 282.741 li
cp
0 0 0 0 cmyk
ef
.24 lw
103.59 282.741 mo
139.11 261.501 li
174.51 282.741 li
139.11 303.981 li
103.59 282.741 li
cp
.750179 .679652 .670191 .901488 cmyk
@
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
112.108 286.48 mo
(\0005\0006\00075\236\005}\002\333)sh
gsave
-74.97 -85.0588 mo
-74.97 756.741 li
520.23 756.741 li
520.23 -85.0588 li
cp
eclp
103.59 351.861 mo
139.11 330.621 li
174.51 351.861 li
139.11 373.101 li
103.59 351.861 li
cp
0 0 0 0 cmyk
ef
103.59 351.861 mo
139.11 330.621 li
174.51 351.861 li
139.11 373.101 li
103.59 351.861 li
cp
.750179 .679652 .670191 .901488 cmyk
@
grestore
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 1 GetGlyphDirectory
41 <001C60D8A8C9B7A73DB969263B6835BBE0D0B30E8AC7D18E4FCE6FC2A93C
971C4FDCE86337D5D9994CA6E0BE35EEBA5B49D9895D0A6323947DD964A813D4
79A94280EF228916D78C89DD2411383AB68527EFC84B479E4E43BF3961864A66
1391B035089419222B94505BE67833BFE4DD869850E5AA63B634EA834A37B79A
764C7E2B7A62EF55B53C0071FEB6B93C22CAB0AB72F85188AE6464407C9764D5
DB91BC8DBDC3EE> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
130.108 355.575 mo
(\000\)\000,\0001)sh
103.59 414.381 mo
139.11 393.021 li
174.51 414.381 li
139.11 435.621 li
103.59 414.381 li
cp
0 0 0 0 cmyk
ef
103.59 414.381 mo
139.11 393.021 li
174.51 414.381 li
139.11 435.621 li
103.59 414.381 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 3 GetGlyphDirectory
40 <001C60D8A8C9B7A73DF0860A36B371C34F91E8026B9E3998D536C38198C6
5D54D936013C33291E41665CF87EB7AB23ABC584F58C1468258003111454F177
446F2264F65DCA30950F5FC123F95351A7017BADC197D32AD79375D6C2DB117A
275B31BF17538DBAD37466E21EE8BAF890C2D65EBD6A7F233421D91D3E6E1B71
A214336B8FC5CAFBEC1DC84167AC1AEDCFF28F201D77878A8074320A8C520E5D
BE86D3C9999B377E8416FBF36C154DD763899F5691AF84E2E887> |
39 <001C60D8A8C9B7A73DB9C530A911993F5F0F963DBD4138909D2A91F47A2F
AEE044110870DBA5E81BE74AE075AFAD57FFF392DCDFE49F56F14C5997693546
A7A50BF7A6492C33E08DB002146761DC55B352B36EF258B251415C32DECF07D2
ECC461958AECE5F3569DA3B96D0FAE3139B61939702C4C2402F375315812A98D
E30AB3231C9A686B7958441FE5E0F7639D2B0E4757B0F11535C77D> |
34 <001C60D8A8C9B7A73DB938E984D36AD527A9E9967E7AF60380BD8F864933
3E4D10B136EE9290776074AE9F4E210125445B89BADFAA64AE7BF186DF8F76A8
5C5FCC58B47248FBE37D0E98ECD7E1F80528302F57480B68BA784A0AE68511B4
B46D0BB9DF27013059504629A4826E23DB61FA652D21C08F88659C5BBFF81955
7AFBDC4F06617895B41DEC83F1CEC14B66A337D5FAF5AE789974666538D96025
96888304D4C6762C5404DB91167714866CA334006A5E600D35E199D364C2C634
1653A765F5B63F0761BCCE1E9259BF4450E51A5F9446047D87680C61945CB03E
A2A41B7D5CDCE823B2E55B7768764CA222B29F8D2A5892D7BF05432A13AC> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
112.108 417.967 mo
(\000\)\000,\0001\000B\0006\000\(\0001\000'\000")sh
11.55 261.501 mo
82.35 261.501 li
82.35 303.981 li
11.55 303.981 li
cp
0 0 0 0 cmyk
f
11.55 303.981 mo
82.35 303.981 li
82.35 261.501 li
11.55 261.501 li
11.55 303.981 li
cp
.750179 .679652 .670191 .901488 cmyk
@
%ADOBeginSubsetFont: FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FRZWPJ+CIDFont+F2-GBK-EUC-H 2 GetGlyphDirectory
3892 <001C60D8A8C9B5EE3102603E2E58CA84251A9593169BED5D4BF3DB54BE
3D43A6D54FB6157073936252CFEE5F4CE0D197F8CF3A97640DCAF8D0FBBF352C
F82AD85E2BEDD2D4EC766110D8E7A27879788020BF1B3905A7CEAD3BB0254A35
B5960AFD808144FEEC6740FBD6D639B2928767DF9CB7580A0AB2A3C3CA45B697
66C4E19DD65A7C505A75CFF7B20D928380644870ED2DDDE3130EAC04E4F966EC
28A360D68AEFA8D31341B0431DD5589858D4B4FFFD84D8E0995A67C3905884A0
7CD9BDA3502C9EA6457A0560E9BB2161D6D196A223A95CEB0F6CCE13C38036A8
B88229E0FEBEFCF4F4EC6A6F957224ED2B925F5D012C461A1F2E4B3ABC20D2C1
9AE3DA1B33A3C2E10CFE9810AA4DEC18E4> |
10806 <001C60D8A8C9B5EE3117BF1EBEBB6E3E48EB585396D2980FF6078D3F7
088F84A35F07FAC0D26753DB2A217E0DCFE8AD1BD4F76EC054213942CC60C5FE
9F02076D7D19FD45F76F1312867612935353A164EB2AF84A59C9E21F3010ED26
F3E48EE20AD7948BB2262A1DBAFBA05D3E411441F76E92BD34ED394812D5D4F4
04823B3E0B6E973D9B9B4D8D3109AD12AD8BF1DEF7AD716969A30D1B47D2F529
B53DDEAEB28DDD5C8566FAD3E6B9558775034F113216C28B1AEEFDC0A207BEB8
72BBE17FEBEA9A30B3828D8C60ADA4E4B33CF614F47BC0BCE3839DF1AFBA2871
D95B893CE36E00BDA79345AB5F7699F369623BA2EA74526907C83C6456A97A7B
21E826C944E212FFCB87D8453A0472B226CF5B0FDF12238E9> |
!
end
end end
%ADOEndSubsetFont
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
14.0925 286.48 mo
(\0005\0006\0007\030\325\033\267\0174*6)sh
.72 lw
103.59 282.741 mo
91.35 282.741 li
@
92.19 285.981 mo
82.35 282.741 li
92.19 279.501 li
92.19 285.981 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
87.03 275.183 mo
(\034_)sh
11.55 330.621 mo
82.35 330.621 li
82.35 373.101 li
11.55 373.101 li
cp
0 0 0 0 cmyk
f
.24 lw
11.55 373.101 mo
82.35 373.101 li
82.35 330.621 li
11.55 330.621 li
11.55 373.101 li
cp
.750179 .679652 .670191 .901488 cmyk
@
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
14.0925 355.575 mo
(\000\)\000,\0001\030\325\033\267\0174*6)sh
.72 lw
139.11 303.981 mo
139.11 321.621 li
@
142.35 320.781 mo
139.11 330.621 li
135.75 320.781 li
142.35 320.781 li
cp
ef
103.59 351.861 mo
91.35 351.861 li
@
92.19 355.101 mo
82.35 351.861 li
92.19 348.621 li
92.19 355.101 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
126.03 320.043 mo
(\012V)sh
86.1862 344.184 mo
(\034_)sh
139.11 373.101 mo
139.11 384.021 li
@
142.35 383.301 mo
139.11 393.021 li
135.75 383.301 li
142.35 383.301 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
120.264 387.873 mo
(\012V)sh
.24 lw
46.95 261.501 mo
46.95 50.0612 li
86.19 50.0612 li
@
85.47 47.3011 mo
93.75 50.0612 li
85.47 52.8212 li
85.47 47.3011 li
cp
ef
11.55 351.861 mo
.869995 351.861 li
.869995 50.0612 li
42.15 50.0612 li
@
41.43 47.3011 mo
46.95 50.0612 li
41.43 52.8212 li
41.43 47.3011 li
cp
ef
9.87 393.021 mo
80.67 393.021 li
80.67 435.621 li
9.87 435.621 li
cp
0 0 0 0 cmyk
f
9.87 435.621 mo
80.67 435.621 li
80.67 393.021 li
9.87 393.021 li
9.87 435.621 li
cp
.750179 .679652 .670191 .901488 cmyk
@
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
15.2644 417.967 mo
(\006\036\033i\0001\000&\(\346\0261)sh
.72 lw
103.59 414.381 mo
89.67 414.381 li
@
90.51 417.621 mo
80.67 414.381 li
90.51 411.021 li
90.51 417.621 li
cp
ef
.24 lw
9.87 414.381 mo
.869995 414.381 li
.869995 351.861 li
@
110.79 496.701 mo
168.87 496.701 li
178.23 496.701 185.79 489.021 185.79 479.661 cv
185.79 470.301 178.23 462.621 168.87 462.621 cv
110.79 462.621 li
101.31 462.621 93.75 470.301 93.75 479.661 cv
93.75 489.021 101.31 496.701 110.79 496.701 cv
cp
0 0 0 0 cmyk
ef
110.79 496.701 mo
168.87 496.701 li
178.23 496.701 185.79 489.021 185.79 479.661 cv
185.79 470.301 178.23 462.621 168.87 462.621 cv
110.79 462.621 li
101.31 462.621 93.75 470.301 93.75 479.661 cv
93.75 489.021 101.31 496.701 110.79 496.701 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
FRZWPI+CIDFont+F1*1 [12 0 0 -12.0002 0 0 ]msf
125.549 476.18 mo
(return )
[3.95982 5.39995 3.23987 5.99998 4.07994 5.99998 0 ]xsh
106.108 490.584 mo
(NF_ACCEPT)
[8.64 6.71996 5.99998 8.63998 8.03996 7.92003 7.31998 6.71996 0 ]xsh
.72 lw
139.11 435.621 mo
139.11 453.741 li
@
142.35 452.901 mo
139.11 462.621 li
135.75 452.901 li
142.35 452.901 li
cp
ef
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H findfont [12 0 0 -12.0002 0 0 ]msf
87.4987 406.717 mo
(\034_)sh
146.092 448.718 mo
(\012V)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/FRZWPJ+CIDFont+F2-GBK-EUC-H-Identity-H uf
/FRZWPJ+CIDFont+F2-GBK-EUC-H /CIDFont ur
/FRZWPI+CIDFont+F1*1 uf
/FRZWPI+CIDFont+F1 uf
/PBAAAA+CIDFont+F1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
